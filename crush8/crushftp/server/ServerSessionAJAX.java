package crushftp.server;

import com.crushftp.client.AgentUI;
import com.crushftp.client.Common;
import com.crushftp.client.FileClient;
import com.crushftp.client.File_B;
import com.crushftp.client.File_S;
import com.crushftp.client.File_U;
import com.crushftp.client.GDriveClient;
import com.crushftp.client.GenericClient;
import com.crushftp.client.VRL;
import com.crushftp.client.Worker;
import crushftp.db.SearchHandler;
import crushftp.gui.LOC;
import crushftp.handlers.Common;
import crushftp.handlers.Log;
import crushftp.handlers.PreviewWorker;
import crushftp.handlers.SessionCrush;
import crushftp.handlers.SharedSession;
import crushftp.handlers.TaskBridge;
import crushftp.handlers.UserTools;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.RandomAccessFile;
import java.io.StringReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Enumeration;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.Properties;
import java.util.Vector;
import java.util.zip.GZIPOutputStream;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

public class ServerSessionAJAX {
  ServerSessionHTTP thisSessionHTTP = null;
  
  public ServerSessionAJAX(ServerSessionHTTP thisSessionHTTP) {
    this.thisSessionHTTP = thisSessionHTTP;
  }
  
  public boolean checkLogin1(Properties request) throws Exception {
    if (this.thisSessionHTTP.thisSession.server_item.getProperty("recaptcha_enabled", "false").equals("true"))
      if (!validate_recaptcha(request))
        return false;  
    if (request.getProperty("clientid", "").equalsIgnoreCase("CrushFTPDrive") && ServerStatus.siIG("enterprise_level") <= 0)
      return false; 
    if (ServerStatus.BG("username_uppercase"))
      request.put("username", request.getProperty("username").toUpperCase()); 
    if (ServerStatus.BG("lowercase_usernames"))
      request.put("username", request.getProperty("username").toLowerCase()); 
    this.thisSessionHTTP.thisSession.uiPUT("user_name", "anonymous");
    this.thisSessionHTTP.thisSession.uiPUT("user_name_original", VRL.vrlDecode(this.thisSessionHTTP.thisSession.uiSG("user_name")));
    this.thisSessionHTTP.thisSession.uiPUT("current_password", VRL.vrlDecode(request.getProperty("password")));
    this.thisSessionHTTP.thisSession.uiPUT("user_name", VRL.vrlDecode(request.getProperty("username")));
    this.thisSessionHTTP.thisSession.uiPUT("clientid", request.getProperty("clientid", ""));
    this.thisSessionHTTP.thisSession.uiPUT("SAMLResponse", request.getProperty("SAMLResponse", ""));
    this.thisSessionHTTP.thisSession.uiPUT("user_name_original", this.thisSessionHTTP.thisSession.uiSG("user_name"));
    this.thisSessionHTTP.this_thread.setName(String.valueOf(this.thisSessionHTTP.thisSession.uiSG("user_name")) + ":(" + this.thisSessionHTTP.thisSession.uiSG("user_number") + ")-" + this.thisSessionHTTP.thisSession.uiSG("user_ip") + " (control)");
    this.thisSessionHTTP.thisSession.uiPUT("skip_proxy_check", "false");
    this.thisSessionHTTP.thisSession.runPlugin("beforeLogin", null);
    boolean good = this.thisSessionHTTP.thisSession.login_user_pass();
    this.thisSessionHTTP.setupSession();
    if (!good)
      ServerStatus.siPUT2("failed_logins", ServerStatus.IG("failed_logins") + 1); 
    return good;
  }
  
  public String checkLogin2(String response1, Properties request) {
    String response2 = "";
    if (this.thisSessionHTTP.thisSession.uiBG("password_expired")) {
      if (ServerStatus.BG("expire_password_email_token_only")) {
        response2 = "<loginResult><response>failure</response><message>Password Expired.  You must use the reset password link.</message></loginResult>";
      } else {
        response2 = "<loginResult><response>password_expired</response><message>You must change your password.</message></loginResult>";
      } 
    } else if (this.thisSessionHTTP.thisSession.BG("recaptcha_required_web")) {
      if (!request.getProperty("recaptcha_response_field", "").equals("") || !request.getProperty("g-recaptcha-response", "").equals("")) {
        try {
          if (validate_recaptcha(request)) {
            String session_id = this.thisSessionHTTP.thisSession.getId();
            response2 = "<loginResult><response>success</response><c2f>" + session_id.substring(session_id.length() - 4) + "</c2f></loginResult>";
          } else {
            response2 = "<loginResult><response>failure</response><message>reCAPTCHA failed.</message></loginResult>";
          } 
        } catch (Exception e) {
          Log.log("SERVER", 0, e);
          response2 = "<loginResult><response>failure</response><message>ERROR:" + e + "</message></loginResult>";
        } 
      } else {
        response2 = "<loginResult><response>RECAPTCHA</response><message>reCAPTCHA required.</message></loginResult>";
      } 
    } else {
      String session_id = this.thisSessionHTTP.thisSession.getId();
      response2 = "<loginResult><response>success</response><c2f>" + session_id.substring(session_id.length() - 4) + "</c2f></loginResult>";
    } 
    this.thisSessionHTTP.createCookieSession(false);
    Enumeration keys = request.keys();
    Properties request2 = (Properties)request.clone();
    while (keys.hasMoreElements()) {
      String key = (String)keys.nextElement();
      String val = request.getProperty(key, "");
      if (key.toUpperCase().indexOf("PASSWORD") >= 0)
        val = "******************"; 
      request2.put(key, val);
      this.thisSessionHTTP.thisSession.user_info.put("post_" + key, val);
    } 
    this.thisSessionHTTP.thisSession.user_info.put("post_parameters", request2);
    this.thisSessionHTTP.thisSession.do_event5("LOGIN", null);
    this.thisSessionHTTP.writeCookieAuth = true;
    SessionCrush session = (SessionCrush)SharedSession.find("crushftp.sessions").get(this.thisSessionHTTP.thisSession.getId());
    if (session == null) {
      response2 = "<loginResult><response>failure</response><message>session expired</message></loginResult>";
    } else {
      session.put("expire_time", "0");
      if (this.thisSessionHTTP.thisSession.IG("max_login_time") != 0)
        session.put("expire_time", (new StringBuffer(String.valueOf(System.currentTimeMillis() + (this.thisSessionHTTP.thisSession.IG("max_login_time") * 60000)))).toString()); 
      if (request.containsKey("clientid")) {
        session.put("clientid", request.getProperty("clientid"));
        this.thisSessionHTTP.thisSession.user_info.put("clientid", request.getProperty("clientid"));
      } 
      session.put("SESSION_RID", this.thisSessionHTTP.thisSession.uiSG("SESSION_RID"));
      if (this.thisSessionHTTP.thisSession.user_info.containsKey("eventResultText"))
        response1 = this.thisSessionHTTP.thisSession.user_info.getProperty("eventResultText"); 
    } 
    return String.valueOf(response1) + response2;
  }
  
  public boolean validate_recaptcha(Properties request) throws Exception {
    if (this.thisSessionHTTP.thisSession.server_item.getProperty("recaptcha_version", "2").equals("1"))
      return true; 
    if (this.thisSessionHTTP.thisSession.server_item.getProperty("recaptcha_version", "2").equals("2")) {
      boolean ok = false;
      String s = "secret=" + this.thisSessionHTTP.thisSession.server_item.getProperty("recaptcha_private_key", "") + "&remoteip=" + this.thisSessionHTTP.thisSession.uiSG("user_ip") + "&response=" + request.getProperty("g-recaptcha-response", "");
      Log.log("SERVER", 2, "Recaptcha:response=" + request.getProperty("g-recaptcha-response", ""));
      String result = "";
      if (Common.dmz_mode) {
        Vector queue = (Vector)Common.System2.get("crushftp.dmz.queue");
        Properties action = new Properties();
        action.put("type", "GET:SINGLETON");
        action.put("id", Common.makeBoundary());
        action.put("need_response", "true");
        queue.addElement(action);
        action = UserTools.waitResponse(action, 60);
        Object object = "";
        if (action != null)
          object = action.get("singleton_id"); 
        action = new Properties();
        action.put("type", "GET:RECAPTCHA_RESPONSE");
        action.put("id", Common.makeBoundary());
        action.put("recapcha_info", s);
        action.put("need_response", "true");
        action.put("singleton_id", object);
        queue.addElement(action);
        action = UserTools.waitResponse(action, 60);
        if (action != null)
          result = action.getProperty("responseText", ""); 
      } else {
        result = getRecaptchaResponse(s);
      } 
      BufferedReader br = new BufferedReader(new StringReader(result));
      while ((result = br.readLine()) != null) {
        if (result.indexOf("true") >= 0)
          ok = true; 
        Log.log("SERVER", 2, "Recaptcha:" + result);
      } 
      br.close();
      if (!ok)
        return false; 
    } 
    return true;
  }
  
  public static String getRecaptchaResponse(String s) throws Exception {
    HttpURLConnection urlc = (HttpURLConnection)(new URL("https://www.google.com/recaptcha/api/siteverify")).openConnection();
    urlc.setDoOutput(true);
    OutputStream out = urlc.getOutputStream();
    out.write(s.getBytes("UTF8"));
    out.close();
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    Common.streamCopier(urlc.getInputStream(), baos, false, true, true);
    urlc.disconnect();
    return new String(baos.toByteArray());
  }
  
  public boolean processItemAnonymous(Properties request, Properties urlRequestItems, String req_id) throws Exception {
    String command = request.getProperty("command", "");
    if (command.equalsIgnoreCase("ping")) {
      String response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n";
      response = String.valueOf(response) + "<pong>" + System.currentTimeMillis() + "</pong>";
      this.thisSessionHTTP.done = true;
      return writeResponse(response);
    } 
    if (command.equalsIgnoreCase("loginSettings")) {
      String response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n";
      response = String.valueOf(response) + "<info><save_password>" + ServerStatus.BG("allow_save_pass_phone") + "</save_password></info>";
      this.thisSessionHTTP.done = true;
      return writeResponse(response);
    } 
    if (command.equalsIgnoreCase("discard")) {
      this.thisSessionHTTP.done = true;
      return writeResponse("");
    } 
    if (request.getProperty("encoded", "true").equals("true") && (command.equalsIgnoreCase("login") || request.getProperty("the_action", "").equalsIgnoreCase("login"))) {
      this.thisSessionHTTP.createCookieSession(true);
      request.put("username", request.getProperty("username", "").trim());
      String response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n";
      if (checkLogin1(request)) {
        response = checkLogin2(response, request);
        if (!request.getProperty("redirect", "").equals("")) {
          this.thisSessionHTTP.sendRedirect("/WebInterface/error.html");
          write_command_http("Connection: close");
          write_command_http("Content-Length: 0");
          write_command_http("");
          return true;
        } 
        this.thisSessionHTTP.thisSession.active();
      } else {
        this.thisSessionHTTP.thisSession.uiPUT("user_name", "");
        this.thisSessionHTTP.thisSession.uiPUT("user_name_original", this.thisSessionHTTP.thisSession.uiSG("user_name"));
        Properties user_tmp = UserTools.ut.getUser(this.thisSessionHTTP.thisSession.server_item.getProperty("linkedServer"), VRL.vrlDecode(request.getProperty("username")), true);
        if (user_tmp != null && user_tmp.getProperty("recaptcha_required_web", "").equals("true")) {
          response = String.valueOf(response) + "<loginResult><response>RECAPTCHA</response><message>reCAPTCHA required.</message></loginResult>";
        } else if (this.thisSessionHTTP.thisSession.uiSG("plugin_message").indexOf("CHALLENGE:") >= 0) {
          response = String.valueOf(response) + "<loginResult><response>challenge</response><message>" + Common.url_encode(this.thisSessionHTTP.thisSession.uiSG("lastLog")) + "</message></loginResult>";
        } else if (this.thisSessionHTTP.thisSession.uiSG("lastLog").indexOf("CHALLENGE_OTP:") >= 0) {
          String last_log = this.thisSessionHTTP.thisSession.uiSG("lastLog");
          response = String.valueOf(response) + "<loginResult><response>challenge_otp</response><message>" + Common.url_encode(last_log.substring(last_log.indexOf(":") + 1)) + "</message></loginResult>";
        } else if (this.thisSessionHTTP.thisSession.uiSG("lastLog").indexOf("<response>") >= 0 && this.thisSessionHTTP.thisSession.uiSG("lastLog").indexOf("<message>") >= 0) {
          String message = this.thisSessionHTTP.thisSession.uiSG("lastLog").substring(this.thisSessionHTTP.thisSession.uiSG("lastLog").indexOf("<message>") + "<message>".length(), this.thisSessionHTTP.thisSession.uiSG("lastLog").indexOf("</message>"));
          response = String.valueOf(response) + "<loginResult><response>failure</response><message>" + Common.url_encode(Common.url_decode(message)) + "</message></loginResult>";
        } else {
          response = String.valueOf(response) + "<loginResult><response>failure</response><message>Check your username or password and try again.\r\n" + Common.url_encode(this.thisSessionHTTP.thisSession.uiSG("lastLog")) + "</message></loginResult>";
        } 
      } 
      return writeResponse(response);
    } 
    if (request.containsKey("u") || request.containsKey("p")) {
      this.thisSessionHTTP.createCookieSession(true);
      this.thisSessionHTTP.thisSession.uiPUT("user_name", "anonymous");
      this.thisSessionHTTP.thisSession.uiPUT("user_name_original", this.thisSessionHTTP.thisSession.uiSG("user_name"));
      request.put("password", request.getProperty("p", ""));
      request.put("username", request.getProperty("u", ""));
      boolean good = checkLogin1(request);
      if (good) {
        checkLogin2("", request);
        String autoPath = request.getProperty("path", "/");
        urlRequestItems.remove("p");
        this.thisSessionHTTP.thisSession.active();
        autoPath = autoPath.replace('\\', '/');
        while (autoPath.indexOf("//") >= 0)
          autoPath = autoPath.replaceAll("//", "/"); 
        if (!this.thisSessionHTTP.thisSession.user_info.getProperty("redirect_url", "").equals("")) {
          autoPath = this.thisSessionHTTP.thisSession.user_info.getProperty("redirect_url", "");
          this.thisSessionHTTP.thisSession.user_info.put("redirect_url", "");
        } 
        if (!autoPath.endsWith("/") && !autoPath.equals("") && autoPath.indexOf("/WebInterface/") < 0 && ServerStatus.BG("direct_link_access")) {
          String header0 = this.thisSessionHTTP.headers.elementAt(0).toString();
          header0 = String.valueOf(header0.substring(0, header0.indexOf(" "))) + " " + Common.dots(autoPath) + header0.substring(header0.lastIndexOf(" "));
          this.thisSessionHTTP.headers.setElementAt(header0, 0);
          request.remove("path");
          return false;
        } 
        Properties wi_customizations = new Properties();
        Properties metas = new Properties();
        Enumeration keys = request.keys();
        while (keys.hasMoreElements()) {
          String key = (String)keys.nextElement();
          if (key.toLowerCase().startsWith("wi_")) {
            String val = request.remove(key).toString();
            val = Common.url_decode(val);
            wi_customizations.put(key.substring(3), val);
            continue;
          } 
          if (key.toLowerCase().startsWith("meta_")) {
            String val = request.remove(key).toString();
            val = Common.url_decode(val);
            metas.put(key.substring(5), val);
          } 
        } 
        if (wi_customizations.size() > 0)
          this.thisSessionHTTP.thisSession.put("wi_customizations", wi_customizations); 
        if (metas.size() > 0)
          this.thisSessionHTTP.thisSession.put("metas", metas); 
        if (ServerStatus.BG("direct_link_to_webinterface")) {
          this.thisSessionHTTP.sendRedirect("/#" + autoPath);
          write_command_http("Content-Length: 0");
          write_command_http("");
          return true;
        } 
        this.thisSessionHTTP.sendRedirect(autoPath);
        write_command_http("Content-Length: 0");
        write_command_http("");
        return true;
      } 
      if (!this.thisSessionHTTP.thisSession.user_info.getProperty("redirect_url", "").equals("")) {
        this.thisSessionHTTP.sendRedirect(this.thisSessionHTTP.thisSession.user_info.getProperty("redirect_url", ""));
        write_command_http("Content-Length: 0");
        write_command_http("");
        return true;
      } 
      if (!request.getProperty("u", "").equals("") && !request.getProperty("p", "").equals("")) {
        this.thisSessionHTTP.sendRedirect("/WebInterface/login.html?u=" + request.getProperty("u") + (ServerStatus.BG("webinterface_redirect_with_password") ? ("&p=" + request.getProperty("p")) : ""));
      } else if (!request.getProperty("u", "").equals("") && request.getProperty("p", "").equals("")) {
        this.thisSessionHTTP.sendRedirect("/WebInterface/login.html?u=" + request.getProperty("u"));
      } else if (request.getProperty("u", "").equals("") && !request.getProperty("p", "").equals("")) {
        this.thisSessionHTTP.sendRedirect("/WebInterface/login.html?p=" + request.getProperty("p"));
      } else if (request.getProperty("u", "").equals("") && request.getProperty("p", "").equals("") && !request.getProperty("path", "").equals("")) {
        this.thisSessionHTTP.sendRedirect("/WebInterface/login.html?path=" + request.getProperty("path"));
      } 
      write_command_http("Content-Length: 0");
      write_command_http("");
      return true;
    } 
    if (command.equalsIgnoreCase("emailpassword") || request.getProperty("the_action", "").equalsIgnoreCase("emailpassword")) {
      String response = doEmailPass(request, this.thisSessionHTTP.thisSession, req_id);
      response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n<emailPass><response>" + response + "</response></emailPass>";
      return writeResponse(response);
    } 
    if (command.equalsIgnoreCase("request_reset")) {
      String response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n";
      String reset_username_email = Common.url_decode(request.getProperty("reset_username_email"));
      String responseText = "";
      String token = Common.makeBoundary();
      if (Common.dmz_mode) {
        Vector queue = (Vector)Common.System2.get("crushftp.dmz.queue");
        Properties action = new Properties();
        action.put("type", "GET:SINGLETON");
        action.put("id", Common.makeBoundary());
        action.put("need_response", "true");
        queue.addElement(action);
        action = UserTools.waitResponse(action, 60);
        Object object = "";
        if (action != null)
          object = action.get("singleton_id"); 
        action = new Properties();
        action.put("type", "GET:RESET_TOKEN");
        action.put("id", Common.makeBoundary());
        action.put("reset_username_email", reset_username_email);
        action.put("currentURL", request.getProperty("currentURL"));
        try {
          Properties tmp_vfs_item = (Properties)UserTools.ut.getVirtualVFS(this.thisSessionHTTP.thisSession.server_item.getProperty("linkedServer"), "template").get("/internal");
          VRL tmp_url = new VRL(((Properties)((Vector)tmp_vfs_item.get("vItems")).elementAt(0)).getProperty("url"));
          action.put("internal_port", (new StringBuffer(String.valueOf(tmp_url.getPort()))).toString());
        } catch (Exception e) {
          Log.log("SERVER", 1, e);
        } 
        action.put("need_response", "true");
        action.put("reset_token", token);
        action.put("singleton_id", object);
        queue.addElement(action);
        action = UserTools.waitResponse(action, 300);
        if (action != null)
          Object object1 = action.get("responseText"); 
      } else {
        responseText = doResetToken(reset_username_email, request.getProperty("currentURL"), this.thisSessionHTTP.thisSession.server_item.getProperty("linkedServer"), token, true);
      } 
      response = String.valueOf(response) + "<commandResult><response>" + Common.url_encode(responseText) + "</response></commandResult>";
      return writeResponse(response);
    } 
    if (command.equalsIgnoreCase("reset_password")) {
      String response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n";
      String responseText = "This password reset link is invalid or expired.";
      if (Common.dmz_mode) {
        Vector queue = (Vector)Common.System2.get("crushftp.dmz.queue");
        Properties action = new Properties();
        action.put("type", "GET:RESET_TOKEN_PASS");
        action.put("id", Common.makeBoundary());
        action.put("resetToken", request.getProperty("resetToken"));
        action.put("password1", request.getProperty("password1"));
        try {
          Properties tmp_vfs_item = (Properties)UserTools.ut.getVirtualVFS(this.thisSessionHTTP.thisSession.server_item.getProperty("linkedServer"), "template").get("/internal");
          VRL tmp_url = new VRL(((Properties)((Vector)tmp_vfs_item.get("vItems")).elementAt(0)).getProperty("url"));
          action.put("internal_port", (new StringBuffer(String.valueOf(tmp_url.getPort()))).toString());
        } catch (Exception e) {
          Log.log("SERVER", 1, e);
        } 
        action.put("need_response", "true");
        queue.addElement(action);
        action = UserTools.waitResponse(action, 300);
        if (action != null)
          Object object = action.get("responseText"); 
      } else {
        responseText = doResetTokenPass(request.getProperty("resetToken"), this.thisSessionHTTP.thisSession.server_item.getProperty("linkedServer"), request.getProperty("password1"), this.thisSessionHTTP.thisSession.user_info);
      } 
      response = String.valueOf(response) + "<commandResult><response>" + responseText + "</response></commandResult>";
      return writeResponse(response);
    } 
    if (command.equalsIgnoreCase("getSessionTimeout")) {
      long time = Long.parseLong(this.thisSessionHTTP.thisSession.getProperty("last_activity", (new StringBuffer(String.valueOf(System.currentTimeMillis()))).toString()));
      long timeout = 60L * ServerStatus.LG("http_session_timeout");
      if (this.thisSessionHTTP.thisSession.user != null) {
        long timeout2 = Long.parseLong(this.thisSessionHTTP.thisSession.user.getProperty("max_idle_time", "10"));
        if (timeout2 < 0L) {
          timeout = timeout2 * -1L;
        } else if (timeout2 != 0L && timeout2 < timeout) {
          timeout = 60L * timeout2;
        } 
      } 
      long remaining = timeout - (new Date()).getTime() / 1000L - time / 1000L;
      try {
        if (!this.thisSessionHTTP.thisSession.getProperty("expire_time").equals("0"))
          remaining = (Long.parseLong(this.thisSessionHTTP.thisSession.getProperty("expire_time")) - System.currentTimeMillis()) / 1000L; 
      } catch (Exception exception) {}
      if (!this.thisSessionHTTP.thisSession.uiBG("user_logged_in")) {
        Thread.sleep(10000L);
        if (!this.thisSessionHTTP.thisSession.uiBG("user_logged_in"))
          remaining = 0L; 
      } 
      String response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n";
      response = String.valueOf(response) + "<commandResult><response>" + remaining + "</response></commandResult>";
      return writeResponse(response);
    } 
    if (command.equalsIgnoreCase("register_gdrive_api")) {
      ByteArrayOutputStream baos = new ByteArrayOutputStream();
      baos.write("Finished.".getBytes());
      this.thisSessionHTTP.thisSession.put("gdrive_api_code", request.getProperty("code"));
      this.thisSessionHTTP.thisSession.get("gdrive_api_code");
      write_command_http("HTTP/1.1 200 OK");
      write_command_http("Cache-Control: no-store");
      write_command_http("Content-Type: text/html");
      this.thisSessionHTTP.write_standard_headers();
      write_command_http("Content-Length: " + baos.size());
      write_command_http("");
      this.thisSessionHTTP.original_os.write(baos.toByteArray());
      this.thisSessionHTTP.original_os.flush();
      return true;
    } 
    if (command.equalsIgnoreCase("lookup_gdrive_api_code")) {
      String response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n";
      if (this.thisSessionHTTP.thisSession.getProperty("gdrive_api_code") != null) {
        Object object = this.thisSessionHTTP.thisSession.remove("gdrive_api_code");
        Properties p = GDriveClient.setup_bearer((String)object, request.getProperty("server_url"), request.getProperty("google_client_info").split("~")[0], request.getProperty("google_client_info").split("~")[1]);
        response = String.valueOf(response) + "<commandResult><response>" + p.getProperty("refresh_token", p.getProperty("access_token")) + "</response></commandResult>";
      } else {
        response = String.valueOf(response) + "<commandResult><response></response></commandResult>";
      } 
      return writeResponse(response);
    } 
    if (command.equalsIgnoreCase("encryptPassword")) {
      String pass = VRL.vrlDecode(Common.url_decode(request.getProperty("password")));
      String encryptedPass = ServerStatus.thisObj.common_code.encode_pass(pass, "DES", "");
      String response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n";
      response = String.valueOf(response) + "<result><response>" + Common.url_encode(encryptedPass) + "</response></result>";
      return writeResponse(response);
    } 
    if (command.equalsIgnoreCase("taskResponse")) {
      Vector v = ServerStatus.siVG("running_tasks");
      String result = "Invalid task, or key.";
      for (int x = v.size() - 1; x >= 0; x--) {
        Properties tracker = v.elementAt(x);
        if (tracker.getProperty("id").equals(request.getProperty("job_id", "")) && tracker.containsKey(request.getProperty("task_key", ""))) {
          tracker.put(request.getProperty("task_key"), request.getProperty("task_val"));
          Thread.sleep(2300L);
          result = tracker.getProperty(String.valueOf(request.getProperty("task_key")) + "_result", "No result.");
        } 
      } 
      String response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n";
      response = String.valueOf(response) + "<result><response>" + Common.url_encode(result) + "</response></result>";
      return writeResponse(response);
    } 
    return false;
  }
  
  public static String doResetTokenPass(String resetToken, String linkedServer, String password1, Properties user_info) {
    String responseText = "";
    Properties resetTokens = ServerStatus.siPG("resetTokens");
    if (resetTokens == null)
      resetTokens = new Properties(); 
    ServerStatus.thisObj.server_info.put("resetTokens", resetTokens);
    if (resetTokens.containsKey(resetToken)) {
      Properties reset = (Properties)resetTokens.get(resetToken);
      Properties password_rules = SessionCrush.build_password_rules(reset);
      if (reset.getProperty("site", "").indexOf("(SITE_PASS)") < 0) {
        responseText = "ERROR: Your username does not allow password changes.";
      } else if (!Common.checkPasswordRequirements(Common.url_decode(password1), reset.getProperty("password_history", ""), password_rules).equals("")) {
        responseText = "ERROR: " + Common.checkPasswordRequirements(Common.url_decode(password1), reset.getProperty("password_history", ""), password_rules);
      } else {
        resetTokens.remove(resetToken);
        UserTools.ut.put_in_user(linkedServer, reset.getProperty("username"), "password", ServerStatus.thisObj.common_code.encode_pass(Common.url_decode(password1), ServerStatus.SG("password_encryption"), UserTools.ut.getUser(linkedServer, reset.getProperty("username"), false).getProperty("salt", "")), true, true);
        UserTools.ut.put_in_user(linkedServer, reset.getProperty("username"), "password_history", Common.getPasswordHistory(Common.url_decode(password1), reset.getProperty("password_history", ""), password_rules), true, true);
        if (!reset.getProperty("expire_password_days", "0").equals("0") && !reset.getProperty("expire_password_days", "0").equals("")) {
          Calendar gc = new GregorianCalendar();
          gc.setTime(new Date());
          gc.add(5, Integer.parseInt(reset.getProperty("expire_password_days", "0")));
          SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy hh:mm:ss aa", Locale.US);
          String s = sdf.format(gc.getTime());
          UserTools.ut.put_in_user(linkedServer, reset.getProperty("username"), "expire_password_when", s, true, true);
        } 
        responseText = "Password changed.  Please login using your new password.";
        if (user_info.containsKey("user_name"))
          user_info.put("user_name", reset.getProperty("username")); 
        SessionCrush tempSession = new SessionCrush(null, 1, "127.0.0.1", 0, "0.0.0.0", "MainUsers", new Properties());
        tempSession.user = reset;
        tempSession.user_info = user_info;
        ServerStatus.thisObj.runAlerts("password_change", null, user_info, tempSession);
        Common.send_change_pass_email(tempSession);
      } 
    } else {
      responseText = "ERROR: The link is invalid or expired.";
    } 
    return responseText;
  }
  
  public static String doResetToken(String reset_username_email, String currentURL, String linkedServer, String token, boolean sendEmail) throws IOException {
    reset_username_email = Common.url_decode(reset_username_email);
    String responseText = "";
    Vector newUsers = new Vector();
    UserTools.refreshUserList(linkedServer, newUsers);
    Vector matchingUsernames = UserTools.findUserEmail(linkedServer, reset_username_email);
    if (UserTools.db_class.equalsIgnoreCase("SQL") && matchingUsernames.isEmpty()) {
      Properties user = UserTools.ut.getUser(linkedServer, reset_username_email, true);
      if (user != null)
        matchingUsernames.addElement(user); 
    } 
    for (int x = matchingUsernames.size() - 1; x >= 0; x--) {
      Properties user = matchingUsernames.elementAt(x);
      if (user.getProperty("email", "").equals("") || (!user.getProperty("username").equalsIgnoreCase(reset_username_email) && !user.getProperty("email", "").equalsIgnoreCase(reset_username_email))) {
        matchingUsernames.removeElementAt(x);
      } else {
        matchingUsernames.setElementAt(user, x);
      } 
    } 
    if (matchingUsernames.size() == 1) {
      Properties user = matchingUsernames.elementAt(0);
      Properties resetTokens = ServerStatus.siPG("resetTokens");
      if (resetTokens == null)
        resetTokens = new Properties(); 
      ServerStatus.thisObj.server_info.put("resetTokens", resetTokens);
      Properties reset = UserTools.ut.getUser(linkedServer, user.getProperty("username"), true);
      reset.put("generated", (new StringBuffer(String.valueOf(System.currentTimeMillis()))).toString());
      resetTokens.put(token, reset);
      String url = String.valueOf(currentURL) + "?token=" + token;
      String resetMsg = ServerStatus.SG("password_reset_message");
      resetMsg = Common.replace_str(resetMsg, "{url}", url);
      resetMsg = ServerStatus.change_vars_to_values_static(resetMsg, user, new Properties(), null);
      if (sendEmail)
        Common.send_mail(ServerStatus.SG("discovered_ip"), reset.getProperty("email"), "", "", ServerStatus.SG("smtp_from"), ServerStatus.SG("password_reset_subject"), resetMsg, ServerStatus.SG("smtp_server"), ServerStatus.SG("smtp_user"), ServerStatus.SG("smtp_pass"), ServerStatus.SG("smtp_ssl").equals("true"), true, (File_B[])null); 
      responseText = ServerStatus.SG("password_reset_message_browser");
    } else {
      responseText = ServerStatus.SG("password_reset_message_browser_bad");
      Log.log("SERVER", 0, "Unable to locate the user...found matching usernames:" + matchingUsernames);
    } 
    return responseText;
  }
  
  public static String doEmailPass(Properties p, SessionCrush thisSession, String req_id) {
    String lookupUsername = p.getProperty("username");
    Properties lookupUser = null;
    if (Common.dmz_mode) {
      Vector queue = (Vector)Common.System2.get("crushftp.dmz.queue");
      Properties action = new Properties();
      action.put("type", "GET:USER");
      action.put("id", Common.makeBoundary());
      action.put("username", lookupUsername);
      action.put("need_response", "true");
      queue.addElement(action);
      action = UserTools.waitResponse(action, 60);
      if (action != null)
        lookupUser = (Properties)action.get("user"); 
    } else {
      thisSession.verify_user(lookupUsername, "", true);
      lookupUser = thisSession.user;
    } 
    thisSession.user = null;
    String result = "";
    String standardError = LOC.G("An email has been sent if the user was found.  If no email is received, then the username / email didn't exist or you are not allowed to have your password emailed to you.");
    if (ServerStatus.SG("smtp_server").equals("")) {
      result = LOC.G("This server is not configured to send email password reminders.");
    } else if (lookupUser == null) {
      lookupUser = new Properties();
      result = standardError;
    } else if (lookupUser.getProperty("site", "").toUpperCase().indexOf("(SITE_EMAILPASSWORD)") >= 0) {
      String pass = lookupUser.getProperty("password", "");
      if (pass.startsWith("SHA:") || pass.startsWith("SHA512:") || pass.startsWith("SHA256:") || pass.startsWith("SHA3:") || pass.startsWith("MD5:") || pass.startsWith("CRYPT3:")) {
        pass = LOC.G("(Your password is encrypted and cannot be revealed.  Please contact your server administrator to have it reset.)");
      } else {
        pass = (new Common()).decode_pass(pass);
      } 
      lookupUser.put("user_name", lookupUser.getProperty("username"));
      String to = lookupUser.getProperty("email", "");
      String from = ServerStatus.SG("smtp_from");
      if (from.equals(""))
        from = to; 
      if (!to.equals("")) {
        if (ServerStatus.BG("expire_emailed_passwords")) {
          Properties tempUser = UserTools.ut.getUser(thisSession.server_item.getProperty("linkedServer"), lookupUsername, false);
          tempUser.put("expire_password_when", "01/01/1978 12:00:00 AM");
          if (!Common.dmz_mode)
            UserTools.writeUser(thisSession.server_item.getProperty("linkedServer"), lookupUsername, tempUser); 
        } 
        String subject = ServerStatus.SG("emailReminderSubjectText");
        String body = ServerStatus.SG("emailReminderBodyText");
        body = Common.replace_str(body, "%user_pass%", pass);
        body = Common.replace_str(body, "{user_pass}", pass);
        Properties user_info2 = (Properties)thisSession.user_info.clone();
        user_info2.putAll(lookupUser);
        subject = ServerStatus.thisObj.change_vars_to_values(subject, lookupUser, user_info2, null);
        body = ServerStatus.thisObj.change_vars_to_values(body, lookupUser, user_info2, null);
        result = Common.send_mail(ServerStatus.SG("discovered_ip"), to, "", "", from, subject, body, ServerStatus.SG("smtp_server"), ServerStatus.SG("smtp_user"), ServerStatus.SG("smtp_pass"), ServerStatus.SG("smtp_ssl").equals("true"), ServerStatus.SG("smtp_html").equals("true"), (File_B[])null);
        thisSession.add_log_formatted(String.valueOf(LOC.G("Password Emailed to user:")) + lookupUsername + "  " + to + "   " + LOC.G("Email Result:") + result, "POST", req_id);
        if (result.toUpperCase().indexOf("ERROR") >= 0) {
          result = LOC.G("An error occured when generating the email.");
        } else {
          result = standardError;
        } 
      } else {
        result = standardError;
      } 
    } else {
      result = standardError;
    } 
    return result;
  }
  
  public boolean getUserName(Properties request) throws Exception {
    if (request.getProperty("command", "").equalsIgnoreCase("getUserName")) {
      String response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n";
      if (ServerStatus.BG("csrf") && !request.getProperty("c2f", "").equals("")) {
        String session_id = this.thisSessionHTTP.thisSession.getId();
        try {
          if (!request.getProperty("c2f", "").equalsIgnoreCase(session_id.substring(session_id.length() - 4))) {
            this.thisSessionHTTP.thisSession.uiVG("failed_commands").addElement((new Date()).getTime());
            response = String.valueOf(response) + "<commandResult><response>FAILURE:Access Denied. (c2f)</response></commandResult>";
            return writeResponse(response);
          } 
        } catch (Exception e) {
          Log.log("HTTP_SERVER", 2, e);
          this.thisSessionHTTP.thisSession.uiVG("failed_commands").addElement((new Date()).getTime());
          response = String.valueOf(response) + "<loginResult><response>failure</response></loginResult>";
          return writeResponse(response);
        } 
      } 
      if (this.thisSessionHTTP.thisSession.uiBG("user_logged_in") && !this.thisSessionHTTP.thisSession.uiSG("user_name").equals("")) {
        response = String.valueOf(response) + "<loginResult><response>success</response><username>" + this.thisSessionHTTP.thisSession.uiSG("user_name") + "</username></loginResult>";
      } else {
        response = String.valueOf(response) + "<loginResult><response>failure</response></loginResult>";
      } 
      return writeResponse(response);
    } 
    return false;
  }
  
  public boolean processItems(Properties request, Vector byteRanges, String req_id) throws Exception {
    // Byte code:
    //   0: aload_0
    //   1: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   4: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   7: ldc_w 'site'
    //   10: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   13: astore #4
    //   15: aload_1
    //   16: ldc_w 'command'
    //   19: ldc ''
    //   21: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24: astore #5
    //   26: aload #4
    //   28: ldc_w '(CONNECT)'
    //   31: invokevirtual indexOf : (Ljava/lang/String;)I
    //   34: iflt -> 42
    //   37: goto_w -> 175
    //   42: aload_1
    //   43: ldc_w 'serverGroup_original'
    //   46: aload_1
    //   47: ldc_w 'serverGroup'
    //   50: ldc ''
    //   52: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   55: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   58: pop
    //   59: aload_1
    //   60: ldc_w 'serverGroup'
    //   63: aload_0
    //   64: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   67: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   70: getfield server_item : Ljava/util/Properties;
    //   73: ldc_w 'linkedServer'
    //   76: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   79: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   82: pop
    //   83: aload_1
    //   84: ldc_w 'serverGroup_backup'
    //   87: aload_1
    //   88: ldc_w 'serverGroup'
    //   91: ldc ''
    //   93: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   96: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   99: pop
    //   100: aload_0
    //   101: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   104: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   107: ldc_w 'admin_group_name'
    //   110: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   113: astore #6
    //   115: aload #6
    //   117: ldc ''
    //   119: invokevirtual equals : (Ljava/lang/Object;)Z
    //   122: ifeq -> 130
    //   125: goto_w -> 146
    //   130: aload #6
    //   132: ldc_w 'admin_group_name'
    //   135: invokevirtual equals : (Ljava/lang/Object;)Z
    //   138: ifne -> 146
    //   141: goto_w -> 160
    //   146: aload_0
    //   147: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   150: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   153: ldc 'user_name'
    //   155: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   158: astore #6
    //   160: aload_0
    //   161: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   164: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   167: ldc_w 'admin_group_name'
    //   170: aload #6
    //   172: invokevirtual put : (Ljava/lang/String;Ljava/lang/Object;)V
    //   175: aload_0
    //   176: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   179: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   182: invokevirtual getId : ()Ljava/lang/String;
    //   185: astore #6
    //   187: ldc_w 'csrf'
    //   190: invokestatic BG : (Ljava/lang/String;)Z
    //   193: ifne -> 201
    //   196: goto_w -> 454
    //   201: aload_1
    //   202: ldc_w 'command'
    //   205: ldc ''
    //   207: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   210: ldc ''
    //   212: invokevirtual equals : (Ljava/lang/Object;)Z
    //   215: ifeq -> 223
    //   218: goto_w -> 454
    //   223: aload_1
    //   224: ldc_w 'command'
    //   227: ldc ''
    //   229: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   232: ldc_w 'getUserInfo'
    //   235: invokevirtual equals : (Ljava/lang/Object;)Z
    //   238: ifne -> 246
    //   241: goto_w -> 276
    //   246: aload_1
    //   247: ldc_w 'c2f'
    //   250: ldc ''
    //   252: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   255: ldc 'false'
    //   257: invokevirtual equals : (Ljava/lang/Object;)Z
    //   260: ifne -> 268
    //   263: goto_w -> 276
    //   268: aload_0
    //   269: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   272: iconst_1
    //   273: putfield writeCookieAuth : Z
    //   276: new java/lang/StringBuffer
    //   279: dup
    //   280: ldc_w ','
    //   283: invokespecial <init> : (Ljava/lang/String;)V
    //   286: ldc_w 'whitelist_web_commands'
    //   289: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   292: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   295: ldc_w ','
    //   298: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   301: invokevirtual toString : ()Ljava/lang/String;
    //   304: new java/lang/StringBuffer
    //   307: dup
    //   308: ldc_w ','
    //   311: invokespecial <init> : (Ljava/lang/String;)V
    //   314: aload_1
    //   315: ldc_w 'command'
    //   318: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   321: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   324: ldc_w ','
    //   327: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   330: invokevirtual toString : ()Ljava/lang/String;
    //   333: invokevirtual indexOf : (Ljava/lang/String;)I
    //   336: iflt -> 344
    //   339: goto_w -> 454
    //   344: aload_0
    //   345: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   348: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   351: getfield user_info : Ljava/util/Properties;
    //   354: ldc_w 'authorization_header'
    //   357: ldc 'false'
    //   359: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   362: ldc 'false'
    //   364: invokevirtual equals : (Ljava/lang/Object;)Z
    //   367: ifne -> 375
    //   370: goto_w -> 454
    //   375: aload_1
    //   376: ldc_w 'c2f'
    //   379: ldc ''
    //   381: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   384: aload #6
    //   386: aload #6
    //   388: invokevirtual length : ()I
    //   391: iconst_4
    //   392: isub
    //   393: invokevirtual substring : (I)Ljava/lang/String;
    //   396: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   399: ifeq -> 407
    //   402: goto_w -> 454
    //   407: aload_0
    //   408: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   411: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   414: ldc_w 'failed_commands'
    //   417: invokevirtual uiVG : (Ljava/lang/String;)Ljava/util/Vector;
    //   420: new java/lang/StringBuffer
    //   423: dup
    //   424: invokespecial <init> : ()V
    //   427: new java/util/Date
    //   430: dup
    //   431: invokespecial <init> : ()V
    //   434: invokevirtual getTime : ()J
    //   437: invokevirtual append : (J)Ljava/lang/StringBuffer;
    //   440: invokevirtual toString : ()Ljava/lang/String;
    //   443: invokevirtual addElement : (Ljava/lang/Object;)V
    //   446: aload_0
    //   447: ldc_w '<commandResult><response>FAILURE:Access Denied. (c2f)</response></commandResult>'
    //   450: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   453: ireturn
    //   454: aload #5
    //   456: ldc_w 'getServerItem'
    //   459: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   462: ifne -> 470
    //   465: goto_w -> 555
    //   470: aload #5
    //   472: aload #4
    //   474: aload_0
    //   475: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   478: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   481: ldc 'user_ip'
    //   483: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   486: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   489: ifne -> 497
    //   492: goto_w -> 547
    //   497: aload_0
    //   498: aload_0
    //   499: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   502: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   505: ldc_w 'admin_group_name'
    //   508: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   511: aload_1
    //   512: aload #4
    //   514: aload_0
    //   515: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   518: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   521: getfield user : Ljava/util/Properties;
    //   524: invokestatic getServerItem : (Ljava/lang/String;Ljava/util/Properties;Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/Object;
    //   527: ldc_w 'result_value'
    //   530: ldc_w 'OK'
    //   533: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   536: iconst_0
    //   537: sipush #200
    //   540: iconst_0
    //   541: iconst_0
    //   542: iconst_0
    //   543: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   546: ireturn
    //   547: aload_0
    //   548: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   551: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   554: ireturn
    //   555: aload #5
    //   557: ldc_w 'getDashboardItems'
    //   560: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   563: ifne -> 571
    //   566: goto_w -> 633
    //   571: aload #5
    //   573: aload #4
    //   575: aload_0
    //   576: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   579: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   582: ldc 'user_ip'
    //   584: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   587: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   590: ifne -> 598
    //   593: goto_w -> 625
    //   598: aload_0
    //   599: aload_1
    //   600: aload #4
    //   602: invokestatic getDashboardItems : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/Object;
    //   605: ldc_w 'result_value'
    //   608: ldc_w 'OK'
    //   611: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   614: iconst_0
    //   615: sipush #200
    //   618: iconst_0
    //   619: iconst_0
    //   620: iconst_0
    //   621: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   624: ireturn
    //   625: aload_0
    //   626: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   629: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   632: ireturn
    //   633: aload #5
    //   635: ldc_w 'getServerInfoItems'
    //   638: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   641: ifne -> 649
    //   644: goto_w -> 711
    //   649: aload #5
    //   651: aload #4
    //   653: aload_0
    //   654: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   657: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   660: ldc 'user_ip'
    //   662: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   665: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   668: ifne -> 676
    //   671: goto_w -> 703
    //   676: aload_0
    //   677: aload_1
    //   678: aload #4
    //   680: invokestatic getServerInfoItems : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/Object;
    //   683: ldc_w 'result_value'
    //   686: ldc_w 'OK'
    //   689: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   692: iconst_0
    //   693: sipush #200
    //   696: iconst_0
    //   697: iconst_0
    //   698: iconst_0
    //   699: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   702: ireturn
    //   703: aload_0
    //   704: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   707: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   710: ireturn
    //   711: aload #5
    //   713: ldc_w 'getServerSettingItems'
    //   716: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   719: ifne -> 727
    //   722: goto_w -> 810
    //   727: aload_1
    //   728: ldc_w 'admin_group_name'
    //   731: aload_0
    //   732: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   735: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   738: ldc_w 'admin_group_name'
    //   741: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   744: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   747: pop
    //   748: aload #5
    //   750: aload #4
    //   752: aload_0
    //   753: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   756: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   759: ldc 'user_ip'
    //   761: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   764: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   767: ifne -> 775
    //   770: goto_w -> 802
    //   775: aload_0
    //   776: aload_1
    //   777: aload #4
    //   779: invokestatic getServerSettingItems : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/Object;
    //   782: ldc_w 'result_value'
    //   785: ldc_w 'OK'
    //   788: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   791: iconst_0
    //   792: sipush #200
    //   795: iconst_0
    //   796: iconst_0
    //   797: iconst_0
    //   798: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   801: ireturn
    //   802: aload_0
    //   803: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   806: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   809: ireturn
    //   810: aload #5
    //   812: ldc_w 'getStatHistory'
    //   815: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   818: ifne -> 826
    //   821: goto_w -> 877
    //   826: aload #5
    //   828: aload #4
    //   830: aload_0
    //   831: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   834: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   837: ldc 'user_ip'
    //   839: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   842: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   845: ifne -> 853
    //   848: goto_w -> 869
    //   853: aload_0
    //   854: aload_1
    //   855: invokestatic getStatHistory : (Ljava/util/Properties;)Ljava/lang/String;
    //   858: iconst_0
    //   859: sipush #200
    //   862: iconst_1
    //   863: iconst_0
    //   864: iconst_0
    //   865: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   868: ireturn
    //   869: aload_0
    //   870: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   873: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   876: ireturn
    //   877: aload #5
    //   879: ldc_w 'getJobsSummary'
    //   882: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   885: ifne -> 893
    //   888: goto_w -> 1104
    //   893: aload_1
    //   894: ldc_w 'calling_user'
    //   897: aload_0
    //   898: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   901: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   904: ldc 'user_name'
    //   906: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   909: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   912: pop
    //   913: aload #5
    //   915: aload #4
    //   917: aload_0
    //   918: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   921: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   924: ldc 'user_ip'
    //   926: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   929: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   932: ifne -> 940
    //   935: goto_w -> 1096
    //   940: aload_1
    //   941: aload #4
    //   943: invokestatic getJobsSummary : (Ljava/util/Properties;Ljava/lang/String;)Ljava/util/Vector;
    //   946: astore #7
    //   948: aload_1
    //   949: ldc_w 'scheduleName'
    //   952: ldc ''
    //   954: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   957: ldc ''
    //   959: invokevirtual equals : (Ljava/lang/Object;)Z
    //   962: ifeq -> 970
    //   965: goto_w -> 1073
    //   970: new java/util/Vector
    //   973: dup
    //   974: invokespecial <init> : ()V
    //   977: astore #8
    //   979: iconst_0
    //   980: istore #9
    //   982: goto_w -> 1054
    //   987: aload #7
    //   989: iload #9
    //   991: invokevirtual get : (I)Ljava/lang/Object;
    //   994: checkcast java/util/Properties
    //   997: ldc_w 'settings'
    //   1000: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   1003: checkcast java/util/Properties
    //   1006: astore #10
    //   1008: aload #10
    //   1010: ldc_w 'scheduleName'
    //   1013: ldc ''
    //   1015: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   1018: aload_1
    //   1019: ldc_w 'scheduleName'
    //   1022: ldc ''
    //   1024: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   1027: invokevirtual equals : (Ljava/lang/Object;)Z
    //   1030: ifne -> 1038
    //   1033: goto_w -> 1051
    //   1038: aload #8
    //   1040: aload #7
    //   1042: iload #9
    //   1044: invokevirtual get : (I)Ljava/lang/Object;
    //   1047: invokevirtual add : (Ljava/lang/Object;)Z
    //   1050: pop
    //   1051: iinc #9, 1
    //   1054: iload #9
    //   1056: aload #7
    //   1058: invokevirtual size : ()I
    //   1061: if_icmpge -> 1069
    //   1064: goto_w -> 987
    //   1069: aload #8
    //   1071: astore #7
    //   1073: aload_0
    //   1074: aload #7
    //   1076: ldc_w 'running_tasks'
    //   1079: ldc_w 'OK'
    //   1082: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   1085: iconst_0
    //   1086: sipush #200
    //   1089: iconst_0
    //   1090: iconst_0
    //   1091: iconst_0
    //   1092: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   1095: ireturn
    //   1096: aload_0
    //   1097: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   1100: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   1103: ireturn
    //   1104: aload #5
    //   1106: ldc_w 'getJobInfo'
    //   1109: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   1112: ifne -> 1120
    //   1115: goto_w -> 1207
    //   1120: aload_1
    //   1121: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   1124: pop
    //   1125: aload_1
    //   1126: ldc_w 'calling_user'
    //   1129: aload_0
    //   1130: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   1133: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   1136: ldc 'user_name'
    //   1138: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   1141: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   1144: pop
    //   1145: aload #5
    //   1147: aload #4
    //   1149: aload_0
    //   1150: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   1153: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   1156: ldc 'user_ip'
    //   1158: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   1161: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   1164: ifne -> 1172
    //   1167: goto_w -> 1199
    //   1172: aload_0
    //   1173: aload_1
    //   1174: aload #4
    //   1176: invokestatic getJobInfo : (Ljava/util/Properties;Ljava/lang/String;)Ljava/util/Vector;
    //   1179: ldc_w 'running_tasks'
    //   1182: ldc_w 'OK'
    //   1185: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   1188: iconst_0
    //   1189: sipush #200
    //   1192: iconst_0
    //   1193: iconst_0
    //   1194: iconst_0
    //   1195: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   1198: ireturn
    //   1199: aload_0
    //   1200: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   1203: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   1206: ireturn
    //   1207: aload #5
    //   1209: ldc_w 'getSessionList'
    //   1212: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   1215: ifne -> 1223
    //   1218: goto_w -> 1283
    //   1223: aload #5
    //   1225: aload #4
    //   1227: aload_0
    //   1228: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   1231: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   1234: ldc 'user_ip'
    //   1236: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   1239: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   1242: ifne -> 1250
    //   1245: goto_w -> 1275
    //   1250: aload_0
    //   1251: aload_1
    //   1252: invokestatic getSessionList : (Ljava/util/Properties;)Ljava/util/Vector;
    //   1255: ldc_w 'session_list'
    //   1258: ldc_w 'OK'
    //   1261: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   1264: iconst_0
    //   1265: sipush #200
    //   1268: iconst_1
    //   1269: iconst_0
    //   1270: iconst_0
    //   1271: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   1274: ireturn
    //   1275: aload_0
    //   1276: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   1279: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   1282: ireturn
    //   1283: aload #5
    //   1285: ldc_w 'getLog'
    //   1288: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   1291: ifne -> 1299
    //   1294: goto_w -> 1366
    //   1299: aload_1
    //   1300: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   1303: pop
    //   1304: aload #5
    //   1306: aload #4
    //   1308: aload_0
    //   1309: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   1312: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   1315: ldc 'user_ip'
    //   1317: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   1320: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   1323: ifne -> 1331
    //   1326: goto_w -> 1358
    //   1331: aload_0
    //   1332: aload_1
    //   1333: aload #4
    //   1335: invokestatic getLog : (Ljava/util/Properties;Ljava/lang/String;)Ljava/util/Properties;
    //   1338: ldc_w 'log_data'
    //   1341: ldc_w 'OK'
    //   1344: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   1347: iconst_0
    //   1348: sipush #200
    //   1351: iconst_0
    //   1352: iconst_0
    //   1353: iconst_0
    //   1354: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   1357: ireturn
    //   1358: aload_0
    //   1359: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   1362: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   1365: ireturn
    //   1366: aload #5
    //   1368: ldc_w 'getJob'
    //   1371: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   1374: ifne -> 1382
    //   1377: goto_w -> 1513
    //   1382: aload_1
    //   1383: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   1386: pop
    //   1387: aload_1
    //   1388: ldc_w 'calling_user'
    //   1391: aload_0
    //   1392: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   1395: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   1398: ldc 'user_name'
    //   1400: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   1403: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   1406: pop
    //   1407: aload #5
    //   1409: aload #4
    //   1411: aload_0
    //   1412: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   1415: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   1418: ldc 'user_ip'
    //   1420: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   1423: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   1426: ifne -> 1434
    //   1429: goto_w -> 1461
    //   1434: aload_0
    //   1435: aload_1
    //   1436: aload #4
    //   1438: invokestatic getJob : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/Object;
    //   1441: ldc_w 'result_value'
    //   1444: ldc_w 'OK'
    //   1447: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   1450: iconst_0
    //   1451: sipush #200
    //   1454: iconst_0
    //   1455: iconst_0
    //   1456: iconst_1
    //   1457: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   1460: ireturn
    //   1461: aload #4
    //   1463: ldc_w '(JOB_LIST)'
    //   1466: invokevirtual indexOf : (Ljava/lang/String;)I
    //   1469: iflt -> 1477
    //   1472: goto_w -> 1505
    //   1477: aload_0
    //   1478: new java/util/Vector
    //   1481: dup
    //   1482: invokespecial <init> : ()V
    //   1485: ldc_w 'result_value'
    //   1488: ldc_w 'OK'
    //   1491: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   1494: iconst_0
    //   1495: sipush #200
    //   1498: iconst_0
    //   1499: iconst_0
    //   1500: iconst_1
    //   1501: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   1504: ireturn
    //   1505: aload_0
    //   1506: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   1509: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   1512: ireturn
    //   1513: aload_0
    //   1514: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   1517: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   1520: ldc_w 'last_activity'
    //   1523: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   1526: astore #7
    //   1528: aload_0
    //   1529: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   1532: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   1535: invokevirtual active : ()V
    //   1538: aload #5
    //   1540: ldc_w 'logout'
    //   1543: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   1546: ifne -> 1554
    //   1549: goto_w -> 1606
    //   1554: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   1557: astore #8
    //   1559: new java/lang/StringBuffer
    //   1562: dup
    //   1563: aload #8
    //   1565: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   1568: invokespecial <init> : (Ljava/lang/String;)V
    //   1571: ldc_w '<commandResult><response>Logged out.</response></commandResult>'
    //   1574: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   1577: invokevirtual toString : ()Ljava/lang/String;
    //   1580: astore #8
    //   1582: aload_0
    //   1583: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   1586: invokevirtual logout_all : ()V
    //   1589: aload_0
    //   1590: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   1593: iconst_1
    //   1594: putfield deleteCookieAuth : Z
    //   1597: aload_0
    //   1598: aload #8
    //   1600: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   1603: pop
    //   1604: iconst_1
    //   1605: ireturn
    //   1606: aload #5
    //   1608: ldc_w 'getCrushAuth'
    //   1611: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   1614: ifne -> 1622
    //   1617: goto_w -> 1676
    //   1622: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   1625: astore #8
    //   1627: new java/lang/StringBuffer
    //   1630: dup
    //   1631: aload #8
    //   1633: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   1636: invokespecial <init> : (Ljava/lang/String;)V
    //   1639: ldc_w '<auth>CrushAuth='
    //   1642: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   1645: aload_0
    //   1646: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   1649: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   1652: invokevirtual getId : ()Ljava/lang/String;
    //   1655: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   1658: ldc_w '</auth>'
    //   1661: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   1664: invokevirtual toString : ()Ljava/lang/String;
    //   1667: astore #8
    //   1669: aload_0
    //   1670: aload #8
    //   1672: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   1675: ireturn
    //   1676: aload #5
    //   1678: ldc_w 'renameJob'
    //   1681: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   1684: ifne -> 1692
    //   1687: goto_w -> 1760
    //   1692: aload_1
    //   1693: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   1696: pop
    //   1697: aload #5
    //   1699: aload #4
    //   1701: aload_0
    //   1702: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   1705: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   1708: ldc 'user_ip'
    //   1710: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   1713: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   1716: ifne -> 1724
    //   1719: goto_w -> 1752
    //   1724: aload_0
    //   1725: aload_1
    //   1726: aload #4
    //   1728: iconst_1
    //   1729: invokestatic renameJob : (Ljava/util/Properties;Ljava/lang/String;Z)Ljava/lang/Object;
    //   1732: ldc_w 'result_value'
    //   1735: ldc_w 'OK'
    //   1738: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   1741: iconst_0
    //   1742: sipush #200
    //   1745: iconst_0
    //   1746: iconst_0
    //   1747: iconst_1
    //   1748: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   1751: ireturn
    //   1752: aload_0
    //   1753: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   1756: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   1759: ireturn
    //   1760: aload #5
    //   1762: ldc_w 'removeJob'
    //   1765: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   1768: ifne -> 1776
    //   1771: goto_w -> 1844
    //   1776: aload_1
    //   1777: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   1780: pop
    //   1781: aload #5
    //   1783: aload #4
    //   1785: aload_0
    //   1786: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   1789: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   1792: ldc 'user_ip'
    //   1794: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   1797: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   1800: ifne -> 1808
    //   1803: goto_w -> 1836
    //   1808: aload_0
    //   1809: aload_1
    //   1810: aload #4
    //   1812: iconst_1
    //   1813: invokestatic removeJob : (Ljava/util/Properties;Ljava/lang/String;Z)Ljava/lang/Object;
    //   1816: ldc_w 'result_value'
    //   1819: ldc_w 'OK'
    //   1822: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   1825: iconst_0
    //   1826: sipush #200
    //   1829: iconst_0
    //   1830: iconst_0
    //   1831: iconst_1
    //   1832: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   1835: ireturn
    //   1836: aload_0
    //   1837: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   1840: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   1843: ireturn
    //   1844: aload #5
    //   1846: ldc_w 'changeJobStatus'
    //   1849: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   1852: ifne -> 1860
    //   1855: goto_w -> 1927
    //   1860: aload_1
    //   1861: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   1864: pop
    //   1865: aload #5
    //   1867: aload #4
    //   1869: aload_0
    //   1870: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   1873: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   1876: ldc 'user_ip'
    //   1878: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   1881: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   1884: ifne -> 1892
    //   1887: goto_w -> 1919
    //   1892: aload_0
    //   1893: aload_1
    //   1894: aload #4
    //   1896: invokestatic changeJobStatus : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/Object;
    //   1899: ldc_w 'result_value'
    //   1902: ldc_w 'OK'
    //   1905: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   1908: iconst_0
    //   1909: sipush #200
    //   1912: iconst_0
    //   1913: iconst_0
    //   1914: iconst_1
    //   1915: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   1918: ireturn
    //   1919: aload_0
    //   1920: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   1923: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   1926: ireturn
    //   1927: aload #5
    //   1929: ldc_w 'addJob'
    //   1932: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   1935: ifne -> 1943
    //   1938: goto_w -> 2006
    //   1943: aload #5
    //   1945: aload #4
    //   1947: aload_0
    //   1948: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   1951: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   1954: ldc 'user_ip'
    //   1956: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   1959: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   1962: ifne -> 1970
    //   1965: goto_w -> 1998
    //   1970: aload_0
    //   1971: aload_1
    //   1972: aload #4
    //   1974: iconst_1
    //   1975: invokestatic addJob : (Ljava/util/Properties;Ljava/lang/String;Z)Ljava/lang/Object;
    //   1978: ldc_w 'result_value'
    //   1981: ldc_w 'OK'
    //   1984: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   1987: iconst_0
    //   1988: sipush #200
    //   1991: iconst_0
    //   1992: iconst_0
    //   1993: iconst_1
    //   1994: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   1997: ireturn
    //   1998: aload_0
    //   1999: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   2002: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   2005: ireturn
    //   2006: aload #5
    //   2008: ldc_w 'startTunnel2'
    //   2011: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   2014: ifne -> 2022
    //   2017: goto_w -> 2552
    //   2022: ldc ''
    //   2024: astore #8
    //   2026: ldc_w 'crushftp.usernames'
    //   2029: invokestatic find : (Ljava/lang/String;)Lcrushftp/handlers/SharedSession;
    //   2032: new java/lang/StringBuffer
    //   2035: dup
    //   2036: ldc_w '127.0.0.1'
    //   2039: invokestatic getPartialIp : (Ljava/lang/String;)Ljava/lang/String;
    //   2042: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   2045: invokespecial <init> : (Ljava/lang/String;)V
    //   2048: ldc_w '_'
    //   2051: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2054: aload_0
    //   2055: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   2058: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   2061: invokevirtual getId : ()Ljava/lang/String;
    //   2064: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2067: ldc_w '_user'
    //   2070: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2073: invokevirtual toString : ()Ljava/lang/String;
    //   2076: ldc_w 'crushftp.usernames'
    //   2079: invokestatic find : (Ljava/lang/String;)Lcrushftp/handlers/SharedSession;
    //   2082: new java/lang/StringBuffer
    //   2085: dup
    //   2086: aload_0
    //   2087: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   2090: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   2093: ldc 'user_ip'
    //   2095: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   2098: invokestatic getPartialIp : (Ljava/lang/String;)Ljava/lang/String;
    //   2101: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   2104: invokespecial <init> : (Ljava/lang/String;)V
    //   2107: ldc_w '_'
    //   2110: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2113: aload_0
    //   2114: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   2117: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   2120: invokevirtual getId : ()Ljava/lang/String;
    //   2123: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2126: ldc_w '_user'
    //   2129: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2132: invokevirtual toString : ()Ljava/lang/String;
    //   2135: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   2138: iconst_0
    //   2139: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;Z)V
    //   2142: ldc_w 'crushftp.usernames'
    //   2145: invokestatic find : (Ljava/lang/String;)Lcrushftp/handlers/SharedSession;
    //   2148: new java/lang/StringBuffer
    //   2151: dup
    //   2152: ldc_w '127.0.0.1'
    //   2155: invokestatic getPartialIp : (Ljava/lang/String;)Ljava/lang/String;
    //   2158: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   2161: invokespecial <init> : (Ljava/lang/String;)V
    //   2164: ldc_w '_'
    //   2167: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2170: aload_0
    //   2171: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   2174: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   2177: invokevirtual getId : ()Ljava/lang/String;
    //   2180: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2183: ldc_w '_ip'
    //   2186: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2189: invokevirtual toString : ()Ljava/lang/String;
    //   2192: aload_0
    //   2193: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   2196: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   2199: ldc 'user_ip'
    //   2201: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   2204: iconst_0
    //   2205: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;Z)V
    //   2208: new java/lang/StringBuffer
    //   2211: dup
    //   2212: aload_0
    //   2213: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   2216: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   2219: getfield user : Ljava/util/Properties;
    //   2222: ldc_w 'tunnels'
    //   2225: ldc ''
    //   2227: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   2230: invokevirtual trim : ()Ljava/lang/String;
    //   2233: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   2236: invokespecial <init> : (Ljava/lang/String;)V
    //   2239: ldc_w ','
    //   2242: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2245: invokevirtual toString : ()Ljava/lang/String;
    //   2248: astore #9
    //   2250: ldc_w 'tunnels'
    //   2253: invokestatic VG : (Ljava/lang/String;)Ljava/util/Vector;
    //   2256: invokevirtual clone : ()Ljava/lang/Object;
    //   2259: checkcast java/util/Vector
    //   2262: astore #10
    //   2264: aload #10
    //   2266: ldc_w 'tunnels_dmz'
    //   2269: invokestatic VG : (Ljava/lang/String;)Ljava/util/Vector;
    //   2272: invokevirtual addAll : (Ljava/util/Collection;)Z
    //   2275: pop
    //   2276: aconst_null
    //   2277: astore #11
    //   2279: iconst_0
    //   2280: istore #12
    //   2282: goto_w -> 2383
    //   2287: aload #10
    //   2289: iload #12
    //   2291: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   2294: checkcast java/util/Properties
    //   2297: astore #13
    //   2299: aload #9
    //   2301: new java/lang/StringBuffer
    //   2304: dup
    //   2305: aload #13
    //   2307: ldc_w 'id'
    //   2310: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   2313: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   2316: invokespecial <init> : (Ljava/lang/String;)V
    //   2319: ldc_w ','
    //   2322: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2325: invokevirtual toString : ()Ljava/lang/String;
    //   2328: invokevirtual indexOf : (Ljava/lang/String;)I
    //   2331: ifge -> 2339
    //   2334: goto_w -> 2380
    //   2339: aload #13
    //   2341: ldc_w 'id'
    //   2344: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   2347: aload_1
    //   2348: ldc_w 'tunnelId'
    //   2351: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   2354: invokevirtual equals : (Ljava/lang/Object;)Z
    //   2357: ifne -> 2365
    //   2360: goto_w -> 2380
    //   2365: aload #13
    //   2367: invokevirtual clone : ()Ljava/lang/Object;
    //   2370: checkcast java/util/Properties
    //   2373: astore #11
    //   2375: goto_w -> 2398
    //   2380: iinc #12, 1
    //   2383: iload #12
    //   2385: aload #10
    //   2387: invokevirtual size : ()I
    //   2390: if_icmpge -> 2398
    //   2393: goto_w -> 2287
    //   2398: aload #11
    //   2400: ifnonnull -> 2408
    //   2403: goto_w -> 2545
    //   2408: ldc 'enterprise_level'
    //   2410: invokestatic siIG : (Ljava/lang/String;)I
    //   2413: ifle -> 2421
    //   2416: goto_w -> 2469
    //   2421: aload #11
    //   2423: ldc_w 'channelsOutMax'
    //   2426: ldc_w '1'
    //   2429: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   2432: pop
    //   2433: aload #11
    //   2435: ldc_w 'channelsInMax'
    //   2438: ldc_w '1'
    //   2441: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   2444: pop
    //   2445: aload #11
    //   2447: ldc_w 'channelRampUp'
    //   2450: ldc_w '1'
    //   2453: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   2456: pop
    //   2457: aload #11
    //   2459: ldc_w 'stableSeconds'
    //   2462: ldc_w '1'
    //   2465: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   2468: pop
    //   2469: aload_0
    //   2470: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   2473: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   2476: invokevirtual getId : ()Ljava/lang/String;
    //   2479: invokestatic getTunnel : (Ljava/lang/String;)Lcom/crushftp/tunnel2/Tunnel2;
    //   2482: ifnull -> 2490
    //   2485: goto_w -> 2545
    //   2490: new com/crushftp/tunnel2/Tunnel2
    //   2493: dup
    //   2494: aload_0
    //   2495: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   2498: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   2501: invokevirtual getId : ()Ljava/lang/String;
    //   2504: aload #11
    //   2506: invokespecial <init> : (Ljava/lang/String;Ljava/util/Properties;)V
    //   2509: astore #12
    //   2511: aload #11
    //   2513: ldc_w 'reverse'
    //   2516: ldc 'false'
    //   2518: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   2521: ldc 'true'
    //   2523: invokevirtual equals : (Ljava/lang/Object;)Z
    //   2526: ifne -> 2534
    //   2529: goto_w -> 2545
    //   2534: aload #12
    //   2536: iconst_1
    //   2537: invokevirtual setAllowReverseMode : (Z)V
    //   2540: aload #12
    //   2542: invokevirtual startThreads : ()V
    //   2545: aload_0
    //   2546: aload #8
    //   2548: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   2551: ireturn
    //   2552: aload #5
    //   2554: ldc_w 'stopTunnel2'
    //   2557: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   2560: ifne -> 2568
    //   2563: goto_w -> 2590
    //   2568: aload_0
    //   2569: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   2572: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   2575: invokevirtual getId : ()Ljava/lang/String;
    //   2578: invokestatic stopTunnel : (Ljava/lang/String;)Ljava/lang/String;
    //   2581: astore #8
    //   2583: aload_0
    //   2584: aload #8
    //   2586: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   2589: ireturn
    //   2590: aload #5
    //   2592: ldc_w 'startTunnel3'
    //   2595: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   2598: ifne -> 2606
    //   2601: goto_w -> 3456
    //   2606: ldc ''
    //   2608: astore #8
    //   2610: ldc_w 'crushftp.usernames'
    //   2613: invokestatic find : (Ljava/lang/String;)Lcrushftp/handlers/SharedSession;
    //   2616: new java/lang/StringBuffer
    //   2619: dup
    //   2620: ldc_w '127.0.0.1'
    //   2623: invokestatic getPartialIp : (Ljava/lang/String;)Ljava/lang/String;
    //   2626: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   2629: invokespecial <init> : (Ljava/lang/String;)V
    //   2632: ldc_w '_'
    //   2635: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2638: aload_0
    //   2639: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   2642: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   2645: invokevirtual getId : ()Ljava/lang/String;
    //   2648: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2651: ldc_w '_user'
    //   2654: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2657: invokevirtual toString : ()Ljava/lang/String;
    //   2660: ldc_w 'crushftp.usernames'
    //   2663: invokestatic find : (Ljava/lang/String;)Lcrushftp/handlers/SharedSession;
    //   2666: new java/lang/StringBuffer
    //   2669: dup
    //   2670: aload_0
    //   2671: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   2674: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   2677: ldc 'user_ip'
    //   2679: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   2682: invokestatic getPartialIp : (Ljava/lang/String;)Ljava/lang/String;
    //   2685: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   2688: invokespecial <init> : (Ljava/lang/String;)V
    //   2691: ldc_w '_'
    //   2694: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2697: aload_0
    //   2698: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   2701: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   2704: invokevirtual getId : ()Ljava/lang/String;
    //   2707: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2710: ldc_w '_user'
    //   2713: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2716: invokevirtual toString : ()Ljava/lang/String;
    //   2719: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   2722: iconst_0
    //   2723: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;Z)V
    //   2726: ldc_w 'crushftp.usernames'
    //   2729: invokestatic find : (Ljava/lang/String;)Lcrushftp/handlers/SharedSession;
    //   2732: new java/lang/StringBuffer
    //   2735: dup
    //   2736: ldc_w '127.0.0.1'
    //   2739: invokestatic getPartialIp : (Ljava/lang/String;)Ljava/lang/String;
    //   2742: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   2745: invokespecial <init> : (Ljava/lang/String;)V
    //   2748: ldc_w '_'
    //   2751: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2754: aload_0
    //   2755: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   2758: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   2761: invokevirtual getId : ()Ljava/lang/String;
    //   2764: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2767: ldc_w '_ip'
    //   2770: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2773: invokevirtual toString : ()Ljava/lang/String;
    //   2776: aload_0
    //   2777: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   2780: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   2783: ldc 'user_ip'
    //   2785: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   2788: iconst_0
    //   2789: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;Z)V
    //   2792: ldc_w 'crushftp.usernames'
    //   2795: invokestatic find : (Ljava/lang/String;)Lcrushftp/handlers/SharedSession;
    //   2798: new java/lang/StringBuffer
    //   2801: dup
    //   2802: ldc_w '127.0.0.1'
    //   2805: invokestatic getPartialIp : (Ljava/lang/String;)Ljava/lang/String;
    //   2808: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   2811: invokespecial <init> : (Ljava/lang/String;)V
    //   2814: ldc_w '_'
    //   2817: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2820: aload_1
    //   2821: ldc 'clientid'
    //   2823: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   2826: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2829: ldc_w '_ip'
    //   2832: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2835: invokevirtual toString : ()Ljava/lang/String;
    //   2838: aload_0
    //   2839: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   2842: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   2845: ldc 'user_ip'
    //   2847: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   2850: iconst_0
    //   2851: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;Z)V
    //   2854: new java/lang/StringBuffer
    //   2857: dup
    //   2858: aload_0
    //   2859: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   2862: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   2865: getfield user : Ljava/util/Properties;
    //   2868: ldc_w 'tunnels'
    //   2871: ldc ''
    //   2873: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   2876: invokevirtual trim : ()Ljava/lang/String;
    //   2879: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   2882: invokespecial <init> : (Ljava/lang/String;)V
    //   2885: ldc_w ','
    //   2888: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2891: invokevirtual toString : ()Ljava/lang/String;
    //   2894: astore #9
    //   2896: ldc_w 'tunnels'
    //   2899: invokestatic VG : (Ljava/lang/String;)Ljava/util/Vector;
    //   2902: invokevirtual clone : ()Ljava/lang/Object;
    //   2905: checkcast java/util/Vector
    //   2908: astore #10
    //   2910: aload #10
    //   2912: ldc_w 'tunnels_dmz'
    //   2915: invokestatic VG : (Ljava/lang/String;)Ljava/util/Vector;
    //   2918: invokevirtual addAll : (Ljava/util/Collection;)Z
    //   2921: pop
    //   2922: aconst_null
    //   2923: astore #11
    //   2925: iconst_0
    //   2926: istore #12
    //   2928: goto_w -> 3029
    //   2933: aload #10
    //   2935: iload #12
    //   2937: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   2940: checkcast java/util/Properties
    //   2943: astore #13
    //   2945: aload #9
    //   2947: new java/lang/StringBuffer
    //   2950: dup
    //   2951: aload #13
    //   2953: ldc_w 'id'
    //   2956: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   2959: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   2962: invokespecial <init> : (Ljava/lang/String;)V
    //   2965: ldc_w ','
    //   2968: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   2971: invokevirtual toString : ()Ljava/lang/String;
    //   2974: invokevirtual indexOf : (Ljava/lang/String;)I
    //   2977: ifge -> 2985
    //   2980: goto_w -> 3026
    //   2985: aload #13
    //   2987: ldc_w 'id'
    //   2990: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   2993: aload_1
    //   2994: ldc_w 'tunnelId'
    //   2997: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   3000: invokevirtual equals : (Ljava/lang/Object;)Z
    //   3003: ifne -> 3011
    //   3006: goto_w -> 3026
    //   3011: aload #13
    //   3013: invokevirtual clone : ()Ljava/lang/Object;
    //   3016: checkcast java/util/Properties
    //   3019: astore #11
    //   3021: goto_w -> 3044
    //   3026: iinc #12, 1
    //   3029: iload #12
    //   3031: aload #10
    //   3033: invokevirtual size : ()I
    //   3036: if_icmpge -> 3044
    //   3039: goto_w -> 2933
    //   3044: aload #11
    //   3046: ifnonnull -> 3054
    //   3049: goto_w -> 3449
    //   3054: aload #11
    //   3056: ldc_w 'configurable'
    //   3059: ldc 'false'
    //   3061: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   3064: ldc 'true'
    //   3066: invokevirtual equals : (Ljava/lang/Object;)Z
    //   3069: ifne -> 3077
    //   3072: goto_w -> 3189
    //   3077: aload #11
    //   3079: ldc_w 'bindIp'
    //   3082: aload_1
    //   3083: ldc_w 'bindIp'
    //   3086: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   3089: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3092: pop
    //   3093: aload #11
    //   3095: ldc_w 'localPort'
    //   3098: aload_1
    //   3099: ldc_w 'localPort'
    //   3102: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   3105: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3108: pop
    //   3109: aload #11
    //   3111: ldc_w 'destIp'
    //   3114: aload_1
    //   3115: ldc_w 'destIp'
    //   3118: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   3121: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3124: pop
    //   3125: aload #11
    //   3127: ldc_w 'destPort'
    //   3130: aload_1
    //   3131: ldc_w 'destPort'
    //   3134: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   3137: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3140: pop
    //   3141: aload #11
    //   3143: ldc_w 'channelsOutMax'
    //   3146: aload_1
    //   3147: ldc_w 'channelsOutMax'
    //   3150: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   3153: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3156: pop
    //   3157: aload #11
    //   3159: ldc_w 'channelsInMax'
    //   3162: aload_1
    //   3163: ldc_w 'channelsInMax'
    //   3166: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   3169: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3172: pop
    //   3173: aload #11
    //   3175: ldc_w 'reverse'
    //   3178: aload_1
    //   3179: ldc_w 'reverse'
    //   3182: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   3185: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3188: pop
    //   3189: ldc 'enterprise_level'
    //   3191: invokestatic siIG : (Ljava/lang/String;)I
    //   3194: ifle -> 3202
    //   3197: goto_w -> 3250
    //   3202: aload #11
    //   3204: ldc_w 'channelsOutMax'
    //   3207: ldc_w '1'
    //   3210: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3213: pop
    //   3214: aload #11
    //   3216: ldc_w 'channelsInMax'
    //   3219: ldc_w '1'
    //   3222: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3225: pop
    //   3226: aload #11
    //   3228: ldc_w 'channelRampUp'
    //   3231: ldc_w '1'
    //   3234: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3237: pop
    //   3238: aload #11
    //   3240: ldc_w 'stableSeconds'
    //   3243: ldc_w '1'
    //   3246: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3249: pop
    //   3250: aload_0
    //   3251: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   3254: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   3257: invokevirtual getId : ()Ljava/lang/String;
    //   3260: aload #11
    //   3262: ldc_w 'id'
    //   3265: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   3268: invokestatic getStreamController : (Ljava/lang/String;Ljava/lang/String;)Lcom/crushftp/tunnel3/StreamController;
    //   3271: ifnull -> 3279
    //   3274: goto_w -> 3444
    //   3279: aload_0
    //   3280: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   3283: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   3286: invokevirtual getId : ()Ljava/lang/String;
    //   3289: ldc_w 'null'
    //   3292: invokestatic getStreamController : (Ljava/lang/String;Ljava/lang/String;)Lcom/crushftp/tunnel3/StreamController;
    //   3295: ifnull -> 3303
    //   3298: goto_w -> 3444
    //   3303: new com/crushftp/tunnel3/StreamController
    //   3306: dup
    //   3307: aload #11
    //   3309: invokespecial <init> : (Ljava/util/Properties;)V
    //   3312: astore #12
    //   3314: getstatic crushftp/server/ServerSessionTunnel3.running_tunnels : Ljava/util/Properties;
    //   3317: new java/lang/StringBuffer
    //   3320: dup
    //   3321: aload_0
    //   3322: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   3325: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   3328: invokevirtual getId : ()Ljava/lang/String;
    //   3331: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   3334: invokespecial <init> : (Ljava/lang/String;)V
    //   3337: ldc_w '_'
    //   3340: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   3343: aload #11
    //   3345: ldc_w 'id'
    //   3348: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   3351: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   3354: invokevirtual toString : ()Ljava/lang/String;
    //   3357: aload #12
    //   3359: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3362: pop
    //   3363: getstatic crushftp/server/ServerSessionTunnel3.running_tunnels : Ljava/util/Properties;
    //   3366: new java/lang/StringBuffer
    //   3369: dup
    //   3370: aload_0
    //   3371: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   3374: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   3377: invokevirtual getId : ()Ljava/lang/String;
    //   3380: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   3383: invokespecial <init> : (Ljava/lang/String;)V
    //   3386: ldc_w '_null'
    //   3389: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   3392: invokevirtual toString : ()Ljava/lang/String;
    //   3395: aload #12
    //   3397: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3400: pop
    //   3401: aload #12
    //   3403: invokevirtual startServerTunnel : ()V
    //   3406: aload #11
    //   3408: ldc_w 'reverse'
    //   3411: ldc 'false'
    //   3413: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   3416: ldc 'true'
    //   3418: invokevirtual equals : (Ljava/lang/Object;)Z
    //   3421: ifne -> 3429
    //   3424: goto_w -> 3434
    //   3429: aload #12
    //   3431: invokevirtual startReverseThreads : ()V
    //   3434: ldc_w 'Started'
    //   3437: astore #8
    //   3439: goto_w -> 3449
    //   3444: ldc_w 'Already started.'
    //   3447: astore #8
    //   3449: aload_0
    //   3450: aload #8
    //   3452: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   3455: ireturn
    //   3456: aload #5
    //   3458: ldc_w 'stopTunnel3'
    //   3461: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   3464: ifne -> 3472
    //   3467: goto_w -> 3501
    //   3472: aload_0
    //   3473: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   3476: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   3479: invokevirtual getId : ()Ljava/lang/String;
    //   3482: aload_1
    //   3483: ldc_w 'tunnelId'
    //   3486: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   3489: invokestatic stopTunnel : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   3492: astore #8
    //   3494: aload_0
    //   3495: aload #8
    //   3497: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   3500: ireturn
    //   3501: aload #5
    //   3503: ldc_w 'getSyncTableData'
    //   3506: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   3509: ifne -> 3517
    //   3512: goto_w -> 4332
    //   3517: ldc 'enterprise_level'
    //   3519: invokestatic siIG : (Ljava/lang/String;)I
    //   3522: ifgt -> 3530
    //   3525: goto_w -> 4332
    //   3530: aload_0
    //   3531: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   3534: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   3537: getfield uVFS : Lcrushftp/server/VFS;
    //   3540: new java/lang/StringBuffer
    //   3543: dup
    //   3544: aload_0
    //   3545: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   3548: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   3551: ldc_w 'root_dir'
    //   3554: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   3557: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   3560: invokespecial <init> : (Ljava/lang/String;)V
    //   3563: aload_1
    //   3564: ldc_w 'path'
    //   3567: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   3570: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   3573: invokevirtual toString : ()Ljava/lang/String;
    //   3576: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   3579: astore #8
    //   3581: aload #8
    //   3583: ldc_w 'privs'
    //   3586: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   3589: astore #9
    //   3591: aload #9
    //   3593: ldc_w 'name'
    //   3596: invokestatic parseSyncPart : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   3599: astore #10
    //   3601: aload #10
    //   3603: ifnonnull -> 3611
    //   3606: goto_w -> 4228
    //   3611: new java/io/ByteArrayOutputStream
    //   3614: dup
    //   3615: invokespecial <init> : ()V
    //   3618: astore #11
    //   3620: new java/io/ObjectOutputStream
    //   3623: dup
    //   3624: aload #11
    //   3626: invokespecial <init> : (Ljava/io/OutputStream;)V
    //   3629: astore #12
    //   3631: aload #9
    //   3633: ldc_w 'uploadOnly'
    //   3636: invokestatic parseSyncPart : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   3639: astore #13
    //   3641: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   3644: pop
    //   3645: ldc_w 'syncs_debug'
    //   3648: invokestatic BG : (Ljava/lang/String;)Z
    //   3651: ifne -> 3659
    //   3654: goto_w -> 3685
    //   3659: ldc_w 'SYNC'
    //   3662: iconst_0
    //   3663: new java/lang/StringBuffer
    //   3666: dup
    //   3667: ldc_w 'Sync UploadOnly:'
    //   3670: invokespecial <init> : (Ljava/lang/String;)V
    //   3673: aload #13
    //   3675: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   3678: invokevirtual toString : ()Ljava/lang/String;
    //   3681: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   3684: pop
    //   3685: aload #13
    //   3687: ldc 'true'
    //   3689: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   3692: ifne -> 3700
    //   3695: goto_w -> 3717
    //   3700: aload #12
    //   3702: new java/util/Vector
    //   3705: dup
    //   3706: invokespecial <init> : ()V
    //   3709: invokevirtual writeObject : (Ljava/lang/Object;)V
    //   3712: goto_w -> 4087
    //   3717: aconst_null
    //   3718: astore #14
    //   3720: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   3723: ifne -> 3731
    //   3726: goto_w -> 3885
    //   3731: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   3734: ldc_w 'crushftp.dmz.queue'
    //   3737: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   3740: checkcast java/util/Vector
    //   3743: astore #15
    //   3745: new java/util/Properties
    //   3748: dup
    //   3749: invokespecial <init> : ()V
    //   3752: astore #16
    //   3754: aload #16
    //   3756: ldc_w 'type'
    //   3759: ldc_w 'GET:SYNC'
    //   3762: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3765: pop
    //   3766: aload #16
    //   3768: ldc_w 'id'
    //   3771: invokestatic makeBoundary : ()Ljava/lang/String;
    //   3774: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3777: pop
    //   3778: aload #16
    //   3780: ldc 'username'
    //   3782: aload_0
    //   3783: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   3786: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   3789: ldc 'user_name'
    //   3791: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   3794: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3797: pop
    //   3798: aload #16
    //   3800: ldc_w 'request'
    //   3803: aload_1
    //   3804: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3807: pop
    //   3808: aload #16
    //   3810: ldc_w 'syncID'
    //   3813: aload #10
    //   3815: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   3818: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3821: pop
    //   3822: aload #16
    //   3824: ldc 'clientid'
    //   3826: aload_0
    //   3827: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   3830: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   3833: ldc 'clientid'
    //   3835: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   3838: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3841: pop
    //   3842: aload #16
    //   3844: ldc_w 'need_response'
    //   3847: ldc 'true'
    //   3849: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3852: pop
    //   3853: aload #15
    //   3855: aload #16
    //   3857: invokevirtual addElement : (Ljava/lang/Object;)V
    //   3860: aload #16
    //   3862: sipush #300
    //   3865: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   3868: astore #16
    //   3870: aload #16
    //   3872: ldc_w 'object_response'
    //   3875: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   3878: astore #14
    //   3880: goto_w -> 4030
    //   3885: aload_1
    //   3886: ldc_w 'path'
    //   3889: ldc ''
    //   3891: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   3894: astore #15
    //   3896: aload #15
    //   3898: ldc ''
    //   3900: invokevirtual equals : (Ljava/lang/Object;)Z
    //   3903: ifne -> 3911
    //   3906: goto_w -> 3916
    //   3911: ldc_w '/'
    //   3914: astore #15
    //   3916: aload #15
    //   3918: aload_0
    //   3919: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   3922: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   3925: ldc_w 'root_dir'
    //   3928: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   3931: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   3934: ifeq -> 3942
    //   3937: goto_w -> 3979
    //   3942: new java/lang/StringBuffer
    //   3945: dup
    //   3946: aload_0
    //   3947: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   3950: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   3953: ldc_w 'root_dir'
    //   3956: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   3959: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   3962: invokespecial <init> : (Ljava/lang/String;)V
    //   3965: aload #15
    //   3967: iconst_1
    //   3968: invokevirtual substring : (I)Ljava/lang/String;
    //   3971: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   3974: invokevirtual toString : ()Ljava/lang/String;
    //   3977: astore #15
    //   3979: aload #10
    //   3981: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   3984: aload_1
    //   3985: ldc_w 'lastRID'
    //   3988: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   3991: invokestatic parseLong : (Ljava/lang/String;)J
    //   3994: aload_1
    //   3995: ldc_w 'table'
    //   3998: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   4001: aload_0
    //   4002: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   4005: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   4008: ldc 'clientid'
    //   4010: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   4013: aload #15
    //   4015: aload_0
    //   4016: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   4019: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   4022: getfield uVFS : Lcrushftp/server/VFS;
    //   4025: invokestatic getSyncTableData : (Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcrushftp/server/VFS;)Ljava/util/Vector;
    //   4028: astore #14
    //   4030: aload #12
    //   4032: aload #14
    //   4034: invokevirtual writeObject : (Ljava/lang/Object;)V
    //   4037: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   4040: pop
    //   4041: ldc_w 'syncs_debug'
    //   4044: invokestatic BG : (Ljava/lang/String;)Z
    //   4047: ifne -> 4055
    //   4050: goto_w -> 4087
    //   4055: ldc_w 'SYNC'
    //   4058: iconst_0
    //   4059: new java/lang/StringBuffer
    //   4062: dup
    //   4063: ldc_w 'Sync table data result size:'
    //   4066: invokespecial <init> : (Ljava/lang/String;)V
    //   4069: aload #14
    //   4071: checkcast java/util/Vector
    //   4074: invokevirtual size : ()I
    //   4077: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   4080: invokevirtual toString : ()Ljava/lang/String;
    //   4083: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   4086: pop
    //   4087: aload #12
    //   4089: invokevirtual close : ()V
    //   4092: aload_0
    //   4093: ldc_w 'HTTP/1.1 200 OK'
    //   4096: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   4099: aload_0
    //   4100: ldc_w 'Cache-Control: no-store'
    //   4103: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   4106: aload_0
    //   4107: ldc_w 'Content-Type: application/binary'
    //   4110: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   4113: aload_0
    //   4114: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   4117: invokevirtual write_standard_headers : ()V
    //   4120: aload_0
    //   4121: new java/lang/StringBuffer
    //   4124: dup
    //   4125: ldc_w 'Content-Length: '
    //   4128: invokespecial <init> : (Ljava/lang/String;)V
    //   4131: aload #11
    //   4133: invokevirtual size : ()I
    //   4136: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   4139: invokevirtual toString : ()Ljava/lang/String;
    //   4142: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   4145: aload_0
    //   4146: ldc ''
    //   4148: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   4151: aload_0
    //   4152: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   4155: getfield original_os : Ljava/io/OutputStream;
    //   4158: aload #11
    //   4160: invokevirtual toByteArray : ()[B
    //   4163: invokevirtual write : ([B)V
    //   4166: aload_0
    //   4167: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   4170: getfield original_os : Ljava/io/OutputStream;
    //   4173: invokevirtual flush : ()V
    //   4176: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   4179: pop
    //   4180: ldc_w 'syncs_debug'
    //   4183: invokestatic BG : (Ljava/lang/String;)Z
    //   4186: ifne -> 4194
    //   4189: goto_w -> 4223
    //   4194: ldc_w 'SYNC'
    //   4197: iconst_0
    //   4198: new java/lang/StringBuffer
    //   4201: dup
    //   4202: ldc_w 'Sync table data byte size:'
    //   4205: invokespecial <init> : (Ljava/lang/String;)V
    //   4208: aload #11
    //   4210: invokevirtual size : ()I
    //   4213: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   4216: invokevirtual toString : ()Ljava/lang/String;
    //   4219: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   4222: pop
    //   4223: goto_w -> 4330
    //   4228: ldc_w 'Sync was not found for your current folder.'
    //   4231: astore #11
    //   4233: aload_0
    //   4234: ldc_w 'HTTP/1.1 404 OK'
    //   4237: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   4240: aload_0
    //   4241: ldc_w 'Cache-Control: no-store'
    //   4244: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   4247: aload_0
    //   4248: ldc_w 'Content-Type: application/binary'
    //   4251: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   4254: aload_0
    //   4255: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   4258: invokevirtual write_standard_headers : ()V
    //   4261: aload_0
    //   4262: new java/lang/StringBuffer
    //   4265: dup
    //   4266: ldc_w 'Content-Length: '
    //   4269: invokespecial <init> : (Ljava/lang/String;)V
    //   4272: aload #11
    //   4274: invokevirtual length : ()I
    //   4277: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   4280: iconst_2
    //   4281: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   4284: invokevirtual toString : ()Ljava/lang/String;
    //   4287: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   4290: aload_0
    //   4291: ldc ''
    //   4293: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   4296: aload_0
    //   4297: aload #11
    //   4299: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   4302: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   4305: pop
    //   4306: ldc_w 'syncs_debug'
    //   4309: invokestatic BG : (Ljava/lang/String;)Z
    //   4312: ifne -> 4320
    //   4315: goto_w -> 4330
    //   4320: ldc_w 'SYNC'
    //   4323: iconst_0
    //   4324: aload #11
    //   4326: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   4329: pop
    //   4330: iconst_1
    //   4331: ireturn
    //   4332: aload #5
    //   4334: ldc_w 'syncConflict'
    //   4337: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   4340: ifne -> 4348
    //   4343: goto_w -> 4725
    //   4348: ldc 'enterprise_level'
    //   4350: invokestatic siIG : (Ljava/lang/String;)I
    //   4353: ifgt -> 4361
    //   4356: goto_w -> 4725
    //   4361: aload_0
    //   4362: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   4365: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   4368: getfield uVFS : Lcrushftp/server/VFS;
    //   4371: new java/lang/StringBuffer
    //   4374: dup
    //   4375: aload_0
    //   4376: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   4379: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   4382: ldc_w 'root_dir'
    //   4385: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   4388: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   4391: invokespecial <init> : (Ljava/lang/String;)V
    //   4394: aload_1
    //   4395: ldc_w 'path'
    //   4398: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   4401: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   4404: invokevirtual toString : ()Ljava/lang/String;
    //   4407: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   4410: astore #8
    //   4412: aload #8
    //   4414: ldc_w 'privs'
    //   4417: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   4420: ldc_w 'name'
    //   4423: invokestatic parseSyncPart : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   4426: astore #9
    //   4428: aload #9
    //   4430: ifnonnull -> 4438
    //   4433: goto_w -> 4649
    //   4438: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   4441: ifne -> 4449
    //   4444: goto_w -> 4592
    //   4449: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   4452: ldc_w 'crushftp.dmz.queue'
    //   4455: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   4458: checkcast java/util/Vector
    //   4461: astore #10
    //   4463: new java/util/Properties
    //   4466: dup
    //   4467: invokespecial <init> : ()V
    //   4470: astore #11
    //   4472: aload #11
    //   4474: ldc_w 'type'
    //   4477: ldc_w 'GET:SYNC'
    //   4480: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4483: pop
    //   4484: aload #11
    //   4486: ldc_w 'id'
    //   4489: invokestatic makeBoundary : ()Ljava/lang/String;
    //   4492: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4495: pop
    //   4496: aload #11
    //   4498: ldc 'username'
    //   4500: aload_0
    //   4501: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   4504: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   4507: ldc 'user_name'
    //   4509: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   4512: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4515: pop
    //   4516: aload #11
    //   4518: ldc_w 'request'
    //   4521: aload_1
    //   4522: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4525: pop
    //   4526: aload #11
    //   4528: ldc_w 'syncID'
    //   4531: aload #9
    //   4533: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   4536: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4539: pop
    //   4540: aload #11
    //   4542: ldc 'clientid'
    //   4544: aload_0
    //   4545: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   4548: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   4551: ldc 'clientid'
    //   4553: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   4556: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4559: pop
    //   4560: aload #11
    //   4562: ldc_w 'need_response'
    //   4565: ldc 'true'
    //   4567: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4570: pop
    //   4571: aload #10
    //   4573: aload #11
    //   4575: invokevirtual addElement : (Ljava/lang/Object;)V
    //   4578: aload #11
    //   4580: bipush #60
    //   4582: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   4585: astore #11
    //   4587: goto_w -> 4614
    //   4592: aload #9
    //   4594: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   4597: aload_1
    //   4598: ldc_w 'item_path'
    //   4601: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   4604: ldc_w 'CONFLICT'
    //   4607: ldc ''
    //   4609: ldc ''
    //   4611: invokestatic addJournalEntry : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    //   4614: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   4617: astore #10
    //   4619: new java/lang/StringBuffer
    //   4622: dup
    //   4623: aload #10
    //   4625: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   4628: invokespecial <init> : (Ljava/lang/String;)V
    //   4631: ldc_w '<result><response_status>success</response_status></result>'
    //   4634: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   4637: invokevirtual toString : ()Ljava/lang/String;
    //   4640: astore #10
    //   4642: aload_0
    //   4643: aload #10
    //   4645: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   4648: ireturn
    //   4649: ldc_w 'Sync was not found for your current folder.'
    //   4652: astore #10
    //   4654: aload_0
    //   4655: ldc_w 'HTTP/1.1 404 OK'
    //   4658: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   4661: aload_0
    //   4662: ldc_w 'Cache-Control: no-store'
    //   4665: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   4668: aload_0
    //   4669: ldc_w 'Content-Type: application/binary'
    //   4672: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   4675: aload_0
    //   4676: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   4679: invokevirtual write_standard_headers : ()V
    //   4682: aload_0
    //   4683: new java/lang/StringBuffer
    //   4686: dup
    //   4687: ldc_w 'Content-Length: '
    //   4690: invokespecial <init> : (Ljava/lang/String;)V
    //   4693: aload #10
    //   4695: invokevirtual length : ()I
    //   4698: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   4701: iconst_2
    //   4702: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   4705: invokevirtual toString : ()Ljava/lang/String;
    //   4708: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   4711: aload_0
    //   4712: ldc ''
    //   4714: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   4717: aload_0
    //   4718: aload #10
    //   4720: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   4723: iconst_1
    //   4724: ireturn
    //   4725: aload #5
    //   4727: ldc_w 'purgeSync'
    //   4730: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   4733: ifne -> 4741
    //   4736: goto_w -> 5158
    //   4741: ldc 'enterprise_level'
    //   4743: invokestatic siIG : (Ljava/lang/String;)I
    //   4746: ifgt -> 4754
    //   4749: goto_w -> 5158
    //   4754: aload_0
    //   4755: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   4758: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   4761: getfield uVFS : Lcrushftp/server/VFS;
    //   4764: new java/lang/StringBuffer
    //   4767: dup
    //   4768: aload_0
    //   4769: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   4772: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   4775: ldc_w 'root_dir'
    //   4778: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   4781: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   4784: invokespecial <init> : (Ljava/lang/String;)V
    //   4787: aload_1
    //   4788: ldc_w 'path'
    //   4791: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   4794: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   4797: invokevirtual toString : ()Ljava/lang/String;
    //   4800: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   4803: astore #8
    //   4805: aload #8
    //   4807: ldc_w 'privs'
    //   4810: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   4813: ldc_w 'name'
    //   4816: invokestatic parseSyncPart : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   4819: astore #9
    //   4821: aload #9
    //   4823: ifnonnull -> 4831
    //   4826: goto_w -> 5082
    //   4831: aload_1
    //   4832: ldc_w 'syncID'
    //   4835: aload #9
    //   4837: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   4840: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4843: pop
    //   4844: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   4847: ifne -> 4855
    //   4850: goto_w -> 5020
    //   4855: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   4858: ldc_w 'crushftp.dmz.queue'
    //   4861: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   4864: checkcast java/util/Vector
    //   4867: astore #10
    //   4869: new java/util/Properties
    //   4872: dup
    //   4873: invokespecial <init> : ()V
    //   4876: astore #11
    //   4878: aload #11
    //   4880: ldc_w 'type'
    //   4883: ldc_w 'GET:SYNC'
    //   4886: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4889: pop
    //   4890: aload #11
    //   4892: ldc_w 'id'
    //   4895: invokestatic makeBoundary : ()Ljava/lang/String;
    //   4898: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4901: pop
    //   4902: aload #11
    //   4904: ldc 'username'
    //   4906: aload_0
    //   4907: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   4910: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   4913: ldc 'user_name'
    //   4915: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   4918: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4921: pop
    //   4922: aload #11
    //   4924: ldc_w 'request'
    //   4927: aload_1
    //   4928: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4931: pop
    //   4932: aload #11
    //   4934: ldc_w 'syncID'
    //   4937: aload #9
    //   4939: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   4942: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4945: pop
    //   4946: aload #11
    //   4948: ldc_w 'root_dir'
    //   4951: aload_0
    //   4952: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   4955: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   4958: ldc_w 'root_dir'
    //   4961: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   4964: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4967: pop
    //   4968: aload #11
    //   4970: ldc 'clientid'
    //   4972: aload_0
    //   4973: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   4976: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   4979: ldc 'clientid'
    //   4981: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   4984: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4987: pop
    //   4988: aload #11
    //   4990: ldc_w 'need_response'
    //   4993: ldc 'true'
    //   4995: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4998: pop
    //   4999: aload #10
    //   5001: aload #11
    //   5003: invokevirtual addElement : (Ljava/lang/Object;)V
    //   5006: aload #11
    //   5008: bipush #60
    //   5010: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   5013: astore #11
    //   5015: goto_w -> 5047
    //   5020: aload_1
    //   5021: aload_0
    //   5022: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   5025: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   5028: getfield uVFS : Lcrushftp/server/VFS;
    //   5031: aload_0
    //   5032: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   5035: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   5038: ldc_w 'root_dir'
    //   5041: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   5044: invokestatic purgeSync : (Ljava/util/Properties;Lcrushftp/server/VFS;Ljava/lang/String;)V
    //   5047: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   5050: astore #10
    //   5052: new java/lang/StringBuffer
    //   5055: dup
    //   5056: aload #10
    //   5058: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   5061: invokespecial <init> : (Ljava/lang/String;)V
    //   5064: ldc_w '<result><response_status>success</response_status></result>'
    //   5067: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5070: invokevirtual toString : ()Ljava/lang/String;
    //   5073: astore #10
    //   5075: aload_0
    //   5076: aload #10
    //   5078: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   5081: ireturn
    //   5082: ldc_w 'Sync was not found for your current folder.'
    //   5085: astore #10
    //   5087: aload_0
    //   5088: ldc_w 'HTTP/1.1 404 OK'
    //   5091: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   5094: aload_0
    //   5095: ldc_w 'Cache-Control: no-store'
    //   5098: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   5101: aload_0
    //   5102: ldc_w 'Content-Type: application/binary'
    //   5105: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   5108: aload_0
    //   5109: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   5112: invokevirtual write_standard_headers : ()V
    //   5115: aload_0
    //   5116: new java/lang/StringBuffer
    //   5119: dup
    //   5120: ldc_w 'Content-Length: '
    //   5123: invokespecial <init> : (Ljava/lang/String;)V
    //   5126: aload #10
    //   5128: invokevirtual length : ()I
    //   5131: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   5134: iconst_2
    //   5135: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   5138: invokevirtual toString : ()Ljava/lang/String;
    //   5141: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   5144: aload_0
    //   5145: ldc ''
    //   5147: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   5150: aload_0
    //   5151: aload #10
    //   5153: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   5156: iconst_1
    //   5157: ireturn
    //   5158: aload #5
    //   5160: ldc_w 'downloadCrushFTPDrive'
    //   5163: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   5166: ifne -> 5174
    //   5169: goto_w -> 5765
    //   5174: ldc 'enterprise_level'
    //   5176: invokestatic siIG : (Ljava/lang/String;)I
    //   5179: ifgt -> 5187
    //   5182: goto_w -> 5765
    //   5187: aload_1
    //   5188: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   5191: pop
    //   5192: aload_1
    //   5193: ldc_w 'appname'
    //   5196: ldc 'CrushFTPDrive'
    //   5198: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   5201: invokestatic dots : (Ljava/lang/String;)Ljava/lang/String;
    //   5204: astore #8
    //   5206: new java/io/ByteArrayOutputStream
    //   5209: dup
    //   5210: invokespecial <init> : ()V
    //   5213: astore #9
    //   5215: aconst_null
    //   5216: astore #10
    //   5218: new com/crushftp/client/File_S
    //   5221: dup
    //   5222: new java/lang/StringBuffer
    //   5225: dup
    //   5226: ldc_w 'crushftp.web'
    //   5229: invokestatic getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   5232: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   5235: invokespecial <init> : (Ljava/lang/String;)V
    //   5238: ldc_w 'WebInterface/'
    //   5241: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5244: aload #8
    //   5246: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5249: ldc_w '/'
    //   5252: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5255: aload #8
    //   5257: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5260: ldc_w '.jnlp'
    //   5263: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5266: invokevirtual toString : ()Ljava/lang/String;
    //   5269: invokespecial <init> : (Ljava/lang/String;)V
    //   5272: invokevirtual exists : ()Z
    //   5275: ifne -> 5283
    //   5278: goto_w -> 5351
    //   5283: new java/io/FileInputStream
    //   5286: dup
    //   5287: new com/crushftp/client/File_S
    //   5290: dup
    //   5291: new java/lang/StringBuffer
    //   5294: dup
    //   5295: ldc_w 'crushftp.web'
    //   5298: invokestatic getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   5301: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   5304: invokespecial <init> : (Ljava/lang/String;)V
    //   5307: ldc_w 'WebInterface/'
    //   5310: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5313: aload #8
    //   5315: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5318: ldc_w '/'
    //   5321: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5324: aload #8
    //   5326: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5329: ldc_w '.jnlp'
    //   5332: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5335: invokevirtual toString : ()Ljava/lang/String;
    //   5338: invokespecial <init> : (Ljava/lang/String;)V
    //   5341: invokespecial <init> : (Ljava/io/File;)V
    //   5344: astore #10
    //   5346: goto_w -> 5392
    //   5351: new java/io/FileInputStream
    //   5354: dup
    //   5355: new com/crushftp/client/File_S
    //   5358: dup
    //   5359: new java/lang/StringBuffer
    //   5362: dup
    //   5363: ldc_w 'crushftp.web'
    //   5366: invokestatic getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   5369: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   5372: invokespecial <init> : (Ljava/lang/String;)V
    //   5375: ldc_w 'WebInterface/CrushFTPDrive/CrushFTPDrive.jnlp'
    //   5378: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5381: invokevirtual toString : ()Ljava/lang/String;
    //   5384: invokespecial <init> : (Ljava/lang/String;)V
    //   5387: invokespecial <init> : (Ljava/io/File;)V
    //   5390: astore #10
    //   5392: aload #10
    //   5394: aload #9
    //   5396: iconst_0
    //   5397: invokestatic streamCopier : (Ljava/io/InputStream;Ljava/io/OutputStream;Z)V
    //   5400: new java/lang/String
    //   5403: dup
    //   5404: aload #9
    //   5406: invokevirtual toByteArray : ()[B
    //   5409: ldc_w 'UTF8'
    //   5412: invokespecial <init> : ([BLjava/lang/String;)V
    //   5415: astore #11
    //   5417: aload #11
    //   5419: aload #11
    //   5421: ldc_w '<argument>'
    //   5424: invokevirtual indexOf : (Ljava/lang/String;)I
    //   5427: ldc_w '<argument>'
    //   5430: invokevirtual length : ()I
    //   5433: iadd
    //   5434: aload #11
    //   5436: ldc_w '</argument>'
    //   5439: invokevirtual indexOf : (Ljava/lang/String;)I
    //   5442: invokevirtual substring : (II)Ljava/lang/String;
    //   5445: astore #12
    //   5447: aload #12
    //   5449: ldc_w '%base_url%'
    //   5452: aload_0
    //   5453: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   5456: aload_0
    //   5457: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   5460: getfield hostString : Ljava/lang/String;
    //   5463: invokevirtual getBaseUrl : (Ljava/lang/String;)Ljava/lang/String;
    //   5466: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   5469: astore #12
    //   5471: aload #12
    //   5473: ldc_w '%appname%'
    //   5476: aload #8
    //   5478: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   5481: astore #12
    //   5483: aload #12
    //   5485: ldc_w '%user_name%'
    //   5488: aload_0
    //   5489: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   5492: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   5495: ldc 'user_name'
    //   5497: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   5500: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   5503: astore #12
    //   5505: aload #12
    //   5507: invokestatic url_encode : (Ljava/lang/String;)Ljava/lang/String;
    //   5510: astore #12
    //   5512: new java/lang/StringBuffer
    //   5515: dup
    //   5516: aload #11
    //   5518: iconst_0
    //   5519: aload #11
    //   5521: ldc_w '<argument>'
    //   5524: invokevirtual indexOf : (Ljava/lang/String;)I
    //   5527: ldc_w '<argument>'
    //   5530: invokevirtual length : ()I
    //   5533: iadd
    //   5534: invokevirtual substring : (II)Ljava/lang/String;
    //   5537: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   5540: invokespecial <init> : (Ljava/lang/String;)V
    //   5543: aload #12
    //   5545: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5548: aload #11
    //   5550: aload #11
    //   5552: ldc_w '</argument>'
    //   5555: invokevirtual indexOf : (Ljava/lang/String;)I
    //   5558: invokevirtual substring : (I)Ljava/lang/String;
    //   5561: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5564: invokevirtual toString : ()Ljava/lang/String;
    //   5567: astore #11
    //   5569: aload #11
    //   5571: ldc_w '%base_url%'
    //   5574: aload_0
    //   5575: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   5578: aload_0
    //   5579: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   5582: getfield hostString : Ljava/lang/String;
    //   5585: invokevirtual getBaseUrl : (Ljava/lang/String;)Ljava/lang/String;
    //   5588: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   5591: astore #11
    //   5593: aload #11
    //   5595: ldc_w '%appname%'
    //   5598: aload #8
    //   5600: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   5603: astore #11
    //   5605: aload #11
    //   5607: ldc_w '%user_name%'
    //   5610: aload_0
    //   5611: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   5614: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   5617: ldc 'user_name'
    //   5619: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   5622: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   5625: astore #11
    //   5627: aload_0
    //   5628: ldc_w 'HTTP/1.1 200 OK'
    //   5631: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   5634: aload_0
    //   5635: ldc_w 'Cache-Control: no-store'
    //   5638: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   5641: aload_0
    //   5642: ldc_w 'Content-Type: application/x-java-jnlp-file'
    //   5645: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   5648: aload_0
    //   5649: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   5652: invokevirtual write_standard_headers : ()V
    //   5655: aload #11
    //   5657: ldc_w 'UTF8'
    //   5660: invokevirtual getBytes : (Ljava/lang/String;)[B
    //   5663: astore #13
    //   5665: aload_0
    //   5666: new java/lang/StringBuffer
    //   5669: dup
    //   5670: ldc_w 'Content-Length: '
    //   5673: invokespecial <init> : (Ljava/lang/String;)V
    //   5676: aload #13
    //   5678: arraylength
    //   5679: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   5682: invokevirtual toString : ()Ljava/lang/String;
    //   5685: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   5688: aload_0
    //   5689: new java/lang/StringBuffer
    //   5692: dup
    //   5693: ldc_w 'Content-Disposition: attachment; filename="'
    //   5696: invokespecial <init> : (Ljava/lang/String;)V
    //   5699: aload #8
    //   5701: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   5704: ldc_w '\\r'
    //   5707: ldc_w '_'
    //   5710: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   5713: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5716: ldc_w '.jnlp"'
    //   5719: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5722: invokevirtual toString : ()Ljava/lang/String;
    //   5725: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   5728: aload_0
    //   5729: ldc_w 'X-UA-Compatible: chrome=1'
    //   5732: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   5735: aload_0
    //   5736: ldc ''
    //   5738: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   5741: aload_0
    //   5742: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   5745: getfield original_os : Ljava/io/OutputStream;
    //   5748: aload #13
    //   5750: invokevirtual write : ([B)V
    //   5753: aload_0
    //   5754: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   5757: getfield original_os : Ljava/io/OutputStream;
    //   5760: invokevirtual flush : ()V
    //   5763: iconst_1
    //   5764: ireturn
    //   5765: aload #5
    //   5767: ldc_w 'downloadSyncAgent'
    //   5770: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   5773: ifne -> 5781
    //   5776: goto_w -> 6505
    //   5781: ldc 'enterprise_level'
    //   5783: invokestatic siIG : (Ljava/lang/String;)I
    //   5786: ifgt -> 5794
    //   5789: goto_w -> 6505
    //   5794: aload_1
    //   5795: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   5798: pop
    //   5799: aload_1
    //   5800: ldc_w 'appname'
    //   5803: ldc_w 'CrushSync'
    //   5806: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   5809: invokestatic dots : (Ljava/lang/String;)Ljava/lang/String;
    //   5812: astore #8
    //   5814: new java/io/ByteArrayOutputStream
    //   5817: dup
    //   5818: invokespecial <init> : ()V
    //   5821: astore #9
    //   5823: aconst_null
    //   5824: astore #10
    //   5826: new com/crushftp/client/File_S
    //   5829: dup
    //   5830: new java/lang/StringBuffer
    //   5833: dup
    //   5834: ldc_w 'crushftp.web'
    //   5837: invokestatic getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   5840: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   5843: invokespecial <init> : (Ljava/lang/String;)V
    //   5846: ldc_w 'WebInterface/'
    //   5849: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5852: aload #8
    //   5854: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5857: ldc_w '/'
    //   5860: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5863: aload #8
    //   5865: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5868: ldc_w '.jnlp'
    //   5871: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5874: invokevirtual toString : ()Ljava/lang/String;
    //   5877: invokespecial <init> : (Ljava/lang/String;)V
    //   5880: invokevirtual exists : ()Z
    //   5883: ifne -> 5891
    //   5886: goto_w -> 5959
    //   5891: new java/io/FileInputStream
    //   5894: dup
    //   5895: new com/crushftp/client/File_S
    //   5898: dup
    //   5899: new java/lang/StringBuffer
    //   5902: dup
    //   5903: ldc_w 'crushftp.web'
    //   5906: invokestatic getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   5909: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   5912: invokespecial <init> : (Ljava/lang/String;)V
    //   5915: ldc_w 'WebInterface/'
    //   5918: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5921: aload #8
    //   5923: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5926: ldc_w '/'
    //   5929: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5932: aload #8
    //   5934: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5937: ldc_w '.jnlp'
    //   5940: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5943: invokevirtual toString : ()Ljava/lang/String;
    //   5946: invokespecial <init> : (Ljava/lang/String;)V
    //   5949: invokespecial <init> : (Ljava/io/File;)V
    //   5952: astore #10
    //   5954: goto_w -> 6000
    //   5959: new java/io/FileInputStream
    //   5962: dup
    //   5963: new com/crushftp/client/File_S
    //   5966: dup
    //   5967: new java/lang/StringBuffer
    //   5970: dup
    //   5971: ldc_w 'crushftp.web'
    //   5974: invokestatic getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   5977: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   5980: invokespecial <init> : (Ljava/lang/String;)V
    //   5983: ldc_w 'WebInterface/CrushSync/CrushSync.jnlp'
    //   5986: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   5989: invokevirtual toString : ()Ljava/lang/String;
    //   5992: invokespecial <init> : (Ljava/lang/String;)V
    //   5995: invokespecial <init> : (Ljava/io/File;)V
    //   5998: astore #10
    //   6000: aload #10
    //   6002: aload #9
    //   6004: iconst_0
    //   6005: invokestatic streamCopier : (Ljava/io/InputStream;Ljava/io/OutputStream;Z)V
    //   6008: aload_1
    //   6009: ldc 'current_password'
    //   6011: ldc ''
    //   6013: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6016: invokevirtual trim : ()Ljava/lang/String;
    //   6019: astore #11
    //   6021: aload #11
    //   6023: ldc ''
    //   6025: invokevirtual equals : (Ljava/lang/Object;)Z
    //   6028: ifeq -> 6036
    //   6031: goto_w -> 6054
    //   6036: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   6039: getfield common_code : Lcrushftp/handlers/Common;
    //   6042: aload #11
    //   6044: ldc_w 'DES'
    //   6047: ldc ''
    //   6049: invokevirtual encode_pass : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6052: astore #11
    //   6054: new java/lang/String
    //   6057: dup
    //   6058: aload #9
    //   6060: invokevirtual toByteArray : ()[B
    //   6063: ldc_w 'UTF8'
    //   6066: invokespecial <init> : ([BLjava/lang/String;)V
    //   6069: astore #12
    //   6071: aload #12
    //   6073: aload #12
    //   6075: ldc_w '<argument>'
    //   6078: invokevirtual indexOf : (Ljava/lang/String;)I
    //   6081: ldc_w '<argument>'
    //   6084: invokevirtual length : ()I
    //   6087: iadd
    //   6088: aload #12
    //   6090: ldc_w '</argument>'
    //   6093: invokevirtual indexOf : (Ljava/lang/String;)I
    //   6096: invokevirtual substring : (II)Ljava/lang/String;
    //   6099: astore #13
    //   6101: aload #13
    //   6103: ldc_w '%base_url%'
    //   6106: aload_0
    //   6107: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   6110: aload_0
    //   6111: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   6114: getfield hostString : Ljava/lang/String;
    //   6117: invokevirtual getBaseUrl : (Ljava/lang/String;)Ljava/lang/String;
    //   6120: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6123: astore #13
    //   6125: aload #13
    //   6127: ldc_w '%appname%'
    //   6130: aload #8
    //   6132: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6135: astore #13
    //   6137: aload #13
    //   6139: ldc_w '%user_name%'
    //   6142: aload_0
    //   6143: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   6146: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   6149: ldc 'user_name'
    //   6151: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   6154: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6157: astore #13
    //   6159: aload #13
    //   6161: ldc_w '%user_pass%'
    //   6164: aload #11
    //   6166: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6169: astore #13
    //   6171: aload #13
    //   6173: ldc_w '%admin_pass%'
    //   6176: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   6179: getfield common_code : Lcrushftp/handlers/Common;
    //   6182: aload_1
    //   6183: ldc_w 'admin_pass'
    //   6186: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   6189: ldc_w 'DES'
    //   6192: ldc ''
    //   6194: invokevirtual encode_pass : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6197: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6200: astore #13
    //   6202: aload #13
    //   6204: invokestatic url_encode : (Ljava/lang/String;)Ljava/lang/String;
    //   6207: astore #13
    //   6209: new java/lang/StringBuffer
    //   6212: dup
    //   6213: aload #12
    //   6215: iconst_0
    //   6216: aload #12
    //   6218: ldc_w '<argument>'
    //   6221: invokevirtual indexOf : (Ljava/lang/String;)I
    //   6224: ldc_w '<argument>'
    //   6227: invokevirtual length : ()I
    //   6230: iadd
    //   6231: invokevirtual substring : (II)Ljava/lang/String;
    //   6234: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   6237: invokespecial <init> : (Ljava/lang/String;)V
    //   6240: aload #13
    //   6242: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   6245: aload #12
    //   6247: aload #12
    //   6249: ldc_w '</argument>'
    //   6252: invokevirtual indexOf : (Ljava/lang/String;)I
    //   6255: invokevirtual substring : (I)Ljava/lang/String;
    //   6258: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   6261: invokevirtual toString : ()Ljava/lang/String;
    //   6264: astore #12
    //   6266: aload #12
    //   6268: ldc_w '%base_url%'
    //   6271: aload_0
    //   6272: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   6275: aload_0
    //   6276: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   6279: getfield hostString : Ljava/lang/String;
    //   6282: invokevirtual getBaseUrl : (Ljava/lang/String;)Ljava/lang/String;
    //   6285: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6288: astore #12
    //   6290: aload #12
    //   6292: ldc_w '%appname%'
    //   6295: aload #8
    //   6297: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6300: astore #12
    //   6302: aload #12
    //   6304: ldc_w '%user_name%'
    //   6307: aload_0
    //   6308: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   6311: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   6314: ldc 'user_name'
    //   6316: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   6319: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6322: astore #12
    //   6324: aload #12
    //   6326: ldc_w '%user_pass%'
    //   6329: aload #11
    //   6331: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6334: astore #12
    //   6336: aload #12
    //   6338: ldc_w '%admin_pass%'
    //   6341: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   6344: getfield common_code : Lcrushftp/handlers/Common;
    //   6347: aload_1
    //   6348: ldc_w 'admin_pass'
    //   6351: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   6354: ldc_w 'DES'
    //   6357: ldc ''
    //   6359: invokevirtual encode_pass : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6362: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6365: astore #12
    //   6367: aload_0
    //   6368: ldc_w 'HTTP/1.1 200 OK'
    //   6371: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   6374: aload_0
    //   6375: ldc_w 'Cache-Control: no-store'
    //   6378: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   6381: aload_0
    //   6382: ldc_w 'Content-Type: application/x-java-jnlp-file'
    //   6385: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   6388: aload_0
    //   6389: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   6392: invokevirtual write_standard_headers : ()V
    //   6395: aload #12
    //   6397: ldc_w 'UTF8'
    //   6400: invokevirtual getBytes : (Ljava/lang/String;)[B
    //   6403: astore #14
    //   6405: aload_0
    //   6406: new java/lang/StringBuffer
    //   6409: dup
    //   6410: ldc_w 'Content-Length: '
    //   6413: invokespecial <init> : (Ljava/lang/String;)V
    //   6416: aload #14
    //   6418: arraylength
    //   6419: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   6422: invokevirtual toString : ()Ljava/lang/String;
    //   6425: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   6428: aload_0
    //   6429: new java/lang/StringBuffer
    //   6432: dup
    //   6433: ldc_w 'Content-Disposition: attachment; filename="'
    //   6436: invokespecial <init> : (Ljava/lang/String;)V
    //   6439: aload #8
    //   6441: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   6444: ldc_w '\\r'
    //   6447: ldc_w '_'
    //   6450: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6453: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   6456: ldc_w '.jnlp"'
    //   6459: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   6462: invokevirtual toString : ()Ljava/lang/String;
    //   6465: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   6468: aload_0
    //   6469: ldc_w 'X-UA-Compatible: chrome=1'
    //   6472: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   6475: aload_0
    //   6476: ldc ''
    //   6478: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   6481: aload_0
    //   6482: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   6485: getfield original_os : Ljava/io/OutputStream;
    //   6488: aload #14
    //   6490: invokevirtual write : ([B)V
    //   6493: aload_0
    //   6494: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   6497: getfield original_os : Ljava/io/OutputStream;
    //   6500: invokevirtual flush : ()V
    //   6503: iconst_1
    //   6504: ireturn
    //   6505: aload #5
    //   6507: ldc_w 'downloadAttachmentRedirector'
    //   6510: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   6513: ifne -> 6521
    //   6516: goto_w -> 7113
    //   6521: ldc 'enterprise_level'
    //   6523: invokestatic siIG : (Ljava/lang/String;)I
    //   6526: ifgt -> 6534
    //   6529: goto_w -> 7113
    //   6534: aload_1
    //   6535: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   6538: pop
    //   6539: aload_1
    //   6540: ldc_w 'appname'
    //   6543: ldc_w 'AttachmentRedirector'
    //   6546: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6549: invokestatic dots : (Ljava/lang/String;)Ljava/lang/String;
    //   6552: astore #8
    //   6554: new java/io/ByteArrayOutputStream
    //   6557: dup
    //   6558: invokespecial <init> : ()V
    //   6561: astore #9
    //   6563: aconst_null
    //   6564: astore #10
    //   6566: new com/crushftp/client/File_S
    //   6569: dup
    //   6570: new java/lang/StringBuffer
    //   6573: dup
    //   6574: ldc_w 'crushftp.web'
    //   6577: invokestatic getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   6580: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   6583: invokespecial <init> : (Ljava/lang/String;)V
    //   6586: ldc_w 'WebInterface/'
    //   6589: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   6592: aload #8
    //   6594: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   6597: ldc_w '/'
    //   6600: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   6603: aload #8
    //   6605: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   6608: ldc_w '.jnlp'
    //   6611: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   6614: invokevirtual toString : ()Ljava/lang/String;
    //   6617: invokespecial <init> : (Ljava/lang/String;)V
    //   6620: invokevirtual exists : ()Z
    //   6623: ifne -> 6631
    //   6626: goto_w -> 6699
    //   6631: new java/io/FileInputStream
    //   6634: dup
    //   6635: new com/crushftp/client/File_S
    //   6638: dup
    //   6639: new java/lang/StringBuffer
    //   6642: dup
    //   6643: ldc_w 'crushftp.web'
    //   6646: invokestatic getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   6649: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   6652: invokespecial <init> : (Ljava/lang/String;)V
    //   6655: ldc_w 'WebInterface/'
    //   6658: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   6661: aload #8
    //   6663: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   6666: ldc_w '/'
    //   6669: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   6672: aload #8
    //   6674: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   6677: ldc_w '.jnlp'
    //   6680: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   6683: invokevirtual toString : ()Ljava/lang/String;
    //   6686: invokespecial <init> : (Ljava/lang/String;)V
    //   6689: invokespecial <init> : (Ljava/io/File;)V
    //   6692: astore #10
    //   6694: goto_w -> 6740
    //   6699: new java/io/FileInputStream
    //   6702: dup
    //   6703: new com/crushftp/client/File_S
    //   6706: dup
    //   6707: new java/lang/StringBuffer
    //   6710: dup
    //   6711: ldc_w 'crushftp.web'
    //   6714: invokestatic getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   6717: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   6720: invokespecial <init> : (Ljava/lang/String;)V
    //   6723: ldc_w 'WebInterface/AttachmentRedirector/AttachmentRedirector.jnlp'
    //   6726: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   6729: invokevirtual toString : ()Ljava/lang/String;
    //   6732: invokespecial <init> : (Ljava/lang/String;)V
    //   6735: invokespecial <init> : (Ljava/io/File;)V
    //   6738: astore #10
    //   6740: aload #10
    //   6742: aload #9
    //   6744: iconst_0
    //   6745: invokestatic streamCopier : (Ljava/io/InputStream;Ljava/io/OutputStream;Z)V
    //   6748: new java/lang/String
    //   6751: dup
    //   6752: aload #9
    //   6754: invokevirtual toByteArray : ()[B
    //   6757: ldc_w 'UTF8'
    //   6760: invokespecial <init> : ([BLjava/lang/String;)V
    //   6763: astore #11
    //   6765: aload #11
    //   6767: aload #11
    //   6769: ldc_w '<argument>'
    //   6772: invokevirtual indexOf : (Ljava/lang/String;)I
    //   6775: ldc_w '<argument>'
    //   6778: invokevirtual length : ()I
    //   6781: iadd
    //   6782: aload #11
    //   6784: ldc_w '</argument>'
    //   6787: invokevirtual indexOf : (Ljava/lang/String;)I
    //   6790: invokevirtual substring : (II)Ljava/lang/String;
    //   6793: astore #12
    //   6795: aload #12
    //   6797: ldc_w '%base_url%'
    //   6800: aload_0
    //   6801: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   6804: aload_0
    //   6805: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   6808: getfield hostString : Ljava/lang/String;
    //   6811: invokevirtual getBaseUrl : (Ljava/lang/String;)Ljava/lang/String;
    //   6814: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6817: astore #12
    //   6819: aload #12
    //   6821: ldc_w '%appname%'
    //   6824: aload #8
    //   6826: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6829: astore #12
    //   6831: aload #12
    //   6833: ldc_w '%user_name%'
    //   6836: aload_0
    //   6837: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   6840: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   6843: ldc 'user_name'
    //   6845: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   6848: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6851: astore #12
    //   6853: aload #12
    //   6855: invokestatic url_encode : (Ljava/lang/String;)Ljava/lang/String;
    //   6858: astore #12
    //   6860: new java/lang/StringBuffer
    //   6863: dup
    //   6864: aload #11
    //   6866: iconst_0
    //   6867: aload #11
    //   6869: ldc_w '<argument>'
    //   6872: invokevirtual indexOf : (Ljava/lang/String;)I
    //   6875: ldc_w '<argument>'
    //   6878: invokevirtual length : ()I
    //   6881: iadd
    //   6882: invokevirtual substring : (II)Ljava/lang/String;
    //   6885: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   6888: invokespecial <init> : (Ljava/lang/String;)V
    //   6891: aload #12
    //   6893: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   6896: aload #11
    //   6898: aload #11
    //   6900: ldc_w '</argument>'
    //   6903: invokevirtual indexOf : (Ljava/lang/String;)I
    //   6906: invokevirtual substring : (I)Ljava/lang/String;
    //   6909: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   6912: invokevirtual toString : ()Ljava/lang/String;
    //   6915: astore #11
    //   6917: aload #11
    //   6919: ldc_w '%base_url%'
    //   6922: aload_0
    //   6923: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   6926: aload_0
    //   6927: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   6930: getfield hostString : Ljava/lang/String;
    //   6933: invokevirtual getBaseUrl : (Ljava/lang/String;)Ljava/lang/String;
    //   6936: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6939: astore #11
    //   6941: aload #11
    //   6943: ldc_w '%appname%'
    //   6946: aload #8
    //   6948: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6951: astore #11
    //   6953: aload #11
    //   6955: ldc_w '%user_name%'
    //   6958: aload_0
    //   6959: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   6962: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   6965: ldc 'user_name'
    //   6967: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   6970: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   6973: astore #11
    //   6975: aload_0
    //   6976: ldc_w 'HTTP/1.1 200 OK'
    //   6979: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   6982: aload_0
    //   6983: ldc_w 'Cache-Control: no-store'
    //   6986: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   6989: aload_0
    //   6990: ldc_w 'Content-Type: application/x-java-jnlp-file'
    //   6993: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   6996: aload_0
    //   6997: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7000: invokevirtual write_standard_headers : ()V
    //   7003: aload #11
    //   7005: ldc_w 'UTF8'
    //   7008: invokevirtual getBytes : (Ljava/lang/String;)[B
    //   7011: astore #13
    //   7013: aload_0
    //   7014: new java/lang/StringBuffer
    //   7017: dup
    //   7018: ldc_w 'Content-Length: '
    //   7021: invokespecial <init> : (Ljava/lang/String;)V
    //   7024: aload #13
    //   7026: arraylength
    //   7027: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   7030: invokevirtual toString : ()Ljava/lang/String;
    //   7033: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   7036: aload_0
    //   7037: new java/lang/StringBuffer
    //   7040: dup
    //   7041: ldc_w 'Content-Disposition: attachment; filename="'
    //   7044: invokespecial <init> : (Ljava/lang/String;)V
    //   7047: aload #8
    //   7049: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   7052: ldc_w '\\r'
    //   7055: ldc_w '_'
    //   7058: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   7061: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   7064: ldc_w '.jnlp"'
    //   7067: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   7070: invokevirtual toString : ()Ljava/lang/String;
    //   7073: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   7076: aload_0
    //   7077: ldc_w 'X-UA-Compatible: chrome=1'
    //   7080: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   7083: aload_0
    //   7084: ldc ''
    //   7086: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   7089: aload_0
    //   7090: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7093: getfield original_os : Ljava/io/OutputStream;
    //   7096: aload #13
    //   7098: invokevirtual write : ([B)V
    //   7101: aload_0
    //   7102: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7105: getfield original_os : Ljava/io/OutputStream;
    //   7108: invokevirtual flush : ()V
    //   7111: iconst_1
    //   7112: ireturn
    //   7113: aload #5
    //   7115: ldc_w 'getCrushSyncPrefs'
    //   7118: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   7121: ifne -> 7129
    //   7124: goto_w -> 7432
    //   7129: ldc 'enterprise_level'
    //   7131: invokestatic siIG : (Ljava/lang/String;)I
    //   7134: ifgt -> 7142
    //   7137: goto_w -> 7432
    //   7142: new java/util/Vector
    //   7145: dup
    //   7146: invokespecial <init> : ()V
    //   7149: astore #8
    //   7151: aload_1
    //   7152: ldc 'user_name'
    //   7154: aload_0
    //   7155: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7158: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   7161: ldc 'user_name'
    //   7163: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   7166: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7169: pop
    //   7170: aload_1
    //   7171: ldc 'user_ip'
    //   7173: aload_0
    //   7174: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7177: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   7180: ldc 'user_ip'
    //   7182: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   7185: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7188: pop
    //   7189: aload_1
    //   7190: ldc 'clientid'
    //   7192: aload_0
    //   7193: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7196: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   7199: ldc 'clientid'
    //   7201: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   7204: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7207: pop
    //   7208: aload_1
    //   7209: ldc_w 'site'
    //   7212: aload #4
    //   7214: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7217: pop
    //   7218: aload_1
    //   7219: ldc_w 'version'
    //   7222: ldc_w '0'
    //   7225: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   7228: ldc_w '.'
    //   7231: ldc ''
    //   7233: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   7236: invokestatic parseInt : (Ljava/lang/String;)I
    //   7239: getstatic crushftp/handlers/SyncTools.minSyncVersion : Ljava/lang/String;
    //   7242: ldc_w '.'
    //   7245: ldc ''
    //   7247: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   7250: invokestatic parseInt : (Ljava/lang/String;)I
    //   7253: if_icmpge -> 7261
    //   7256: goto_w -> 7275
    //   7261: aload_1
    //   7262: invokestatic getSyncPrefs : (Ljava/util/Properties;)Ljava/lang/Object;
    //   7265: checkcast java/util/Vector
    //   7268: astore #8
    //   7270: goto_w -> 7314
    //   7275: new java/util/Properties
    //   7278: dup
    //   7279: invokespecial <init> : ()V
    //   7282: astore #9
    //   7284: aload #9
    //   7286: ldc_w 'UPDATE_REQUIRED'
    //   7289: ldc 'true'
    //   7291: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7294: pop
    //   7295: aload #9
    //   7297: ldc_w 'MIN_VERSION'
    //   7300: getstatic crushftp/handlers/SyncTools.minSyncVersion : Ljava/lang/String;
    //   7303: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7306: pop
    //   7307: aload #8
    //   7309: aload #9
    //   7311: invokevirtual addElement : (Ljava/lang/Object;)V
    //   7314: new java/io/ByteArrayOutputStream
    //   7317: dup
    //   7318: invokespecial <init> : ()V
    //   7321: astore #9
    //   7323: new java/io/ObjectOutputStream
    //   7326: dup
    //   7327: aload #9
    //   7329: invokespecial <init> : (Ljava/io/OutputStream;)V
    //   7332: astore #10
    //   7334: aload #10
    //   7336: aload #8
    //   7338: invokevirtual writeObject : (Ljava/lang/Object;)V
    //   7341: aload #10
    //   7343: invokevirtual close : ()V
    //   7346: aload_0
    //   7347: ldc_w 'HTTP/1.1 200 OK'
    //   7350: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   7353: aload_0
    //   7354: ldc_w 'Cache-Control: no-store'
    //   7357: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   7360: aload_0
    //   7361: ldc_w 'Content-Type: application/binary'
    //   7364: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   7367: aload_0
    //   7368: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7371: invokevirtual write_standard_headers : ()V
    //   7374: aload_0
    //   7375: new java/lang/StringBuffer
    //   7378: dup
    //   7379: ldc_w 'Content-Length: '
    //   7382: invokespecial <init> : (Ljava/lang/String;)V
    //   7385: aload #9
    //   7387: invokevirtual size : ()I
    //   7390: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   7393: invokevirtual toString : ()Ljava/lang/String;
    //   7396: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   7399: aload_0
    //   7400: ldc ''
    //   7402: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   7405: aload_0
    //   7406: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7409: getfield original_os : Ljava/io/OutputStream;
    //   7412: aload #9
    //   7414: invokevirtual toByteArray : ()[B
    //   7417: invokevirtual write : ([B)V
    //   7420: aload_0
    //   7421: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7424: getfield original_os : Ljava/io/OutputStream;
    //   7427: invokevirtual flush : ()V
    //   7430: iconst_1
    //   7431: ireturn
    //   7432: aload #5
    //   7434: ldc_w 'syncCommandResult'
    //   7437: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   7440: ifne -> 7448
    //   7443: goto_w -> 7567
    //   7448: ldc 'enterprise_level'
    //   7450: invokestatic siIG : (Ljava/lang/String;)I
    //   7453: ifgt -> 7461
    //   7456: goto_w -> 7567
    //   7461: aload_1
    //   7462: ldc 'user_name'
    //   7464: aload_0
    //   7465: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7468: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   7471: ldc 'user_name'
    //   7473: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   7476: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7479: pop
    //   7480: aload_1
    //   7481: ldc 'user_ip'
    //   7483: aload_0
    //   7484: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7487: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   7490: ldc 'user_ip'
    //   7492: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   7495: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7498: pop
    //   7499: aload_1
    //   7500: ldc 'clientid'
    //   7502: aload_0
    //   7503: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7506: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   7509: ldc 'clientid'
    //   7511: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   7514: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7517: pop
    //   7518: aload_1
    //   7519: ldc_w 'site'
    //   7522: aload #4
    //   7524: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7527: pop
    //   7528: aload_1
    //   7529: invokestatic sendSyncResult : (Ljava/util/Properties;)V
    //   7532: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   7535: astore #8
    //   7537: new java/lang/StringBuffer
    //   7540: dup
    //   7541: aload #8
    //   7543: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   7546: invokespecial <init> : (Ljava/lang/String;)V
    //   7549: ldc_w '<result><response_status>success</response_status></result>'
    //   7552: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   7555: invokevirtual toString : ()Ljava/lang/String;
    //   7558: astore #8
    //   7560: aload_0
    //   7561: aload #8
    //   7563: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   7566: ireturn
    //   7567: aload #5
    //   7569: ldc_w 'getSyncAgents'
    //   7572: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   7575: ifne -> 7583
    //   7578: goto_w -> 7727
    //   7583: ldc 'enterprise_level'
    //   7585: invokestatic siIG : (Ljava/lang/String;)I
    //   7588: ifgt -> 7596
    //   7591: goto_w -> 7727
    //   7596: aload #7
    //   7598: ifnonnull -> 7606
    //   7601: goto_w -> 7621
    //   7606: aload_0
    //   7607: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7610: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   7613: ldc_w 'last_activity'
    //   7616: aload #7
    //   7618: invokevirtual put : (Ljava/lang/String;Ljava/lang/Object;)V
    //   7621: aload_1
    //   7622: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   7625: pop
    //   7626: new java/util/Vector
    //   7629: dup
    //   7630: invokespecial <init> : ()V
    //   7633: astore #8
    //   7635: aload_1
    //   7636: ldc 'user_name'
    //   7638: aload_0
    //   7639: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7642: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   7645: ldc 'user_name'
    //   7647: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   7650: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7653: pop
    //   7654: aload_1
    //   7655: ldc 'user_ip'
    //   7657: aload_0
    //   7658: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7661: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   7664: ldc 'user_ip'
    //   7666: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   7669: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7672: pop
    //   7673: aload_1
    //   7674: ldc 'clientid'
    //   7676: aload_0
    //   7677: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7680: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   7683: ldc 'clientid'
    //   7685: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   7688: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7691: pop
    //   7692: aload_1
    //   7693: ldc_w 'site'
    //   7696: aload #4
    //   7698: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7701: pop
    //   7702: aload_1
    //   7703: invokestatic getSyncAgents : (Ljava/util/Properties;)Ljava/lang/Object;
    //   7706: checkcast java/util/Vector
    //   7709: astore #8
    //   7711: aload_0
    //   7712: aload #8
    //   7714: ldc_w 'agents'
    //   7717: ldc_w 'Success'
    //   7720: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   7723: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   7726: ireturn
    //   7727: aload #5
    //   7729: ldc_w 'sendSyncCommand'
    //   7732: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   7735: ifne -> 7743
    //   7738: goto_w -> 7884
    //   7743: ldc 'enterprise_level'
    //   7745: invokestatic siIG : (Ljava/lang/String;)I
    //   7748: ifgt -> 7756
    //   7751: goto_w -> 7884
    //   7756: aload #7
    //   7758: ifnonnull -> 7766
    //   7761: goto_w -> 7781
    //   7766: aload_0
    //   7767: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7770: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   7773: ldc_w 'last_activity'
    //   7776: aload #7
    //   7778: invokevirtual put : (Ljava/lang/String;Ljava/lang/Object;)V
    //   7781: aload_1
    //   7782: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   7785: pop
    //   7786: new java/util/Properties
    //   7789: dup
    //   7790: invokespecial <init> : ()V
    //   7793: astore #8
    //   7795: aload_1
    //   7796: ldc 'user_name'
    //   7798: aload_0
    //   7799: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7802: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   7805: ldc 'user_name'
    //   7807: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   7810: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7813: pop
    //   7814: aload_1
    //   7815: ldc 'user_ip'
    //   7817: aload_0
    //   7818: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7821: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   7824: ldc 'user_ip'
    //   7826: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   7829: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7832: pop
    //   7833: aload_1
    //   7834: ldc 'clientid'
    //   7836: aload_0
    //   7837: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   7840: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   7843: ldc 'clientid'
    //   7845: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   7848: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7851: pop
    //   7852: aload_1
    //   7853: ldc_w 'site'
    //   7856: aload #4
    //   7858: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   7861: pop
    //   7862: aload_1
    //   7863: invokestatic sendSyncCommand : (Ljava/util/Properties;)Ljava/lang/Object;
    //   7866: astore #8
    //   7868: aload_0
    //   7869: aload #8
    //   7871: ldc_w 'response'
    //   7874: ldc_w 'Success'
    //   7877: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   7880: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   7883: ireturn
    //   7884: aload #5
    //   7886: ldc_w 'getQuota'
    //   7889: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   7892: ifne -> 7900
    //   7895: goto_w -> 8476
    //   7900: aload_1
    //   7901: ldc_w 'path'
    //   7904: ldc ''
    //   7906: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   7909: bipush #43
    //   7911: bipush #32
    //   7913: invokevirtual replace : (CC)Ljava/lang/String;
    //   7916: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   7919: astore #8
    //   7921: aload #8
    //   7923: ldc_w '///'
    //   7926: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   7929: ifne -> 7937
    //   7932: goto_w -> 7973
    //   7937: aload #8
    //   7939: ldc_w '////'
    //   7942: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   7945: ifeq -> 7953
    //   7948: goto_w -> 7973
    //   7953: new java/lang/StringBuffer
    //   7956: dup
    //   7957: ldc_w '/'
    //   7960: invokespecial <init> : (Ljava/lang/String;)V
    //   7963: aload #8
    //   7965: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   7968: invokevirtual toString : ()Ljava/lang/String;
    //   7971: astore #8
    //   7973: aload #8
    //   7975: ldc_w '/'
    //   7978: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   7981: ifeq -> 7989
    //   7984: goto_w -> 8009
    //   7989: new java/lang/StringBuffer
    //   7992: dup
    //   7993: ldc_w '/'
    //   7996: invokespecial <init> : (Ljava/lang/String;)V
    //   7999: aload #8
    //   8001: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   8004: invokevirtual toString : ()Ljava/lang/String;
    //   8007: astore #8
    //   8009: aload #8
    //   8011: ldc_w '/'
    //   8014: invokevirtual endsWith : (Ljava/lang/String;)Z
    //   8017: ifeq -> 8025
    //   8020: goto_w -> 8048
    //   8025: new java/lang/StringBuffer
    //   8028: dup
    //   8029: aload #8
    //   8031: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   8034: invokespecial <init> : (Ljava/lang/String;)V
    //   8037: ldc_w '/'
    //   8040: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   8043: invokevirtual toString : ()Ljava/lang/String;
    //   8046: astore #8
    //   8048: aload #8
    //   8050: invokestatic dots : (Ljava/lang/String;)Ljava/lang/String;
    //   8053: astore #9
    //   8055: aload #9
    //   8057: aload_0
    //   8058: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8061: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8064: ldc_w 'root_dir'
    //   8067: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   8070: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   8073: ifeq -> 8081
    //   8076: goto_w -> 8118
    //   8081: new java/lang/StringBuffer
    //   8084: dup
    //   8085: aload_0
    //   8086: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8089: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8092: ldc_w 'root_dir'
    //   8095: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   8098: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   8101: invokespecial <init> : (Ljava/lang/String;)V
    //   8104: aload #9
    //   8106: iconst_1
    //   8107: invokevirtual substring : (I)Ljava/lang/String;
    //   8110: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   8113: invokevirtual toString : ()Ljava/lang/String;
    //   8116: astore #9
    //   8118: ldc_w '-12345'
    //   8121: astore #10
    //   8123: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   8126: ifne -> 8134
    //   8129: goto_w -> 8366
    //   8134: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   8137: ldc_w 'crushftp.dmz.queue'
    //   8140: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   8143: checkcast java/util/Vector
    //   8146: astore #11
    //   8148: new java/util/Properties
    //   8151: dup
    //   8152: invokespecial <init> : ()V
    //   8155: astore #12
    //   8157: aload #12
    //   8159: ldc_w 'type'
    //   8162: ldc_w 'GET:QUOTA'
    //   8165: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8168: pop
    //   8169: aload #12
    //   8171: ldc_w 'id'
    //   8174: invokestatic makeBoundary : ()Ljava/lang/String;
    //   8177: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8180: pop
    //   8181: aload #12
    //   8183: ldc 'username'
    //   8185: aload_0
    //   8186: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8189: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8192: ldc 'user_name'
    //   8194: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   8197: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8200: pop
    //   8201: aload #12
    //   8203: ldc 'password'
    //   8205: aload_0
    //   8206: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8209: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8212: ldc 'current_password'
    //   8214: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   8217: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8220: pop
    //   8221: aload #12
    //   8223: ldc_w 'request'
    //   8226: aload_1
    //   8227: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8230: pop
    //   8231: aload #9
    //   8233: astore #13
    //   8235: aload #13
    //   8237: aload_0
    //   8238: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8241: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8244: ldc_w 'root_dir'
    //   8247: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   8250: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   8253: ifne -> 8261
    //   8256: goto_w -> 8286
    //   8261: aload #13
    //   8263: aload_0
    //   8264: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8267: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8270: ldc_w 'root_dir'
    //   8273: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   8276: invokevirtual length : ()I
    //   8279: iconst_1
    //   8280: isub
    //   8281: invokevirtual substring : (I)Ljava/lang/String;
    //   8284: astore #13
    //   8286: aload #12
    //   8288: ldc_w 'the_dir'
    //   8291: aload #13
    //   8293: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8296: pop
    //   8297: aload #12
    //   8299: ldc 'clientid'
    //   8301: aload_0
    //   8302: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8305: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8308: ldc 'clientid'
    //   8310: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   8313: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8316: pop
    //   8317: aload #12
    //   8319: ldc_w 'need_response'
    //   8322: ldc 'true'
    //   8324: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8327: pop
    //   8328: aload #11
    //   8330: aload #12
    //   8332: invokevirtual addElement : (Ljava/lang/Object;)V
    //   8335: aload #12
    //   8337: sipush #300
    //   8340: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   8343: astore #12
    //   8345: aload #12
    //   8347: ldc_w 'object_response'
    //   8350: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   8353: invokevirtual toString : ()Ljava/lang/String;
    //   8356: invokevirtual trim : ()Ljava/lang/String;
    //   8359: astore #10
    //   8361: goto_w -> 8456
    //   8366: new java/lang/StringBuffer
    //   8369: dup
    //   8370: aload_0
    //   8371: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8374: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8377: aload #9
    //   8379: invokevirtual get_quota : (Ljava/lang/String;)J
    //   8382: invokestatic valueOf : (J)Ljava/lang/String;
    //   8385: invokespecial <init> : (Ljava/lang/String;)V
    //   8388: ldc_w ':'
    //   8391: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   8394: aload_0
    //   8395: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8398: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8401: pop
    //   8402: aload #9
    //   8404: aload_0
    //   8405: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8408: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8411: getfield uVFS : Lcrushftp/server/VFS;
    //   8414: aload_0
    //   8415: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8418: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8421: ldc_w 'parent_quota_dir'
    //   8424: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   8427: aload_0
    //   8428: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8431: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8434: getfield quotaDelta : Ljava/util/Properties;
    //   8437: aload_0
    //   8438: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8441: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8444: iconst_0
    //   8445: invokestatic get_quota : (Ljava/lang/String;Lcrushftp/server/VFS;Ljava/lang/String;Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;Z)J
    //   8448: invokevirtual append : (J)Ljava/lang/StringBuffer;
    //   8451: invokevirtual toString : ()Ljava/lang/String;
    //   8454: astore #10
    //   8456: aload_0
    //   8457: new java/lang/StringBuffer
    //   8460: dup
    //   8461: aload #10
    //   8463: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   8466: invokespecial <init> : (Ljava/lang/String;)V
    //   8469: invokevirtual toString : ()Ljava/lang/String;
    //   8472: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   8475: ireturn
    //   8476: aload #5
    //   8478: ldc_w 'getMd5s'
    //   8481: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   8484: ifne -> 8492
    //   8487: goto_w -> 9060
    //   8492: aconst_null
    //   8493: astore #8
    //   8495: new java/lang/String
    //   8498: dup
    //   8499: aload_1
    //   8500: ldc_w 'path'
    //   8503: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   8506: invokestatic decode : (Ljava/lang/String;)[B
    //   8509: invokespecial <init> : ([B)V
    //   8512: astore #8
    //   8514: goto_w -> 8541
    //   8519: astore #9
    //   8521: aload_1
    //   8522: ldc_w 'path'
    //   8525: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   8528: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   8531: invokestatic dots : (Ljava/lang/String;)Ljava/lang/String;
    //   8534: astore #8
    //   8536: goto_w -> 8541
    //   8541: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   8544: ifne -> 8552
    //   8547: goto_w -> 8811
    //   8552: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   8555: ldc_w 'crushftp.dmz.queue'
    //   8558: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   8561: checkcast java/util/Vector
    //   8564: astore #9
    //   8566: new java/util/Properties
    //   8569: dup
    //   8570: invokespecial <init> : ()V
    //   8573: astore #10
    //   8575: aload #10
    //   8577: ldc_w 'type'
    //   8580: ldc_w 'PUT:GETMD5S'
    //   8583: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8586: pop
    //   8587: aload #10
    //   8589: ldc_w 'id'
    //   8592: invokestatic makeBoundary : ()Ljava/lang/String;
    //   8595: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8598: pop
    //   8599: aload #10
    //   8601: ldc 'username'
    //   8603: aload_0
    //   8604: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8607: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8610: ldc 'user_name'
    //   8612: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   8615: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8618: pop
    //   8619: aload_0
    //   8620: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8623: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8626: getfield uVFS : Lcrushftp/server/VFS;
    //   8629: aload_0
    //   8630: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8633: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8636: ldc_w 'root_dir'
    //   8639: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   8642: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   8645: astore #11
    //   8647: aload_0
    //   8648: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8651: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8654: getfield uVFS : Lcrushftp/server/VFS;
    //   8657: aload #11
    //   8659: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   8662: astore #12
    //   8664: aload #10
    //   8666: ldc_w 'crushAuth'
    //   8669: aload #12
    //   8671: ldc_w 'crushAuth'
    //   8674: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   8677: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8680: pop
    //   8681: aload_0
    //   8682: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8685: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8688: getfield uVFS : Lcrushftp/server/VFS;
    //   8691: aload #12
    //   8693: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   8696: pop
    //   8697: aload #10
    //   8699: ldc 'user_ip'
    //   8701: aload_0
    //   8702: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8705: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8708: ldc 'user_ip'
    //   8710: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   8713: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8716: pop
    //   8717: aload #10
    //   8719: ldc_w 'request'
    //   8722: aload_1
    //   8723: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8726: pop
    //   8727: aload #10
    //   8729: ldc 'clientid'
    //   8731: aload_0
    //   8732: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8735: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8738: ldc 'clientid'
    //   8740: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   8743: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8746: pop
    //   8747: aload #10
    //   8749: ldc_w 'need_response'
    //   8752: ldc 'true'
    //   8754: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8757: pop
    //   8758: aload #9
    //   8760: aload #10
    //   8762: invokevirtual addElement : (Ljava/lang/Object;)V
    //   8765: aload #10
    //   8767: sipush #600
    //   8770: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   8773: astore #10
    //   8775: aload_0
    //   8776: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8779: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8782: getfield uVFS : Lcrushftp/server/VFS;
    //   8785: aload #12
    //   8787: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   8790: pop
    //   8791: aload #10
    //   8793: ldc_w 'object_response'
    //   8796: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   8799: invokevirtual toString : ()Ljava/lang/String;
    //   8802: astore #13
    //   8804: aload_0
    //   8805: aload #13
    //   8807: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   8810: ireturn
    //   8811: aload_0
    //   8812: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8815: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8818: getfield uVFS : Lcrushftp/server/VFS;
    //   8821: new java/lang/StringBuffer
    //   8824: dup
    //   8825: aload_0
    //   8826: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8829: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   8832: ldc_w 'root_dir'
    //   8835: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   8838: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   8841: invokespecial <init> : (Ljava/lang/String;)V
    //   8844: aload #8
    //   8846: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   8849: invokevirtual toString : ()Ljava/lang/String;
    //   8852: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   8855: astore #9
    //   8857: new java/util/Vector
    //   8860: dup
    //   8861: invokespecial <init> : ()V
    //   8864: astore #10
    //   8866: aload_1
    //   8867: astore #11
    //   8869: new crushftp/server/ServerSessionAJAX$1$multiThreadMd5
    //   8872: dup
    //   8873: aload_0
    //   8874: aload #9
    //   8876: aload #10
    //   8878: aload #11
    //   8880: invokespecial <init> : (Lcrushftp/server/ServerSessionAJAX;Ljava/util/Properties;Ljava/util/Vector;Ljava/util/Properties;)V
    //   8883: astore #12
    //   8885: aload #9
    //   8887: ifnonnull -> 8895
    //   8890: goto_w -> 8901
    //   8895: aload #12
    //   8897: invokestatic startWorker : (Ljava/lang/Runnable;)Z
    //   8900: pop
    //   8901: aload_0
    //   8902: ldc_w 'HTTP/1.1 200 OK'
    //   8905: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   8908: aload_0
    //   8909: ldc_w 'Cache-Control: no-store'
    //   8912: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   8915: aload_0
    //   8916: ldc_w 'Content-Type: text/plain'
    //   8919: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   8922: aload_0
    //   8923: ldc_w 'Transfer-Encoding: chunked'
    //   8926: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   8929: aload_0
    //   8930: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   8933: invokevirtual write_standard_headers : ()V
    //   8936: aload_0
    //   8937: ldc ''
    //   8939: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   8942: goto_w -> 9009
    //   8947: aload #10
    //   8949: invokevirtual size : ()I
    //   8952: ifgt -> 8960
    //   8955: goto_w -> 9003
    //   8960: aload #10
    //   8962: iconst_0
    //   8963: invokevirtual remove : (I)Ljava/lang/Object;
    //   8966: invokevirtual toString : ()Ljava/lang/String;
    //   8969: astore #13
    //   8971: aload_0
    //   8972: aload #13
    //   8974: invokevirtual length : ()I
    //   8977: iconst_2
    //   8978: iadd
    //   8979: i2l
    //   8980: invokestatic toHexString : (J)Ljava/lang/String;
    //   8983: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   8986: aload_0
    //   8987: aload #13
    //   8989: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   8992: aload_0
    //   8993: ldc ''
    //   8995: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   8998: goto_w -> 9009
    //   9003: ldc2_w 100
    //   9006: invokestatic sleep : (J)V
    //   9009: aload #9
    //   9011: ifnonnull -> 9019
    //   9014: goto_w -> 9032
    //   9019: aload #12
    //   9021: invokevirtual isActive : ()Z
    //   9024: ifeq -> 9032
    //   9027: goto_w -> 8947
    //   9032: aload #10
    //   9034: invokevirtual size : ()I
    //   9037: ifle -> 9045
    //   9040: goto_w -> 8947
    //   9045: aload_0
    //   9046: ldc_w '0'
    //   9049: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   9052: aload_0
    //   9053: ldc ''
    //   9055: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   9058: iconst_1
    //   9059: ireturn
    //   9060: aload #5
    //   9062: ldc_w 'messageForm'
    //   9065: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   9068: ifne -> 9076
    //   9071: goto_w -> 9357
    //   9076: aload_1
    //   9077: ldc_w 'registration_username'
    //   9080: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   9083: ifeq -> 9091
    //   9086: goto_w -> 9357
    //   9091: aload_1
    //   9092: ldc_w 'meta_registration_username'
    //   9095: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   9098: ifeq -> 9106
    //   9101: goto_w -> 9357
    //   9106: ldc ''
    //   9108: astore #8
    //   9110: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   9113: ifne -> 9121
    //   9116: goto_w -> 9337
    //   9121: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   9124: ldc_w 'crushftp.dmz.queue'
    //   9127: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   9130: checkcast java/util/Vector
    //   9133: astore #9
    //   9135: new java/util/Properties
    //   9138: dup
    //   9139: invokespecial <init> : ()V
    //   9142: astore #10
    //   9144: aload #10
    //   9146: ldc_w 'type'
    //   9149: ldc_w 'PUT:MESSAGEFORM'
    //   9152: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9155: pop
    //   9156: aload #10
    //   9158: ldc_w 'id'
    //   9161: invokestatic makeBoundary : ()Ljava/lang/String;
    //   9164: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9167: pop
    //   9168: aload #10
    //   9170: ldc 'username'
    //   9172: aload_0
    //   9173: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9176: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9179: ldc 'user_name'
    //   9181: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   9184: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9187: pop
    //   9188: aload_0
    //   9189: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9192: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9195: getfield uVFS : Lcrushftp/server/VFS;
    //   9198: aload_0
    //   9199: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9202: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9205: ldc_w 'root_dir'
    //   9208: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   9211: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   9214: astore #11
    //   9216: aload_0
    //   9217: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9220: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9223: getfield uVFS : Lcrushftp/server/VFS;
    //   9226: aload #11
    //   9228: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   9231: astore #12
    //   9233: aload #10
    //   9235: ldc_w 'crushAuth'
    //   9238: aload #12
    //   9240: ldc_w 'crushAuth'
    //   9243: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   9246: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9249: pop
    //   9250: aload_0
    //   9251: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9254: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9257: getfield uVFS : Lcrushftp/server/VFS;
    //   9260: aload #12
    //   9262: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   9265: pop
    //   9266: aload #10
    //   9268: ldc_w 'request'
    //   9271: aload_1
    //   9272: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9275: pop
    //   9276: aload #10
    //   9278: ldc_w 'need_response'
    //   9281: ldc 'true'
    //   9283: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9286: pop
    //   9287: aload #9
    //   9289: aload #10
    //   9291: invokevirtual addElement : (Ljava/lang/Object;)V
    //   9294: aload #10
    //   9296: bipush #30
    //   9298: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   9301: astore #10
    //   9303: aload_0
    //   9304: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9307: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9310: getfield uVFS : Lcrushftp/server/VFS;
    //   9313: aload #12
    //   9315: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   9318: pop
    //   9319: aload #10
    //   9321: ldc_w 'object_response'
    //   9324: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   9327: invokevirtual toString : ()Ljava/lang/String;
    //   9330: astore #8
    //   9332: goto_w -> 9350
    //   9337: aload_1
    //   9338: aload_0
    //   9339: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9342: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9345: invokestatic handle_message_form : (Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;)Ljava/lang/String;
    //   9348: astore #8
    //   9350: aload_0
    //   9351: aload #8
    //   9353: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   9356: ireturn
    //   9357: aload #5
    //   9359: ldc_w 'selfRegistration'
    //   9362: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   9365: ifeq -> 9373
    //   9368: goto_w -> 9403
    //   9373: aload_1
    //   9374: ldc_w 'registration_username'
    //   9377: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   9380: ifeq -> 9388
    //   9383: goto_w -> 9403
    //   9388: aload_1
    //   9389: ldc_w 'meta_registration_username'
    //   9392: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   9395: ifne -> 9403
    //   9398: goto_w -> 9727
    //   9403: ldc ''
    //   9405: astore #8
    //   9407: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   9410: ifne -> 9418
    //   9413: goto_w -> 9684
    //   9418: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   9421: ldc_w 'crushftp.dmz.queue'
    //   9424: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   9427: checkcast java/util/Vector
    //   9430: astore #9
    //   9432: new java/util/Properties
    //   9435: dup
    //   9436: invokespecial <init> : ()V
    //   9439: astore #10
    //   9441: aload #10
    //   9443: ldc_w 'type'
    //   9446: ldc_w 'PUT:SELFREGISTRATION'
    //   9449: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9452: pop
    //   9453: aload #10
    //   9455: ldc_w 'id'
    //   9458: invokestatic makeBoundary : ()Ljava/lang/String;
    //   9461: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9464: pop
    //   9465: aload #10
    //   9467: ldc 'username'
    //   9469: aload_0
    //   9470: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9473: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9476: ldc 'user_name'
    //   9478: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   9481: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9484: pop
    //   9485: aload_0
    //   9486: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9489: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9492: getfield uVFS : Lcrushftp/server/VFS;
    //   9495: aload_0
    //   9496: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9499: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9502: ldc_w 'root_dir'
    //   9505: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   9508: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   9511: astore #11
    //   9513: aload_0
    //   9514: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9517: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9520: getfield uVFS : Lcrushftp/server/VFS;
    //   9523: aload #11
    //   9525: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   9528: astore #12
    //   9530: aload #10
    //   9532: ldc_w 'crushAuth'
    //   9535: aload #12
    //   9537: ldc_w 'crushAuth'
    //   9540: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   9543: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9546: pop
    //   9547: aload_0
    //   9548: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9551: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9554: getfield uVFS : Lcrushftp/server/VFS;
    //   9557: aload #12
    //   9559: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   9562: pop
    //   9563: aload #10
    //   9565: ldc 'user_ip'
    //   9567: aload_0
    //   9568: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9571: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9574: ldc 'user_ip'
    //   9576: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   9579: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9582: pop
    //   9583: aload #10
    //   9585: ldc_w 'request'
    //   9588: aload_1
    //   9589: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9592: pop
    //   9593: aload #10
    //   9595: ldc_w 'req_id'
    //   9598: aload_3
    //   9599: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9602: pop
    //   9603: aload #10
    //   9605: ldc 'clientid'
    //   9607: aload_0
    //   9608: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9611: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9614: ldc 'clientid'
    //   9616: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   9619: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9622: pop
    //   9623: aload #10
    //   9625: ldc_w 'need_response'
    //   9628: ldc 'true'
    //   9630: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9633: pop
    //   9634: aload #9
    //   9636: aload #10
    //   9638: invokevirtual addElement : (Ljava/lang/Object;)V
    //   9641: aload #10
    //   9643: bipush #30
    //   9645: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   9648: astore #10
    //   9650: aload_0
    //   9651: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9654: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9657: getfield uVFS : Lcrushftp/server/VFS;
    //   9660: aload #12
    //   9662: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   9665: pop
    //   9666: aload #10
    //   9668: ldc_w 'object_response'
    //   9671: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   9674: invokevirtual toString : ()Ljava/lang/String;
    //   9677: astore #8
    //   9679: goto_w -> 9698
    //   9684: aload_1
    //   9685: aload_0
    //   9686: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9689: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9692: aload_3
    //   9693: invokestatic selfRegistration : (Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;Ljava/lang/String;)Ljava/lang/String;
    //   9696: astore #8
    //   9698: aload_0
    //   9699: new java/lang/StringBuffer
    //   9702: dup
    //   9703: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n<commandResult><response>'
    //   9706: invokespecial <init> : (Ljava/lang/String;)V
    //   9709: aload #8
    //   9711: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   9714: ldc_w '</response></commandResult>'
    //   9717: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   9720: invokevirtual toString : ()Ljava/lang/String;
    //   9723: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   9726: ireturn
    //   9727: aload #5
    //   9729: ldc_w 'setMetaInfo'
    //   9732: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   9735: ifne -> 9743
    //   9738: goto_w -> 10095
    //   9743: aload_1
    //   9744: invokevirtual keys : ()Ljava/util/Enumeration;
    //   9747: astore #8
    //   9749: new java/util/Properties
    //   9752: dup
    //   9753: invokespecial <init> : ()V
    //   9756: astore #9
    //   9758: goto_w -> 9953
    //   9763: aload #8
    //   9765: invokeinterface nextElement : ()Ljava/lang/Object;
    //   9770: invokevirtual toString : ()Ljava/lang/String;
    //   9773: astore #10
    //   9775: aload #10
    //   9777: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   9780: ldc_w 'META_'
    //   9783: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   9786: ifne -> 9794
    //   9789: goto_w -> 9953
    //   9794: aload_1
    //   9795: aload #10
    //   9797: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   9800: astore #11
    //   9802: aload #10
    //   9804: ldc_w 'META_'
    //   9807: invokevirtual length : ()I
    //   9810: invokevirtual substring : (I)Ljava/lang/String;
    //   9813: astore #10
    //   9815: aload #9
    //   9817: aload #10
    //   9819: aload #11
    //   9821: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9824: pop
    //   9825: aload #10
    //   9827: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   9830: ldc_w 'GLOBAL_'
    //   9833: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   9836: ifne -> 9844
    //   9839: goto_w -> 9916
    //   9844: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   9847: getfield server_info : Ljava/util/Properties;
    //   9850: ldc_w 'global_variables'
    //   9853: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   9856: ifnull -> 9864
    //   9859: goto_w -> 9884
    //   9864: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   9867: getfield server_info : Ljava/util/Properties;
    //   9870: ldc_w 'global_variables'
    //   9873: new java/util/Properties
    //   9876: dup
    //   9877: invokespecial <init> : ()V
    //   9880: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9883: pop
    //   9884: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   9887: getfield server_info : Ljava/util/Properties;
    //   9890: ldc_w 'global_variables'
    //   9893: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   9896: checkcast java/util/Properties
    //   9899: astore #12
    //   9901: aload #12
    //   9903: aload #10
    //   9905: aload #11
    //   9907: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9910: pop
    //   9911: goto_w -> 9953
    //   9916: aload #10
    //   9918: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   9921: ldc_w 'USER_INFO_'
    //   9924: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   9927: ifne -> 9935
    //   9930: goto_w -> 9953
    //   9935: aload_0
    //   9936: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9939: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9942: getfield user_info : Ljava/util/Properties;
    //   9945: aload #10
    //   9947: aload #11
    //   9949: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   9952: pop
    //   9953: aload #8
    //   9955: invokeinterface hasMoreElements : ()Z
    //   9960: ifeq -> 9968
    //   9963: goto_w -> 9763
    //   9968: aload_0
    //   9969: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9972: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9975: ldc_w 'last_metaInfo'
    //   9978: aload #9
    //   9980: invokevirtual put : (Ljava/lang/String;Ljava/lang/Object;)V
    //   9983: aload_0
    //   9984: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   9987: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   9990: new java/lang/StringBuffer
    //   9993: dup
    //   9994: ldc_w '['
    //   9997: invokespecial <init> : (Ljava/lang/String;)V
    //   10000: aload_0
    //   10001: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   10004: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   10007: ldc 'user_number'
    //   10009: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   10012: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   10015: ldc_w ':'
    //   10018: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   10021: aload_0
    //   10022: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   10025: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   10028: ldc 'user_name'
    //   10030: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   10033: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   10036: ldc_w ':'
    //   10039: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   10042: aload_0
    //   10043: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   10046: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   10049: ldc 'user_ip'
    //   10051: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   10054: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   10057: ldc_w '] DATA: *metaInfo confirmed:'
    //   10060: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   10063: aload #9
    //   10065: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   10068: ldc_w '*'
    //   10071: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   10074: invokevirtual toString : ()Ljava/lang/String;
    //   10077: ldc_w 'HTTP'
    //   10080: invokevirtual add_log : (Ljava/lang/String;Ljava/lang/String;)V
    //   10083: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n<commandResult><response>Success</response></commandResult>'
    //   10086: astore #10
    //   10088: aload_0
    //   10089: aload #10
    //   10091: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   10094: ireturn
    //   10095: aload #5
    //   10097: ldc_w 'setServerItem'
    //   10100: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   10103: ifne -> 10111
    //   10106: goto_w -> 10164
    //   10111: aload #5
    //   10113: aload #4
    //   10115: aload_0
    //   10116: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   10119: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   10122: ldc 'user_ip'
    //   10124: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   10127: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   10130: ifne -> 10138
    //   10133: goto_w -> 10156
    //   10138: aload_0
    //   10139: aconst_null
    //   10140: ldc_w 'response'
    //   10143: aload_1
    //   10144: aload #4
    //   10146: invokestatic setServerItem : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   10149: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   10152: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   10155: ireturn
    //   10156: aload_0
    //   10157: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   10160: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   10163: ireturn
    //   10164: aload #5
    //   10166: ldc_w 'setReportSchedules'
    //   10169: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   10172: ifne -> 10180
    //   10175: goto_w -> 10233
    //   10180: aload #5
    //   10182: aload #4
    //   10184: aload_0
    //   10185: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   10188: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   10191: ldc 'user_ip'
    //   10193: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   10196: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   10199: ifne -> 10207
    //   10202: goto_w -> 10225
    //   10207: aload_0
    //   10208: aconst_null
    //   10209: ldc_w 'response'
    //   10212: aload_1
    //   10213: aload #4
    //   10215: invokestatic setReportSchedules : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   10218: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   10221: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   10224: ireturn
    //   10225: aload_0
    //   10226: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   10229: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   10232: ireturn
    //   10233: aload #5
    //   10235: ldc_w 'deleteReportSchedules'
    //   10238: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   10241: ifne -> 10249
    //   10244: goto_w -> 10302
    //   10249: aload #5
    //   10251: aload #4
    //   10253: aload_0
    //   10254: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   10257: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   10260: ldc 'user_ip'
    //   10262: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   10265: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   10268: ifne -> 10276
    //   10271: goto_w -> 10294
    //   10276: aload_0
    //   10277: aconst_null
    //   10278: ldc_w 'response'
    //   10281: aload_1
    //   10282: aload #4
    //   10284: invokestatic deleteReportSchedules : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   10287: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   10290: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   10293: ireturn
    //   10294: aload_0
    //   10295: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   10298: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   10301: ireturn
    //   10302: aload #5
    //   10304: ldc_w 'getUser'
    //   10307: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   10310: ifne -> 10318
    //   10313: goto_w -> 10387
    //   10318: aload #5
    //   10320: aload #4
    //   10322: aload_0
    //   10323: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   10326: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   10329: ldc 'user_ip'
    //   10331: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   10334: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   10337: ifne -> 10345
    //   10340: goto_w -> 10379
    //   10345: aload_0
    //   10346: aload_1
    //   10347: aload #4
    //   10349: aload_0
    //   10350: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   10353: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   10356: invokestatic getUser : (Ljava/util/Properties;Ljava/lang/String;Lcrushftp/handlers/SessionCrush;)Ljava/lang/Object;
    //   10359: ldc_w 'user_items'
    //   10362: ldc_w 'OK'
    //   10365: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   10368: iconst_1
    //   10369: sipush #200
    //   10372: iconst_0
    //   10373: iconst_0
    //   10374: iconst_1
    //   10375: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   10378: ireturn
    //   10379: aload_0
    //   10380: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   10383: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   10386: ireturn
    //   10387: aload #5
    //   10389: ldc_w 'getUserVersions'
    //   10392: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   10395: ifne -> 10403
    //   10398: goto_w -> 10456
    //   10403: aload #5
    //   10405: aload #4
    //   10407: aload_0
    //   10408: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   10411: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   10414: ldc 'user_ip'
    //   10416: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   10419: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   10422: ifne -> 10430
    //   10425: goto_w -> 10448
    //   10430: aload_0
    //   10431: aload_1
    //   10432: invokestatic getUserVersions : (Ljava/util/Properties;)Ljava/lang/Object;
    //   10435: ldc_w 'user_versions'
    //   10438: ldc_w 'OK'
    //   10441: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   10444: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   10447: ireturn
    //   10448: aload_0
    //   10449: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   10452: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   10455: ireturn
    //   10456: aload #5
    //   10458: ldc_w 'getDeletedUsers'
    //   10461: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   10464: ifne -> 10472
    //   10467: goto_w -> 10525
    //   10472: aload #5
    //   10474: aload #4
    //   10476: aload_0
    //   10477: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   10480: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   10483: ldc 'user_ip'
    //   10485: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   10488: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   10491: ifne -> 10499
    //   10494: goto_w -> 10517
    //   10499: aload_0
    //   10500: aload_1
    //   10501: invokestatic getDeletedUsers : (Ljava/util/Properties;)Ljava/lang/Object;
    //   10504: ldc_w 'deleted_users'
    //   10507: ldc_w 'OK'
    //   10510: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   10513: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   10516: ireturn
    //   10517: aload_0
    //   10518: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   10521: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   10524: ireturn
    //   10525: aload #5
    //   10527: ldc_w 'setUserItem'
    //   10530: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   10533: ifne -> 10541
    //   10536: goto_w -> 10805
    //   10541: aload #5
    //   10543: aload #4
    //   10545: aload_0
    //   10546: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   10549: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   10552: ldc 'user_ip'
    //   10554: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   10557: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   10560: ifne -> 10568
    //   10563: goto_w -> 10805
    //   10568: aconst_null
    //   10569: ldc_w 'response'
    //   10572: aload_1
    //   10573: aload_0
    //   10574: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   10577: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   10580: aload #4
    //   10582: invokestatic setUserItem : (Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;Ljava/lang/String;)Ljava/lang/String;
    //   10585: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   10588: astore #8
    //   10590: aload #8
    //   10592: ldc_w '<password>'
    //   10595: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10598: ifge -> 10606
    //   10601: goto_w -> 10685
    //   10606: aload #8
    //   10608: ldc_w '</password>'
    //   10611: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10614: ifge -> 10622
    //   10617: goto_w -> 10685
    //   10622: new java/lang/StringBuffer
    //   10625: dup
    //   10626: aload #8
    //   10628: iconst_0
    //   10629: aload #8
    //   10631: ldc_w '<password>'
    //   10634: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10637: ldc_w '<password>'
    //   10640: invokevirtual length : ()I
    //   10643: iadd
    //   10644: invokevirtual substring : (II)Ljava/lang/String;
    //   10647: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   10650: invokespecial <init> : (Ljava/lang/String;)V
    //   10653: ldc_w '*******'
    //   10656: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   10659: aload #8
    //   10661: aload #8
    //   10663: ldc_w '</password>'
    //   10666: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10669: invokevirtual substring : (I)Ljava/lang/String;
    //   10672: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   10675: invokevirtual toString : ()Ljava/lang/String;
    //   10678: astore #8
    //   10680: goto_w -> 10798
    //   10685: aload #8
    //   10687: ldc 'current_password'
    //   10689: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10692: ifge -> 10700
    //   10695: goto_w -> 10742
    //   10700: new java/lang/StringBuffer
    //   10703: dup
    //   10704: aload #8
    //   10706: iconst_0
    //   10707: aload #8
    //   10709: ldc_w ':'
    //   10712: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10715: iconst_1
    //   10716: iadd
    //   10717: invokevirtual substring : (II)Ljava/lang/String;
    //   10720: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   10723: invokespecial <init> : (Ljava/lang/String;)V
    //   10726: ldc_w '*******'
    //   10729: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   10732: invokevirtual toString : ()Ljava/lang/String;
    //   10735: astore #8
    //   10737: goto_w -> 10798
    //   10742: aload #8
    //   10744: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   10747: ldc_w 'PASSWORD'
    //   10750: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10753: ifge -> 10761
    //   10756: goto_w -> 10798
    //   10761: new java/lang/StringBuffer
    //   10764: dup
    //   10765: aload #8
    //   10767: iconst_0
    //   10768: aload #8
    //   10770: ldc_w ':'
    //   10773: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10776: iconst_1
    //   10777: iadd
    //   10778: invokevirtual substring : (II)Ljava/lang/String;
    //   10781: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   10784: invokespecial <init> : (Ljava/lang/String;)V
    //   10787: ldc_w '*******'
    //   10790: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   10793: invokevirtual toString : ()Ljava/lang/String;
    //   10796: astore #8
    //   10798: aload_0
    //   10799: aload #8
    //   10801: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   10804: ireturn
    //   10805: aload #5
    //   10807: ldc_w 'setUserItem'
    //   10810: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   10813: ifne -> 10821
    //   10816: goto_w -> 13912
    //   10821: ldc_w 'OK'
    //   10824: astore #8
    //   10826: aload #4
    //   10828: ldc_w '(USER_ADMIN)'
    //   10831: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10834: iflt -> 10842
    //   10837: goto_w -> 10853
    //   10842: new java/lang/Exception
    //   10845: dup
    //   10846: ldc_w 'Access Denied.'
    //   10849: invokespecial <init> : (Ljava/lang/String;)V
    //   10852: athrow
    //   10853: aconst_null
    //   10854: astore #9
    //   10856: aload_0
    //   10857: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   10860: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   10863: ldc_w 'user_admin_info'
    //   10866: invokevirtual containsKey : (Ljava/lang/String;)Z
    //   10869: ifeq -> 10877
    //   10872: goto_w -> 10891
    //   10877: aload_1
    //   10878: aload #4
    //   10880: aload_0
    //   10881: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   10884: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   10887: invokestatic getUserList : (Ljava/util/Properties;Ljava/lang/String;Lcrushftp/handlers/SessionCrush;)Ljava/util/Properties;
    //   10890: pop
    //   10891: aload_0
    //   10892: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   10895: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   10898: ldc_w 'user_admin_info'
    //   10901: invokevirtual get : (Ljava/lang/String;)Ljava/lang/Object;
    //   10904: checkcast java/util/Properties
    //   10907: astore #9
    //   10909: aload #9
    //   10911: ldc_w 'list'
    //   10914: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   10917: checkcast java/util/Vector
    //   10920: astore #10
    //   10922: iconst_0
    //   10923: istore #11
    //   10925: aload_1
    //   10926: ldc_w 'xmlItem'
    //   10929: ldc ''
    //   10931: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   10934: ldc_w 'groups'
    //   10937: invokevirtual equals : (Ljava/lang/Object;)Z
    //   10940: ifne -> 10948
    //   10943: goto_w -> 11259
    //   10948: aload_0
    //   10949: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   10952: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   10955: ldc_w 'admin_group_name'
    //   10958: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   10961: astore #12
    //   10963: aload #12
    //   10965: ldc ''
    //   10967: invokevirtual equals : (Ljava/lang/Object;)Z
    //   10970: ifeq -> 10978
    //   10973: goto_w -> 10994
    //   10978: aload #12
    //   10980: ldc_w 'admin_group_name'
    //   10983: invokevirtual equals : (Ljava/lang/Object;)Z
    //   10986: ifne -> 10994
    //   10989: goto_w -> 11008
    //   10994: aload_0
    //   10995: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   10998: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   11001: ldc 'user_name'
    //   11003: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   11006: astore #12
    //   11008: new java/io/ByteArrayInputStream
    //   11011: dup
    //   11012: aload_1
    //   11013: ldc_w 'groups'
    //   11016: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   11019: bipush #43
    //   11021: bipush #32
    //   11023: invokevirtual replace : (CC)Ljava/lang/String;
    //   11026: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   11029: ldc_w 'UTF8'
    //   11032: invokevirtual getBytes : (Ljava/lang/String;)[B
    //   11035: invokespecial <init> : ([B)V
    //   11038: invokestatic readXMLObjectError : (Ljava/io/InputStream;)Ljava/lang/Object;
    //   11041: checkcast java/util/Properties
    //   11044: astore #13
    //   11046: aload #13
    //   11048: ifnull -> 11056
    //   11051: goto_w -> 11065
    //   11056: new java/util/Properties
    //   11059: dup
    //   11060: invokespecial <init> : ()V
    //   11063: astore #13
    //   11065: aload_1
    //   11066: ldc_w 'serverGroup'
    //   11069: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   11072: invokestatic getGroups : (Ljava/lang/String;)Ljava/util/Properties;
    //   11075: astore #14
    //   11077: aload #14
    //   11079: invokevirtual keys : ()Ljava/util/Enumeration;
    //   11082: astore #15
    //   11084: goto_w -> 11149
    //   11089: aload #15
    //   11091: invokeinterface nextElement : ()Ljava/lang/Object;
    //   11096: invokevirtual toString : ()Ljava/lang/String;
    //   11099: astore #16
    //   11101: aload #16
    //   11103: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   11106: new java/lang/StringBuffer
    //   11109: dup
    //   11110: aload #12
    //   11112: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   11115: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   11118: invokespecial <init> : (Ljava/lang/String;)V
    //   11121: ldc_w '_'
    //   11124: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   11127: invokevirtual toString : ()Ljava/lang/String;
    //   11130: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   11133: ifne -> 11141
    //   11136: goto_w -> 11149
    //   11141: aload #14
    //   11143: aload #16
    //   11145: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   11148: pop
    //   11149: aload #15
    //   11151: invokeinterface hasMoreElements : ()Z
    //   11156: ifeq -> 11164
    //   11159: goto_w -> 11089
    //   11164: aload #13
    //   11166: invokevirtual keys : ()Ljava/util/Enumeration;
    //   11169: astore #15
    //   11171: goto_w -> 11227
    //   11176: aload #15
    //   11178: invokeinterface nextElement : ()Ljava/lang/Object;
    //   11183: invokevirtual toString : ()Ljava/lang/String;
    //   11186: astore #16
    //   11188: aload #14
    //   11190: new java/lang/StringBuffer
    //   11193: dup
    //   11194: aload #12
    //   11196: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   11199: invokespecial <init> : (Ljava/lang/String;)V
    //   11202: ldc_w '_'
    //   11205: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   11208: aload #16
    //   11210: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   11213: invokevirtual toString : ()Ljava/lang/String;
    //   11216: aload #13
    //   11218: aload #16
    //   11220: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   11223: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   11226: pop
    //   11227: aload #15
    //   11229: invokeinterface hasMoreElements : ()Z
    //   11234: ifeq -> 11242
    //   11237: goto_w -> 11176
    //   11242: aload_1
    //   11243: ldc_w 'serverGroup'
    //   11246: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   11249: aload #14
    //   11251: invokestatic writeGroups : (Ljava/lang/String;Ljava/util/Properties;)V
    //   11254: goto_w -> 13802
    //   11259: aload_1
    //   11260: ldc_w 'xmlItem'
    //   11263: ldc ''
    //   11265: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   11268: ldc_w 'inheritance'
    //   11271: invokevirtual equals : (Ljava/lang/Object;)Z
    //   11274: ifne -> 11282
    //   11277: goto_w -> 11691
    //   11282: aload_0
    //   11283: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   11286: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   11289: ldc_w 'admin_group_name'
    //   11292: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   11295: astore #12
    //   11297: aload #12
    //   11299: ldc ''
    //   11301: invokevirtual equals : (Ljava/lang/Object;)Z
    //   11304: ifeq -> 11312
    //   11307: goto_w -> 11328
    //   11312: aload #12
    //   11314: ldc_w 'admin_group_name'
    //   11317: invokevirtual equals : (Ljava/lang/Object;)Z
    //   11320: ifne -> 11328
    //   11323: goto_w -> 11342
    //   11328: aload_0
    //   11329: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   11332: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   11335: ldc 'user_name'
    //   11337: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   11340: astore #12
    //   11342: new java/io/ByteArrayInputStream
    //   11345: dup
    //   11346: aload_1
    //   11347: ldc_w 'inheritance'
    //   11350: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   11353: bipush #43
    //   11355: bipush #32
    //   11357: invokevirtual replace : (CC)Ljava/lang/String;
    //   11360: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   11363: ldc_w 'UTF8'
    //   11366: invokevirtual getBytes : (Ljava/lang/String;)[B
    //   11369: invokespecial <init> : ([B)V
    //   11372: invokestatic readXMLObjectError : (Ljava/io/InputStream;)Ljava/lang/Object;
    //   11375: checkcast java/util/Properties
    //   11378: astore #13
    //   11380: aload #13
    //   11382: ifnull -> 11390
    //   11385: goto_w -> 11399
    //   11390: new java/util/Properties
    //   11393: dup
    //   11394: invokespecial <init> : ()V
    //   11397: astore #13
    //   11399: aload #13
    //   11401: invokevirtual keys : ()Ljava/util/Enumeration;
    //   11404: astore #14
    //   11406: goto_w -> 11563
    //   11411: aload #14
    //   11413: invokeinterface nextElement : ()Ljava/lang/Object;
    //   11418: invokevirtual toString : ()Ljava/lang/String;
    //   11421: astore #15
    //   11423: aload #10
    //   11425: aload #15
    //   11427: invokevirtual indexOf : (Ljava/lang/Object;)I
    //   11430: iflt -> 11438
    //   11433: goto_w -> 11446
    //   11438: aload #13
    //   11440: aload #15
    //   11442: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   11445: pop
    //   11446: aload #13
    //   11448: aload #15
    //   11450: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   11453: checkcast java/util/Vector
    //   11456: astore #16
    //   11458: aload #16
    //   11460: invokevirtual size : ()I
    //   11463: iconst_1
    //   11464: isub
    //   11465: istore #17
    //   11467: goto_w -> 11510
    //   11472: aload #16
    //   11474: iload #17
    //   11476: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   11479: invokevirtual toString : ()Ljava/lang/String;
    //   11482: astore #18
    //   11484: aload #10
    //   11486: aload #18
    //   11488: invokevirtual indexOf : (Ljava/lang/Object;)I
    //   11491: iflt -> 11499
    //   11494: goto_w -> 11507
    //   11499: aload #16
    //   11501: iload #17
    //   11503: invokevirtual remove : (I)Ljava/lang/Object;
    //   11506: pop
    //   11507: iinc #17, -1
    //   11510: iload #17
    //   11512: iflt -> 11520
    //   11515: goto_w -> 11472
    //   11520: aload #16
    //   11522: invokevirtual size : ()I
    //   11525: ifne -> 11533
    //   11528: goto_w -> 11555
    //   11533: aload #16
    //   11535: iconst_0
    //   11536: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   11539: invokevirtual toString : ()Ljava/lang/String;
    //   11542: aload #12
    //   11544: invokevirtual equals : (Ljava/lang/Object;)Z
    //   11547: ifeq -> 11555
    //   11550: goto_w -> 11563
    //   11555: aload #16
    //   11557: aload #12
    //   11559: iconst_0
    //   11560: invokevirtual insertElementAt : (Ljava/lang/Object;I)V
    //   11563: aload #14
    //   11565: invokeinterface hasMoreElements : ()Z
    //   11570: ifeq -> 11578
    //   11573: goto_w -> 11411
    //   11578: aload_1
    //   11579: ldc_w 'serverGroup'
    //   11582: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   11585: invokestatic getInheritance : (Ljava/lang/String;)Ljava/util/Properties;
    //   11588: astore #15
    //   11590: aload #15
    //   11592: invokevirtual keys : ()Ljava/util/Enumeration;
    //   11595: astore #14
    //   11597: goto_w -> 11652
    //   11602: aload #14
    //   11604: invokeinterface nextElement : ()Ljava/lang/Object;
    //   11609: invokevirtual toString : ()Ljava/lang/String;
    //   11612: astore #16
    //   11614: aload #10
    //   11616: aload #16
    //   11618: invokevirtual indexOf : (Ljava/lang/Object;)I
    //   11621: ifge -> 11629
    //   11624: goto_w -> 11652
    //   11629: aload #13
    //   11631: aload #16
    //   11633: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   11636: ifne -> 11644
    //   11639: goto_w -> 11652
    //   11644: aload #15
    //   11646: aload #16
    //   11648: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   11651: pop
    //   11652: aload #14
    //   11654: invokeinterface hasMoreElements : ()Z
    //   11659: ifeq -> 11667
    //   11662: goto_w -> 11602
    //   11667: aload #15
    //   11669: aload #13
    //   11671: invokevirtual putAll : (Ljava/util/Map;)V
    //   11674: aload_1
    //   11675: ldc_w 'serverGroup'
    //   11678: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   11681: aload #15
    //   11683: invokestatic writeInheritance : (Ljava/lang/String;Ljava/util/Properties;)V
    //   11686: goto_w -> 13802
    //   11691: aload_1
    //   11692: ldc_w 'xmlItem'
    //   11695: ldc ''
    //   11697: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   11700: ldc_w 'user'
    //   11703: invokevirtual equals : (Ljava/lang/Object;)Z
    //   11706: ifne -> 11714
    //   11709: goto_w -> 13797
    //   11714: aload_1
    //   11715: ldc_w 'serverGroup_original'
    //   11718: ldc ''
    //   11720: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   11723: ldc_w 'extra_vfs'
    //   11726: invokevirtual equals : (Ljava/lang/Object;)Z
    //   11729: ifne -> 11737
    //   11732: goto_w -> 11748
    //   11737: aload_1
    //   11738: ldc_w 'serverGroup'
    //   11741: ldc_w 'extra_vfs'
    //   11744: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   11747: pop
    //   11748: aload_1
    //   11749: ldc_w 'usernames'
    //   11752: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   11755: ifeq -> 11763
    //   11758: goto_w -> 11779
    //   11763: aload_1
    //   11764: ldc_w 'usernames'
    //   11767: aload_1
    //   11768: ldc 'username'
    //   11770: ldc ''
    //   11772: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   11775: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   11778: pop
    //   11779: aload_1
    //   11780: ldc_w 'usernames'
    //   11783: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   11786: bipush #43
    //   11788: bipush #32
    //   11790: invokevirtual replace : (CC)Ljava/lang/String;
    //   11793: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   11796: ldc_w ';'
    //   11799: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   11802: astore #12
    //   11804: iconst_0
    //   11805: istore #13
    //   11807: goto_w -> 13779
    //   11812: aload #12
    //   11814: iload #13
    //   11816: aaload
    //   11817: invokevirtual trim : ()Ljava/lang/String;
    //   11820: astore #14
    //   11822: aload #14
    //   11824: ldc ''
    //   11826: invokevirtual equals : (Ljava/lang/Object;)Z
    //   11829: ifne -> 11837
    //   11832: goto_w -> 11842
    //   11837: goto_w -> 13776
    //   11842: aload_1
    //   11843: ldc_w 'serverGroup'
    //   11846: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   11849: invokestatic getGroups : (Ljava/lang/String;)Ljava/util/Properties;
    //   11852: astore #15
    //   11854: aload #15
    //   11856: ifnull -> 11864
    //   11859: goto_w -> 11873
    //   11864: new java/util/Properties
    //   11867: dup
    //   11868: invokespecial <init> : ()V
    //   11871: astore #15
    //   11873: aload_0
    //   11874: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   11877: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   11880: ldc_w 'admin_group_name'
    //   11883: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   11886: astore #16
    //   11888: aload #16
    //   11890: ldc ''
    //   11892: invokevirtual equals : (Ljava/lang/Object;)Z
    //   11895: ifeq -> 11903
    //   11898: goto_w -> 11919
    //   11903: aload #16
    //   11905: ldc_w 'admin_group_name'
    //   11908: invokevirtual equals : (Ljava/lang/Object;)Z
    //   11911: ifne -> 11919
    //   11914: goto_w -> 11933
    //   11919: aload_0
    //   11920: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   11923: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   11926: ldc 'user_name'
    //   11928: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   11931: astore #16
    //   11933: aload #15
    //   11935: aload #16
    //   11937: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   11940: checkcast java/util/Vector
    //   11943: astore #17
    //   11945: aload #15
    //   11947: ldc_w 'pendingSelfRegistration'
    //   11950: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   11953: checkcast java/util/Vector
    //   11956: astore #18
    //   11958: aload #17
    //   11960: ifnull -> 11968
    //   11963: goto_w -> 11977
    //   11968: new java/util/Vector
    //   11971: dup
    //   11972: invokespecial <init> : ()V
    //   11975: astore #17
    //   11977: aload #15
    //   11979: aload #16
    //   11981: aload #17
    //   11983: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   11986: pop
    //   11987: aload #18
    //   11989: ifnull -> 11997
    //   11992: goto_w -> 12017
    //   11997: new java/util/Vector
    //   12000: dup
    //   12001: invokespecial <init> : ()V
    //   12004: astore #18
    //   12006: aload #15
    //   12008: ldc_w 'pendingSelfRegistration'
    //   12011: aload #18
    //   12013: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   12016: pop
    //   12017: aload #14
    //   12019: aload #16
    //   12021: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   12024: ifne -> 12032
    //   12027: goto_w -> 12043
    //   12032: new java/lang/Exception
    //   12035: dup
    //   12036: ldc_w 'You cannot edit this user, it is only for reference.'
    //   12039: invokespecial <init> : (Ljava/lang/String;)V
    //   12042: athrow
    //   12043: aload_1
    //   12044: ldc_w 'serverGroup'
    //   12047: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   12050: invokestatic getInheritance : (Ljava/lang/String;)Ljava/util/Properties;
    //   12053: astore #19
    //   12055: aload_1
    //   12056: ldc_w 'data_action'
    //   12059: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   12062: ldc_w 'delete'
    //   12065: invokevirtual equals : (Ljava/lang/Object;)Z
    //   12068: ifne -> 12076
    //   12071: goto_w -> 12232
    //   12076: aload #14
    //   12078: ldc_w 'default'
    //   12081: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   12084: ifne -> 12092
    //   12087: goto_w -> 12120
    //   12092: aload #9
    //   12094: ldc_w 'default_edittable'
    //   12097: ldc 'false'
    //   12099: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   12102: ldc 'true'
    //   12104: invokevirtual equals : (Ljava/lang/Object;)Z
    //   12107: ifeq -> 12115
    //   12110: goto_w -> 12120
    //   12115: goto_w -> 13776
    //   12120: aload #10
    //   12122: aload #14
    //   12124: invokevirtual indexOf : (Ljava/lang/Object;)I
    //   12127: iflt -> 12135
    //   12130: goto_w -> 12167
    //   12135: new java/lang/Exception
    //   12138: dup
    //   12139: new java/lang/StringBuffer
    //   12142: dup
    //   12143: ldc_w 'Username '
    //   12146: invokespecial <init> : (Ljava/lang/String;)V
    //   12149: aload #14
    //   12151: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   12154: ldc_w ' not found.'
    //   12157: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   12160: invokevirtual toString : ()Ljava/lang/String;
    //   12163: invokespecial <init> : (Ljava/lang/String;)V
    //   12166: athrow
    //   12167: aload_1
    //   12168: ldc_w 'serverGroup'
    //   12171: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   12174: aload #14
    //   12176: invokestatic deleteUser : (Ljava/lang/String;Ljava/lang/String;)V
    //   12179: aload #17
    //   12181: aload #14
    //   12183: invokevirtual remove : (Ljava/lang/Object;)Z
    //   12186: pop
    //   12187: aload #18
    //   12189: aload #14
    //   12191: invokevirtual remove : (Ljava/lang/Object;)Z
    //   12194: pop
    //   12195: aload #19
    //   12197: aload #14
    //   12199: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   12202: pop
    //   12203: aload_1
    //   12204: ldc_w 'serverGroup'
    //   12207: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   12210: aload #15
    //   12212: invokestatic writeGroups : (Ljava/lang/String;Ljava/util/Properties;)V
    //   12215: aload_1
    //   12216: ldc_w 'serverGroup'
    //   12219: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   12222: aload #19
    //   12224: invokestatic writeInheritance : (Ljava/lang/String;Ljava/util/Properties;)V
    //   12227: goto_w -> 13776
    //   12232: aconst_null
    //   12233: astore #20
    //   12235: aload_1
    //   12236: ldc_w 'user'
    //   12239: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   12242: ifne -> 12250
    //   12245: goto_w -> 12293
    //   12250: new java/io/ByteArrayInputStream
    //   12253: dup
    //   12254: aload_1
    //   12255: ldc_w 'user'
    //   12258: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   12261: bipush #43
    //   12263: bipush #32
    //   12265: invokevirtual replace : (CC)Ljava/lang/String;
    //   12268: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   12271: ldc_w 'UTF8'
    //   12274: invokevirtual getBytes : (Ljava/lang/String;)[B
    //   12277: invokespecial <init> : ([B)V
    //   12280: invokestatic readXMLObject : (Ljava/io/InputStream;)Ljava/lang/Object;
    //   12283: checkcast java/util/Properties
    //   12286: astore #20
    //   12288: goto_w -> 12330
    //   12293: getstatic crushftp/handlers/UserTools.ut : Lcrushftp/handlers/UserTools;
    //   12296: aload_1
    //   12297: ldc_w 'serverGroup'
    //   12300: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   12303: aload #14
    //   12305: iconst_0
    //   12306: invokevirtual getUser : (Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Properties;
    //   12309: astore #20
    //   12311: aload #20
    //   12313: ldc 'password'
    //   12315: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   12318: pop
    //   12319: aload #20
    //   12321: ldc_w 'skip_save'
    //   12324: ldc 'true'
    //   12326: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   12329: pop
    //   12330: aload #20
    //   12332: ldc_w 'userVersion'
    //   12335: ldc_w '6'
    //   12338: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   12341: pop
    //   12342: aload #20
    //   12344: ldc_w 'linked_vfs'
    //   12347: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   12350: checkcast java/util/Vector
    //   12353: astore #21
    //   12355: iconst_0
    //   12356: istore #22
    //   12358: goto_w -> 12428
    //   12363: aload #21
    //   12365: iload #22
    //   12367: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   12370: invokevirtual toString : ()Ljava/lang/String;
    //   12373: invokevirtual trim : ()Ljava/lang/String;
    //   12376: astore #23
    //   12378: aload #10
    //   12380: aload #23
    //   12382: invokevirtual indexOf : (Ljava/lang/Object;)I
    //   12385: iflt -> 12393
    //   12388: goto_w -> 12425
    //   12393: new java/lang/Exception
    //   12396: dup
    //   12397: new java/lang/StringBuffer
    //   12400: dup
    //   12401: ldc_w 'Linked_VFS username '
    //   12404: invokespecial <init> : (Ljava/lang/String;)V
    //   12407: aload #23
    //   12409: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   12412: ldc_w ' not found.'
    //   12415: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   12418: invokevirtual toString : ()Ljava/lang/String;
    //   12421: invokespecial <init> : (Ljava/lang/String;)V
    //   12424: athrow
    //   12425: iinc #22, 1
    //   12428: aload #21
    //   12430: ifnonnull -> 12438
    //   12433: goto_w -> 12453
    //   12438: iload #22
    //   12440: aload #21
    //   12442: invokevirtual size : ()I
    //   12445: if_icmpge -> 12453
    //   12448: goto_w -> 12363
    //   12453: aload #20
    //   12455: ldc 'password'
    //   12457: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   12460: ifne -> 12468
    //   12463: goto_w -> 12678
    //   12468: aload #20
    //   12470: ldc 'password'
    //   12472: ldc ''
    //   12474: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   12477: astore #22
    //   12479: aload #22
    //   12481: ldc_w 'SHA:'
    //   12484: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   12487: ifeq -> 12495
    //   12490: goto_w -> 12678
    //   12495: aload #22
    //   12497: ldc_w 'SHA512:'
    //   12500: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   12503: ifeq -> 12511
    //   12506: goto_w -> 12678
    //   12511: aload #22
    //   12513: ldc_w 'SHA256:'
    //   12516: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   12519: ifeq -> 12527
    //   12522: goto_w -> 12678
    //   12527: aload #22
    //   12529: ldc_w 'SHA3:'
    //   12532: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   12535: ifeq -> 12543
    //   12538: goto_w -> 12678
    //   12543: aload #22
    //   12545: ldc_w 'MD5:'
    //   12548: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   12551: ifeq -> 12559
    //   12554: goto_w -> 12678
    //   12559: aload #22
    //   12561: ldc_w 'CRYPT3:'
    //   12564: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   12567: ifeq -> 12575
    //   12570: goto_w -> 12678
    //   12575: aload #22
    //   12577: ldc_w 'BCRYPT:'
    //   12580: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   12583: ifeq -> 12591
    //   12586: goto_w -> 12678
    //   12591: aload #22
    //   12593: ldc_w 'MD5CRYPT:'
    //   12596: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   12599: ifeq -> 12607
    //   12602: goto_w -> 12678
    //   12607: aload #22
    //   12609: ldc_w 'PBKDF2SHA256:'
    //   12612: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   12615: ifeq -> 12623
    //   12618: goto_w -> 12678
    //   12623: aload #22
    //   12625: ldc_w 'SHA512CRYPT:'
    //   12628: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   12631: ifeq -> 12639
    //   12634: goto_w -> 12678
    //   12639: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   12642: getfield common_code : Lcrushftp/handlers/Common;
    //   12645: aload #22
    //   12647: ldc_w 'password_encryption'
    //   12650: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   12653: aload #20
    //   12655: ldc_w 'salt'
    //   12658: ldc ''
    //   12660: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   12663: invokevirtual encode_pass : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   12666: astore #22
    //   12668: aload #20
    //   12670: ldc 'password'
    //   12672: aload #22
    //   12674: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   12677: pop
    //   12678: aload_1
    //   12679: aload #14
    //   12681: aload #4
    //   12683: aload_0
    //   12684: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   12687: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   12690: iconst_0
    //   12691: aconst_null
    //   12692: invokestatic processVFSSubmission : (Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;Lcrushftp/handlers/SessionCrush;ZLjava/lang/StringBuffer;)Lcrushftp/server/VFS;
    //   12695: astore #22
    //   12697: getstatic crushftp/handlers/UserTools.ut : Lcrushftp/handlers/UserTools;
    //   12700: aload_1
    //   12701: ldc_w 'serverGroup'
    //   12704: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   12707: aload #14
    //   12709: iconst_0
    //   12710: invokevirtual getUser : (Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Properties;
    //   12713: astore #23
    //   12715: aload #23
    //   12717: ifnonnull -> 12725
    //   12720: goto_w -> 12751
    //   12725: aload #23
    //   12727: ldc 'username'
    //   12729: ldc ''
    //   12731: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   12734: ldc_w 'TEMPLATE'
    //   12737: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   12740: ifne -> 12748
    //   12743: goto_w -> 12751
    //   12748: aconst_null
    //   12749: astore #23
    //   12751: aload_1
    //   12752: ldc_w 'data_action'
    //   12755: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   12758: ldc_w 'update'
    //   12761: invokevirtual equals : (Ljava/lang/Object;)Z
    //   12764: ifne -> 12772
    //   12767: goto_w -> 12910
    //   12772: aload #10
    //   12774: aload #14
    //   12776: invokevirtual indexOf : (Ljava/lang/Object;)I
    //   12779: iflt -> 12787
    //   12782: goto_w -> 12819
    //   12787: new java/lang/Exception
    //   12790: dup
    //   12791: new java/lang/StringBuffer
    //   12794: dup
    //   12795: ldc_w 'Username '
    //   12798: invokespecial <init> : (Ljava/lang/String;)V
    //   12801: aload #14
    //   12803: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   12806: ldc_w ' not found.'
    //   12809: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   12812: invokevirtual toString : ()Ljava/lang/String;
    //   12815: invokespecial <init> : (Ljava/lang/String;)V
    //   12818: athrow
    //   12819: aload #20
    //   12821: aload #23
    //   12823: aconst_null
    //   12824: invokestatic updateObjectLog : (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/StringBuffer;)V
    //   12827: aload #23
    //   12829: astore #20
    //   12831: aload #18
    //   12833: aload #14
    //   12835: invokevirtual indexOf : (Ljava/lang/Object;)I
    //   12838: ifge -> 12846
    //   12841: goto_w -> 12905
    //   12846: aload #18
    //   12848: aload #14
    //   12850: invokevirtual remove : (Ljava/lang/Object;)Z
    //   12853: pop
    //   12854: aload #17
    //   12856: aload #14
    //   12858: invokevirtual indexOf : (Ljava/lang/Object;)I
    //   12861: iflt -> 12869
    //   12864: goto_w -> 12876
    //   12869: aload #17
    //   12871: aload #14
    //   12873: invokevirtual addElement : (Ljava/lang/Object;)V
    //   12876: new java/util/Vector
    //   12879: dup
    //   12880: invokespecial <init> : ()V
    //   12883: astore #24
    //   12885: aload #24
    //   12887: aload #16
    //   12889: invokevirtual addElement : (Ljava/lang/Object;)V
    //   12892: aload #19
    //   12894: aload #14
    //   12896: aload #24
    //   12898: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   12901: pop
    //   12902: iconst_1
    //   12903: istore #11
    //   12905: goto_w -> 13290
    //   12910: aload #23
    //   12912: ifnonnull -> 12920
    //   12915: goto_w -> 13186
    //   12920: aload_1
    //   12921: ldc_w 'serverGroup_original'
    //   12924: ldc ''
    //   12926: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   12929: ldc_w 'extra_vfs'
    //   12932: invokevirtual equals : (Ljava/lang/Object;)Z
    //   12935: ifne -> 12943
    //   12938: goto_w -> 13007
    //   12943: aload #10
    //   12945: aload #14
    //   12947: iconst_0
    //   12948: aload #14
    //   12950: ldc_w '~'
    //   12953: invokevirtual lastIndexOf : (Ljava/lang/String;)I
    //   12956: invokevirtual substring : (II)Ljava/lang/String;
    //   12959: invokevirtual indexOf : (Ljava/lang/Object;)I
    //   12962: iflt -> 12970
    //   12965: goto_w -> 13002
    //   12970: new java/lang/Exception
    //   12973: dup
    //   12974: new java/lang/StringBuffer
    //   12977: dup
    //   12978: ldc_w 'Username '
    //   12981: invokespecial <init> : (Ljava/lang/String;)V
    //   12984: aload #14
    //   12986: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   12989: ldc_w ' not found.'
    //   12992: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   12995: invokevirtual toString : ()Ljava/lang/String;
    //   12998: invokespecial <init> : (Ljava/lang/String;)V
    //   13001: athrow
    //   13002: goto_w -> 13054
    //   13007: aload #10
    //   13009: aload #14
    //   13011: invokevirtual indexOf : (Ljava/lang/Object;)I
    //   13014: iflt -> 13022
    //   13017: goto_w -> 13054
    //   13022: new java/lang/Exception
    //   13025: dup
    //   13026: new java/lang/StringBuffer
    //   13029: dup
    //   13030: ldc_w 'Username '
    //   13033: invokespecial <init> : (Ljava/lang/String;)V
    //   13036: aload #14
    //   13038: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   13041: ldc_w ' not found.'
    //   13044: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   13047: invokevirtual toString : ()Ljava/lang/String;
    //   13050: invokespecial <init> : (Ljava/lang/String;)V
    //   13053: athrow
    //   13054: aload #14
    //   13056: invokevirtual trim : ()Ljava/lang/String;
    //   13059: ldc_w 'default'
    //   13062: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   13065: ifne -> 13073
    //   13068: goto_w -> 13107
    //   13073: aload #9
    //   13075: ldc_w 'default_edittable'
    //   13078: ldc 'false'
    //   13080: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   13083: ldc 'true'
    //   13085: invokevirtual equals : (Ljava/lang/Object;)Z
    //   13088: ifeq -> 13096
    //   13091: goto_w -> 13107
    //   13096: new java/lang/Exception
    //   13099: dup
    //   13100: ldc_w 'This user is for reference only.  You cannot edit this user.'
    //   13103: invokespecial <init> : (Ljava/lang/String;)V
    //   13106: athrow
    //   13107: aload #18
    //   13109: aload #14
    //   13111: invokevirtual indexOf : (Ljava/lang/Object;)I
    //   13114: ifge -> 13122
    //   13117: goto_w -> 13181
    //   13122: aload #18
    //   13124: aload #14
    //   13126: invokevirtual remove : (Ljava/lang/Object;)Z
    //   13129: pop
    //   13130: aload #17
    //   13132: aload #14
    //   13134: invokevirtual indexOf : (Ljava/lang/Object;)I
    //   13137: iflt -> 13145
    //   13140: goto_w -> 13152
    //   13145: aload #17
    //   13147: aload #14
    //   13149: invokevirtual addElement : (Ljava/lang/Object;)V
    //   13152: new java/util/Vector
    //   13155: dup
    //   13156: invokespecial <init> : ()V
    //   13159: astore #24
    //   13161: aload #24
    //   13163: aload #16
    //   13165: invokevirtual addElement : (Ljava/lang/Object;)V
    //   13168: aload #19
    //   13170: aload #14
    //   13172: aload #24
    //   13174: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   13177: pop
    //   13178: iconst_1
    //   13179: istore #11
    //   13181: goto_w -> 13290
    //   13186: aload_1
    //   13187: ldc_w 'serverGroup_original'
    //   13190: ldc ''
    //   13192: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   13195: ldc_w 'extra_vfs'
    //   13198: invokevirtual equals : (Ljava/lang/Object;)Z
    //   13201: ifeq -> 13209
    //   13204: goto_w -> 13290
    //   13209: new java/util/Vector
    //   13212: dup
    //   13213: invokespecial <init> : ()V
    //   13216: astore #24
    //   13218: aload #24
    //   13220: aload #16
    //   13222: invokevirtual addElement : (Ljava/lang/Object;)V
    //   13225: aload #19
    //   13227: aload #14
    //   13229: aload #24
    //   13231: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   13234: pop
    //   13235: aload #18
    //   13237: aload #14
    //   13239: invokevirtual remove : (Ljava/lang/Object;)Z
    //   13242: pop
    //   13243: aload #17
    //   13245: aload #14
    //   13247: invokevirtual indexOf : (Ljava/lang/Object;)I
    //   13250: iflt -> 13258
    //   13253: goto_w -> 13265
    //   13258: aload #17
    //   13260: aload #14
    //   13262: invokevirtual addElement : (Ljava/lang/Object;)V
    //   13265: iconst_1
    //   13266: istore #11
    //   13268: aload #10
    //   13270: aload #14
    //   13272: invokevirtual indexOf : (Ljava/lang/Object;)I
    //   13275: iflt -> 13283
    //   13278: goto_w -> 13290
    //   13283: aload #10
    //   13285: aload #14
    //   13287: invokevirtual addElement : (Ljava/lang/Object;)V
    //   13290: aload #20
    //   13292: aload #16
    //   13294: aload_1
    //   13295: ldc_w 'serverGroup'
    //   13298: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   13301: invokestatic testLimitedAdminAccess : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Z
    //   13304: ifne -> 13312
    //   13307: goto_w -> 13692
    //   13312: aload #20
    //   13314: ldc_w 'skip_save'
    //   13317: ldc ''
    //   13319: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   13322: ldc 'true'
    //   13324: invokevirtual equals : (Ljava/lang/Object;)Z
    //   13327: ifeq -> 13335
    //   13330: goto_w -> 13349
    //   13335: aload_1
    //   13336: ldc_w 'serverGroup'
    //   13339: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   13342: aload #14
    //   13344: aload #20
    //   13346: invokestatic writeUser : (Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)V
    //   13349: aload_1
    //   13350: ldc_w 'vfs_items'
    //   13353: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   13356: ifeq -> 13364
    //   13359: goto_w -> 13379
    //   13364: aload_1
    //   13365: ldc_w 'permissions'
    //   13368: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   13371: ifne -> 13379
    //   13374: goto_w -> 13628
    //   13379: aload #22
    //   13381: getfield homes : Ljava/util/Vector;
    //   13384: iconst_0
    //   13385: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   13388: checkcast java/util/Properties
    //   13391: astore #24
    //   13393: aload #24
    //   13395: invokevirtual keys : ()Ljava/util/Enumeration;
    //   13398: astore #25
    //   13400: iconst_1
    //   13401: istore #26
    //   13403: goto_w -> 13579
    //   13408: aload #25
    //   13410: invokeinterface nextElement : ()Ljava/lang/Object;
    //   13415: invokevirtual toString : ()Ljava/lang/String;
    //   13418: astore #27
    //   13420: aload #27
    //   13422: ldc_w 'vfs_permissions_object'
    //   13425: invokevirtual equals : (Ljava/lang/Object;)Z
    //   13428: ifne -> 13436
    //   13431: goto_w -> 13441
    //   13436: goto_w -> 13579
    //   13441: aload #24
    //   13443: aload #27
    //   13445: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   13448: checkcast java/util/Properties
    //   13451: astore #28
    //   13453: aload #28
    //   13455: ldc_w 'type'
    //   13458: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   13461: ldc_w 'DIR'
    //   13464: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   13467: ifne -> 13475
    //   13470: goto_w -> 13480
    //   13475: goto_w -> 13579
    //   13480: aload #28
    //   13482: ldc_w 'vItems'
    //   13485: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   13488: aload #16
    //   13490: aload_1
    //   13491: ldc_w 'serverGroup_backup'
    //   13494: aload_1
    //   13495: ldc_w 'serverGroup'
    //   13498: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   13501: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   13504: invokestatic testLimitedAdminAccess : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Z
    //   13507: istore #26
    //   13509: iload #26
    //   13511: ifeq -> 13519
    //   13514: goto_w -> 13579
    //   13519: ldc_w 'HTTP_SERVER'
    //   13522: iconst_0
    //   13523: new java/lang/StringBuffer
    //   13526: dup
    //   13527: invokespecial <init> : ()V
    //   13530: new java/util/Date
    //   13533: dup
    //   13534: invokespecial <init> : ()V
    //   13537: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   13540: ldc_w ':User '
    //   13543: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   13546: aload_0
    //   13547: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   13550: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   13553: ldc 'user_name'
    //   13555: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   13558: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   13561: ldc_w ' Violated Security Constraint for a USER_ADMIN:'
    //   13564: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   13567: aload #16
    //   13569: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   13572: invokevirtual toString : ()Ljava/lang/String;
    //   13575: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   13578: pop
    //   13579: aload #25
    //   13581: invokeinterface hasMoreElements : ()Z
    //   13586: ifne -> 13594
    //   13589: goto_w -> 13604
    //   13594: iload #26
    //   13596: ifeq -> 13604
    //   13599: goto_w -> 13408
    //   13604: iload #26
    //   13606: ifne -> 13614
    //   13609: goto_w -> 13628
    //   13614: aload_1
    //   13615: ldc_w 'serverGroup'
    //   13618: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   13621: aload #14
    //   13623: aload #22
    //   13625: invokestatic writeVFS : (Ljava/lang/String;Ljava/lang/String;Lcrushftp/server/VFS;)V
    //   13628: iload #11
    //   13630: ifne -> 13638
    //   13633: goto_w -> 13662
    //   13638: aload_1
    //   13639: ldc_w 'serverGroup'
    //   13642: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   13645: aload #15
    //   13647: invokestatic writeGroups : (Ljava/lang/String;Ljava/util/Properties;)V
    //   13650: aload_1
    //   13651: ldc_w 'serverGroup'
    //   13654: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   13657: aload #19
    //   13659: invokestatic writeInheritance : (Ljava/lang/String;Ljava/util/Properties;)V
    //   13662: getstatic crushftp/handlers/UserTools.ut : Lcrushftp/handlers/UserTools;
    //   13665: aload_1
    //   13666: ldc_w 'serverGroup'
    //   13669: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   13672: aload #14
    //   13674: iconst_1
    //   13675: invokevirtual getUser : (Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Properties;
    //   13678: pop
    //   13679: getstatic crushftp/handlers/UserTools.ut : Lcrushftp/handlers/UserTools;
    //   13682: aload #14
    //   13684: invokevirtual forceMemoryReload : (Ljava/lang/String;)V
    //   13687: goto_w -> 13776
    //   13692: new java/lang/StringBuffer
    //   13695: dup
    //   13696: ldc_w ':User '
    //   13699: invokespecial <init> : (Ljava/lang/String;)V
    //   13702: aload_0
    //   13703: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   13706: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   13709: ldc 'user_name'
    //   13711: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   13714: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   13717: ldc_w ' Violated Security Constraint for a USER_ADMIN:'
    //   13720: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   13723: aload #16
    //   13725: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   13728: invokevirtual toString : ()Ljava/lang/String;
    //   13731: astore #24
    //   13733: ldc_w 'HTTP_SERVER'
    //   13736: iconst_0
    //   13737: new java/lang/StringBuffer
    //   13740: dup
    //   13741: invokespecial <init> : ()V
    //   13744: new java/util/Date
    //   13747: dup
    //   13748: invokespecial <init> : ()V
    //   13751: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   13754: aload #24
    //   13756: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   13759: invokevirtual toString : ()Ljava/lang/String;
    //   13762: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   13765: pop
    //   13766: new java/lang/Exception
    //   13769: dup
    //   13770: aload #24
    //   13772: invokespecial <init> : (Ljava/lang/String;)V
    //   13775: athrow
    //   13776: iinc #13, 1
    //   13779: iload #13
    //   13781: aload #12
    //   13783: arraylength
    //   13784: if_icmpge -> 13792
    //   13787: goto_w -> 11812
    //   13792: goto_w -> 13802
    //   13797: ldc_w 'OK'
    //   13800: astore #8
    //   13802: goto_w -> 13837
    //   13807: astore #9
    //   13809: new java/lang/StringBuffer
    //   13812: dup
    //   13813: ldc_w 'FAILURE:'
    //   13816: invokespecial <init> : (Ljava/lang/String;)V
    //   13819: aload #9
    //   13821: invokevirtual toString : ()Ljava/lang/String;
    //   13824: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   13827: invokevirtual toString : ()Ljava/lang/String;
    //   13830: astore #8
    //   13832: goto_w -> 13837
    //   13837: goto_w -> 13866
    //   13842: astore #9
    //   13844: ldc_w 'HTTP_SERVER'
    //   13847: iconst_1
    //   13848: aload #9
    //   13850: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   13853: pop
    //   13854: aload #9
    //   13856: invokevirtual toString : ()Ljava/lang/String;
    //   13859: astore #8
    //   13861: goto_w -> 13866
    //   13866: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   13869: astore #9
    //   13871: new java/lang/StringBuffer
    //   13874: dup
    //   13875: aload #9
    //   13877: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   13880: invokespecial <init> : (Ljava/lang/String;)V
    //   13883: ldc_w '<result><response_status>'
    //   13886: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   13889: aload #8
    //   13891: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   13894: ldc_w '</response_status></result>'
    //   13897: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   13900: invokevirtual toString : ()Ljava/lang/String;
    //   13903: astore #9
    //   13905: aload_0
    //   13906: aload #9
    //   13908: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   13911: ireturn
    //   13912: aload #5
    //   13914: ldc_w 'refreshUser'
    //   13917: invokevirtual equals : (Ljava/lang/Object;)Z
    //   13920: ifne -> 13928
    //   13923: goto_w -> 13975
    //   13928: aload #5
    //   13930: aload #4
    //   13932: aload_0
    //   13933: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   13936: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   13939: ldc 'user_ip'
    //   13941: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   13944: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   13947: ifne -> 13955
    //   13950: goto_w -> 13967
    //   13955: getstatic crushftp/handlers/UserTools.ut : Lcrushftp/handlers/UserTools;
    //   13958: aload_1
    //   13959: ldc 'username'
    //   13961: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   13964: invokevirtual forceMemoryReload : (Ljava/lang/String;)V
    //   13967: aload_0
    //   13968: ldc_w '<commandResult><response>Success</response></commandResult>'
    //   13971: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   13974: ireturn
    //   13975: aload #5
    //   13977: ldc_w 'testURL'
    //   13980: invokevirtual equals : (Ljava/lang/Object;)Z
    //   13983: ifne -> 13991
    //   13986: goto_w -> 14361
    //   13991: aload #5
    //   13993: aload #4
    //   13995: aload_0
    //   13996: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   13999: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   14002: ldc 'user_ip'
    //   14004: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   14007: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   14010: ifne -> 14018
    //   14013: goto_w -> 14353
    //   14018: invokestatic getProperties : ()Ljava/util/Properties;
    //   14021: ldc_w 'crushftp.isTestCall'
    //   14024: ldc 'true'
    //   14026: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   14029: pop
    //   14030: ldc ''
    //   14032: astore #8
    //   14034: aload_1
    //   14035: ldc_w 'url'
    //   14038: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   14041: ldc_w 'test'
    //   14044: aconst_null
    //   14045: invokestatic getClient : (Ljava/lang/String;Ljava/lang/String;Ljava/util/Vector;)Lcom/crushftp/client/GenericClient;
    //   14048: astore #9
    //   14050: aload_1
    //   14051: invokevirtual keys : ()Ljava/util/Enumeration;
    //   14054: astore #10
    //   14056: goto_w -> 14143
    //   14061: aload #10
    //   14063: invokeinterface nextElement : ()Ljava/lang/Object;
    //   14068: invokevirtual toString : ()Ljava/lang/String;
    //   14071: astore #11
    //   14073: aload #11
    //   14075: ldc_w 'url'
    //   14078: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   14081: ifeq -> 14089
    //   14084: goto_w -> 14121
    //   14089: aload #11
    //   14091: ldc_w 'command'
    //   14094: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   14097: ifeq -> 14105
    //   14100: goto_w -> 14121
    //   14105: aload #11
    //   14107: ldc_w 'c2f'
    //   14110: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   14113: ifne -> 14121
    //   14116: goto_w -> 14126
    //   14121: goto_w -> 14143
    //   14126: aload_1
    //   14127: aload #11
    //   14129: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   14132: astore #12
    //   14134: aload #9
    //   14136: aload #11
    //   14138: aload #12
    //   14140: invokevirtual setConfig : (Ljava/lang/String;Ljava/lang/Object;)V
    //   14143: aload #10
    //   14145: invokeinterface hasMoreElements : ()Z
    //   14150: ifeq -> 14158
    //   14153: goto_w -> 14061
    //   14158: new com/crushftp/client/VRL
    //   14161: dup
    //   14162: aload_1
    //   14163: ldc_w 'url'
    //   14166: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   14169: invokespecial <init> : (Ljava/lang/String;)V
    //   14172: astore #11
    //   14174: aload #9
    //   14176: aload #11
    //   14178: invokevirtual getUsername : ()Ljava/lang/String;
    //   14181: aload #11
    //   14183: invokevirtual getPassword : ()Ljava/lang/String;
    //   14186: aconst_null
    //   14187: invokevirtual login : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   14190: pop
    //   14191: aload #9
    //   14193: aload #11
    //   14195: invokevirtual getPath : ()Ljava/lang/String;
    //   14198: new java/util/Vector
    //   14201: dup
    //   14202: invokespecial <init> : ()V
    //   14205: invokevirtual list : (Ljava/lang/String;Ljava/util/Vector;)Ljava/util/Vector;
    //   14208: pop
    //   14209: aload #9
    //   14211: invokevirtual logout : ()V
    //   14214: goto_w -> 14238
    //   14219: astore #14
    //   14221: jsr_w -> 14229
    //   14226: aload #14
    //   14228: athrow
    //   14229: astore #13
    //   14231: aload #9
    //   14233: invokevirtual close : ()V
    //   14236: ret #13
    //   14238: jsr_w -> 14229
    //   14243: ldc_w 'Success'
    //   14246: astore #8
    //   14248: goto_w -> 14289
    //   14253: astore #9
    //   14255: ldc 'SERVER'
    //   14257: iconst_0
    //   14258: aload #9
    //   14260: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   14263: pop
    //   14264: new java/lang/StringBuffer
    //   14267: dup
    //   14268: ldc_w 'ERROR:'
    //   14271: invokespecial <init> : (Ljava/lang/String;)V
    //   14274: aload #9
    //   14276: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   14279: invokevirtual toString : ()Ljava/lang/String;
    //   14282: astore #8
    //   14284: goto_w -> 14289
    //   14289: aload_0
    //   14290: new java/lang/StringBuffer
    //   14293: dup
    //   14294: ldc_w '<commandResult><response>'
    //   14297: invokespecial <init> : (Ljava/lang/String;)V
    //   14300: aload #8
    //   14302: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   14305: ldc_w '</response></commandResult>'
    //   14308: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   14311: invokevirtual toString : ()Ljava/lang/String;
    //   14314: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   14317: istore #17
    //   14319: jsr_w -> 14337
    //   14324: iload #17
    //   14326: ireturn
    //   14327: astore #16
    //   14329: jsr_w -> 14337
    //   14334: aload #16
    //   14336: athrow
    //   14337: astore #15
    //   14339: invokestatic getProperties : ()Ljava/util/Properties;
    //   14342: ldc_w 'crushftp.isTestCall'
    //   14345: ldc 'false'
    //   14347: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   14350: pop
    //   14351: ret #15
    //   14353: aload_0
    //   14354: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   14357: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   14360: ireturn
    //   14361: aload #5
    //   14363: ldc_w 'getUserXMLListing'
    //   14366: invokevirtual equals : (Ljava/lang/Object;)Z
    //   14369: ifne -> 14377
    //   14372: goto_w -> 14767
    //   14377: aload_1
    //   14378: ldc_w 'serverGroup_original'
    //   14381: ldc ''
    //   14383: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   14386: ldc_w 'extra_vfs'
    //   14389: invokevirtual equals : (Ljava/lang/Object;)Z
    //   14392: ifne -> 14400
    //   14395: goto_w -> 14411
    //   14400: aload_1
    //   14401: ldc_w 'serverGroup'
    //   14404: ldc_w 'extra_vfs'
    //   14407: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   14410: pop
    //   14411: aload #5
    //   14413: aload #4
    //   14415: aload_0
    //   14416: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   14419: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   14422: ldc 'user_ip'
    //   14424: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   14427: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   14430: ifne -> 14438
    //   14433: goto_w -> 14759
    //   14438: invokestatic getProperties : ()Ljava/util/Properties;
    //   14441: ldc_w 'crushftp.isTestCall'
    //   14444: aload_1
    //   14445: ldc_w 'isTestCall'
    //   14448: ldc 'false'
    //   14450: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   14453: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   14456: pop
    //   14457: aload_1
    //   14458: aload #4
    //   14460: aload_0
    //   14461: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   14464: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   14467: invokestatic getUserXMLListing : (Ljava/util/Properties;Ljava/lang/String;Lcrushftp/handlers/SessionCrush;)Ljava/util/Properties;
    //   14470: astore #8
    //   14472: ldc ''
    //   14474: astore #9
    //   14476: ldc ''
    //   14478: astore #10
    //   14480: aload #8
    //   14482: ldc_w 'error'
    //   14485: ldc ''
    //   14487: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   14490: ldc ''
    //   14492: invokevirtual equals : (Ljava/lang/Object;)Z
    //   14495: ifeq -> 14503
    //   14498: goto_w -> 14526
    //   14503: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   14506: getfield common_code : Lcrushftp/handlers/Common;
    //   14509: pop
    //   14510: aload #8
    //   14512: ldc_w 'listingInfo'
    //   14515: aconst_null
    //   14516: invokestatic getXMLString : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   14519: astore #10
    //   14521: goto_w -> 14598
    //   14526: aload_1
    //   14527: ldc_w 'format'
    //   14530: ldc ''
    //   14532: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   14535: ldc_w 'JSON'
    //   14538: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   14541: ifne -> 14549
    //   14544: goto_w -> 14568
    //   14549: aload #8
    //   14551: ldc_w 'exif_listings'
    //   14554: invokestatic BG : (Ljava/lang/String;)Z
    //   14557: iconst_1
    //   14558: invokestatic getJsonList : (Ljava/util/Properties;ZZ)Ljava/lang/String;
    //   14561: astore #9
    //   14563: goto_w -> 14598
    //   14568: aload_1
    //   14569: ldc_w 'format'
    //   14572: ldc ''
    //   14574: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   14577: ldc_w 'STAT'
    //   14580: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   14583: ifne -> 14591
    //   14586: goto_w -> 14598
    //   14591: aload #8
    //   14593: invokestatic getStatList : (Ljava/util/Properties;)Ljava/lang/String;
    //   14596: astore #9
    //   14598: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   14601: getfield common_code : Lcrushftp/handlers/Common;
    //   14604: pop
    //   14605: aload #8
    //   14607: ldc_w 'listingInfo'
    //   14610: aconst_null
    //   14611: invokestatic getXMLString : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   14614: astore #10
    //   14616: goto_w -> 14638
    //   14621: astore #11
    //   14623: ldc_w 'HTTP_SERVER'
    //   14626: iconst_1
    //   14627: aload #11
    //   14629: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   14632: pop
    //   14633: goto_w -> 14638
    //   14638: aload #9
    //   14640: ldc ''
    //   14642: invokevirtual equals : (Ljava/lang/Object;)Z
    //   14645: ifeq -> 14653
    //   14648: goto_w -> 14717
    //   14653: new java/lang/StringBuffer
    //   14656: dup
    //   14657: aload #10
    //   14659: iconst_0
    //   14660: aload #10
    //   14662: ldc_w '</privs>'
    //   14665: invokevirtual indexOf : (Ljava/lang/String;)I
    //   14668: ldc_w '</privs>'
    //   14671: invokevirtual length : ()I
    //   14674: iadd
    //   14675: invokevirtual substring : (II)Ljava/lang/String;
    //   14678: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   14681: invokespecial <init> : (Ljava/lang/String;)V
    //   14684: aload #9
    //   14686: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   14689: aload #10
    //   14691: aload #10
    //   14693: ldc_w '</privs>'
    //   14696: invokevirtual indexOf : (Ljava/lang/String;)I
    //   14699: ldc_w '</privs>'
    //   14702: invokevirtual length : ()I
    //   14705: iadd
    //   14706: invokevirtual substring : (I)Ljava/lang/String;
    //   14709: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   14712: invokevirtual toString : ()Ljava/lang/String;
    //   14715: astore #10
    //   14717: aload_0
    //   14718: aload #10
    //   14720: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   14723: istore #14
    //   14725: jsr_w -> 14743
    //   14730: iload #14
    //   14732: ireturn
    //   14733: astore #13
    //   14735: jsr_w -> 14743
    //   14740: aload #13
    //   14742: athrow
    //   14743: astore #12
    //   14745: invokestatic getProperties : ()Ljava/util/Properties;
    //   14748: ldc_w 'crushftp.isTestCall'
    //   14751: ldc 'false'
    //   14753: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   14756: pop
    //   14757: ret #12
    //   14759: aload_0
    //   14760: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   14763: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   14766: ireturn
    //   14767: aload #5
    //   14769: ldc_w 'getUserList'
    //   14772: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   14775: ifne -> 14783
    //   14778: goto_w -> 14845
    //   14783: aload #5
    //   14785: aload #4
    //   14787: aload_0
    //   14788: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   14791: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   14794: ldc 'user_ip'
    //   14796: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   14799: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   14802: ifne -> 14810
    //   14805: goto_w -> 14837
    //   14810: aload_0
    //   14811: aload_1
    //   14812: aload #4
    //   14814: aload_0
    //   14815: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   14818: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   14821: invokestatic getUserList : (Ljava/util/Properties;Ljava/lang/String;Lcrushftp/handlers/SessionCrush;)Ljava/util/Properties;
    //   14824: ldc_w 'user_list'
    //   14827: ldc_w 'OK'
    //   14830: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   14833: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   14836: ireturn
    //   14837: aload_0
    //   14838: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   14841: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   14844: ireturn
    //   14845: aload #5
    //   14847: ldc_w 'getUserXML'
    //   14850: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   14853: ifne -> 14861
    //   14856: goto_w -> 14962
    //   14861: aload #5
    //   14863: aload #4
    //   14865: aload_0
    //   14866: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   14869: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   14872: ldc 'user_ip'
    //   14874: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   14877: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   14880: ifeq -> 14888
    //   14883: goto_w -> 14927
    //   14888: aload #4
    //   14890: ldc_w '(REPORT_EDIT)'
    //   14893: invokevirtual indexOf : (Ljava/lang/String;)I
    //   14896: ifge -> 14904
    //   14899: goto_w -> 14954
    //   14904: aload_1
    //   14905: ldc_w 'xmlItem'
    //   14908: ldc ''
    //   14910: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   14913: ldc_w 'group'
    //   14916: invokevirtual equals : (Ljava/lang/Object;)Z
    //   14919: ifne -> 14927
    //   14922: goto_w -> 14954
    //   14927: aload_0
    //   14928: aload_1
    //   14929: aload #4
    //   14931: aload_0
    //   14932: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   14935: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   14938: invokestatic getUserXML : (Ljava/util/Properties;Ljava/lang/String;Lcrushftp/handlers/SessionCrush;)Ljava/lang/Object;
    //   14941: ldc_w 'result_item'
    //   14944: ldc_w 'OK'
    //   14947: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   14950: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   14953: ireturn
    //   14954: aload_0
    //   14955: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   14958: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   14961: ireturn
    //   14962: aload #5
    //   14964: ldc_w 'getAdminXMLListing'
    //   14967: invokevirtual equals : (Ljava/lang/Object;)Z
    //   14970: ifne -> 14978
    //   14973: goto_w -> 16229
    //   14978: new java/util/Properties
    //   14981: dup
    //   14982: invokespecial <init> : ()V
    //   14985: astore #8
    //   14987: aload_1
    //   14988: ldc_w 'get_from_agentid'
    //   14991: ldc ''
    //   14993: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   14996: ldc ''
    //   14998: invokevirtual equals : (Ljava/lang/Object;)Z
    //   15001: ifeq -> 15009
    //   15004: goto_w -> 15635
    //   15009: new java/util/Vector
    //   15012: dup
    //   15013: invokespecial <init> : ()V
    //   15016: astore #9
    //   15018: aload_1
    //   15019: ldc_w 'path'
    //   15022: ldc ''
    //   15024: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   15027: bipush #43
    //   15029: bipush #32
    //   15031: invokevirtual replace : (CC)Ljava/lang/String;
    //   15034: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   15037: astore #10
    //   15039: aload_1
    //   15040: ldc_w 'admin_password'
    //   15043: aload_1
    //   15044: ldc_w 'admin_password'
    //   15047: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   15050: bipush #43
    //   15052: bipush #32
    //   15054: invokevirtual replace : (CC)Ljava/lang/String;
    //   15057: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   15060: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   15063: pop
    //   15064: aload #10
    //   15066: ldc_w '///'
    //   15069: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   15072: ifne -> 15080
    //   15075: goto_w -> 15116
    //   15080: aload #10
    //   15082: ldc_w '////'
    //   15085: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   15088: ifeq -> 15096
    //   15091: goto_w -> 15116
    //   15096: new java/lang/StringBuffer
    //   15099: dup
    //   15100: ldc_w '/'
    //   15103: invokespecial <init> : (Ljava/lang/String;)V
    //   15106: aload #10
    //   15108: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   15111: invokevirtual toString : ()Ljava/lang/String;
    //   15114: astore #10
    //   15116: aload #10
    //   15118: ldc_w '/'
    //   15121: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   15124: ifeq -> 15132
    //   15127: goto_w -> 15152
    //   15132: new java/lang/StringBuffer
    //   15135: dup
    //   15136: ldc_w '/'
    //   15139: invokespecial <init> : (Ljava/lang/String;)V
    //   15142: aload #10
    //   15144: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   15147: invokevirtual toString : ()Ljava/lang/String;
    //   15150: astore #10
    //   15152: aload #10
    //   15154: ldc_w '/'
    //   15157: invokevirtual endsWith : (Ljava/lang/String;)Z
    //   15160: ifeq -> 15168
    //   15163: goto_w -> 15191
    //   15168: new java/lang/StringBuffer
    //   15171: dup
    //   15172: aload #10
    //   15174: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   15177: invokespecial <init> : (Ljava/lang/String;)V
    //   15180: ldc_w '/'
    //   15183: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   15186: invokevirtual toString : ()Ljava/lang/String;
    //   15189: astore #10
    //   15191: aload #10
    //   15193: invokestatic dots : (Ljava/lang/String;)Ljava/lang/String;
    //   15196: astore #10
    //   15198: aload_1
    //   15199: ldc_w 'path'
    //   15202: aload #10
    //   15204: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   15207: pop
    //   15208: aload_1
    //   15209: ldc 'user_name'
    //   15211: aload_0
    //   15212: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   15215: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   15218: ldc 'user_name'
    //   15220: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   15223: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   15226: pop
    //   15227: aload_1
    //   15228: ldc 'user_ip'
    //   15230: aload_0
    //   15231: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   15234: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   15237: ldc 'user_ip'
    //   15239: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   15242: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   15245: pop
    //   15246: aload_1
    //   15247: ldc 'clientid'
    //   15249: aload_0
    //   15250: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   15253: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   15256: ldc 'clientid'
    //   15258: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   15261: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   15264: pop
    //   15265: aload_1
    //   15266: ldc_w 'site'
    //   15269: aload #4
    //   15271: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   15274: pop
    //   15275: aload_1
    //   15276: invokestatic getSyncXMLList : (Ljava/util/Properties;)Ljava/lang/Object;
    //   15279: checkcast java/util/Vector
    //   15282: astore #9
    //   15284: goto_w -> 15306
    //   15289: astore #11
    //   15291: ldc_w 'HTTP_SERVER'
    //   15294: iconst_1
    //   15295: aload #11
    //   15297: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   15300: pop
    //   15301: goto_w -> 15306
    //   15306: aload #8
    //   15308: ldc_w 'privs'
    //   15311: ldc_w '(read)(view)'
    //   15314: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   15317: pop
    //   15318: aload #8
    //   15320: ldc_w 'path'
    //   15323: aload #10
    //   15325: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   15328: pop
    //   15329: iconst_0
    //   15330: istore #11
    //   15332: goto_w -> 15383
    //   15337: aload #9
    //   15339: iload #11
    //   15341: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   15344: checkcast java/util/Properties
    //   15347: astore #12
    //   15349: new com/crushftp/client/VRL
    //   15352: dup
    //   15353: aload #12
    //   15355: ldc_w 'url'
    //   15358: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   15361: invokespecial <init> : (Ljava/lang/String;)V
    //   15364: astore #13
    //   15366: aload #12
    //   15368: ldc_w 'href_path'
    //   15371: aload #13
    //   15373: invokevirtual getPath : ()Ljava/lang/String;
    //   15376: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   15379: pop
    //   15380: iinc #11, 1
    //   15383: iload #11
    //   15385: aload #9
    //   15387: invokevirtual size : ()I
    //   15390: if_icmpge -> 15398
    //   15393: goto_w -> 15337
    //   15398: aload #8
    //   15400: ldc_w 'listing'
    //   15403: aload #9
    //   15405: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   15408: pop
    //   15409: ldc ''
    //   15411: astore #11
    //   15413: aload #8
    //   15415: ifnonnull -> 15423
    //   15418: goto_w -> 15465
    //   15423: aload_1
    //   15424: ldc_w 'format'
    //   15427: ldc ''
    //   15429: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   15432: ldc_w 'JSON'
    //   15435: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   15438: ifne -> 15446
    //   15441: goto_w -> 15465
    //   15446: aload #8
    //   15448: ldc_w 'exif_listings'
    //   15451: invokestatic BG : (Ljava/lang/String;)Z
    //   15454: iconst_1
    //   15455: invokestatic getJsonList : (Ljava/util/Properties;ZZ)Ljava/lang/String;
    //   15458: astore #11
    //   15460: goto_w -> 15505
    //   15465: aload #8
    //   15467: ifnonnull -> 15475
    //   15470: goto_w -> 15505
    //   15475: aload_1
    //   15476: ldc_w 'format'
    //   15479: ldc ''
    //   15481: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   15484: ldc_w 'STAT'
    //   15487: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   15490: ifne -> 15498
    //   15493: goto_w -> 15505
    //   15498: aload #8
    //   15500: invokestatic getStatList : (Ljava/util/Properties;)Ljava/lang/String;
    //   15503: astore #11
    //   15505: ldc ''
    //   15507: astore #12
    //   15509: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   15512: getfield common_code : Lcrushftp/handlers/Common;
    //   15515: pop
    //   15516: aload #8
    //   15518: ldc_w 'listingInfo'
    //   15521: aconst_null
    //   15522: invokestatic getXMLString : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   15525: astore #12
    //   15527: goto_w -> 15549
    //   15532: astore #13
    //   15534: ldc_w 'HTTP_SERVER'
    //   15537: iconst_1
    //   15538: aload #13
    //   15540: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   15543: pop
    //   15544: goto_w -> 15549
    //   15549: aload #11
    //   15551: ldc ''
    //   15553: invokevirtual equals : (Ljava/lang/Object;)Z
    //   15556: ifeq -> 15564
    //   15559: goto_w -> 15628
    //   15564: new java/lang/StringBuffer
    //   15567: dup
    //   15568: aload #12
    //   15570: iconst_0
    //   15571: aload #12
    //   15573: ldc_w '</privs>'
    //   15576: invokevirtual indexOf : (Ljava/lang/String;)I
    //   15579: ldc_w '</privs>'
    //   15582: invokevirtual length : ()I
    //   15585: iadd
    //   15586: invokevirtual substring : (II)Ljava/lang/String;
    //   15589: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   15592: invokespecial <init> : (Ljava/lang/String;)V
    //   15595: aload #11
    //   15597: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   15600: aload #12
    //   15602: aload #12
    //   15604: ldc_w '</privs>'
    //   15607: invokevirtual indexOf : (Ljava/lang/String;)I
    //   15610: ldc_w '</privs>'
    //   15613: invokevirtual length : ()I
    //   15616: iadd
    //   15617: invokevirtual substring : (I)Ljava/lang/String;
    //   15620: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   15623: invokevirtual toString : ()Ljava/lang/String;
    //   15626: astore #12
    //   15628: aload_0
    //   15629: aload #12
    //   15631: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   15634: ireturn
    //   15635: aload #4
    //   15637: ldc_w '(CONNECT)'
    //   15640: invokevirtual indexOf : (Ljava/lang/String;)I
    //   15643: iflt -> 15651
    //   15646: goto_w -> 15699
    //   15651: aload #4
    //   15653: ldc_w '(USER_EDIT)'
    //   15656: invokevirtual indexOf : (Ljava/lang/String;)I
    //   15659: iflt -> 15667
    //   15662: goto_w -> 15699
    //   15667: aload #4
    //   15669: ldc_w '(SHARE_EDIT)'
    //   15672: invokevirtual indexOf : (Ljava/lang/String;)I
    //   15675: iflt -> 15683
    //   15678: goto_w -> 15699
    //   15683: aload #4
    //   15685: ldc_w '(LOG_ACCESS)'
    //   15688: invokevirtual indexOf : (Ljava/lang/String;)I
    //   15691: ifge -> 15699
    //   15694: goto_w -> 15940
    //   15699: aload_1
    //   15700: aload_0
    //   15701: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   15704: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   15707: aload #4
    //   15709: invokestatic getAdminXMLListing : (Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;Ljava/lang/String;)Ljava/util/Properties;
    //   15712: astore #8
    //   15714: ldc ''
    //   15716: astore #9
    //   15718: aload #8
    //   15720: ifnonnull -> 15728
    //   15723: goto_w -> 15770
    //   15728: aload_1
    //   15729: ldc_w 'format'
    //   15732: ldc ''
    //   15734: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   15737: ldc_w 'JSON'
    //   15740: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   15743: ifne -> 15751
    //   15746: goto_w -> 15770
    //   15751: aload #8
    //   15753: ldc_w 'exif_listings'
    //   15756: invokestatic BG : (Ljava/lang/String;)Z
    //   15759: iconst_1
    //   15760: invokestatic getJsonList : (Ljava/util/Properties;ZZ)Ljava/lang/String;
    //   15763: astore #9
    //   15765: goto_w -> 15810
    //   15770: aload #8
    //   15772: ifnonnull -> 15780
    //   15775: goto_w -> 15810
    //   15780: aload_1
    //   15781: ldc_w 'format'
    //   15784: ldc ''
    //   15786: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   15789: ldc_w 'STAT'
    //   15792: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   15795: ifne -> 15803
    //   15798: goto_w -> 15810
    //   15803: aload #8
    //   15805: invokestatic getStatList : (Ljava/util/Properties;)Ljava/lang/String;
    //   15808: astore #9
    //   15810: ldc ''
    //   15812: astore #10
    //   15814: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   15817: getfield common_code : Lcrushftp/handlers/Common;
    //   15820: pop
    //   15821: aload #8
    //   15823: ldc_w 'listingInfo'
    //   15826: aconst_null
    //   15827: invokestatic getXMLString : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   15830: astore #10
    //   15832: goto_w -> 15854
    //   15837: astore #11
    //   15839: ldc_w 'HTTP_SERVER'
    //   15842: iconst_1
    //   15843: aload #11
    //   15845: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   15848: pop
    //   15849: goto_w -> 15854
    //   15854: aload #9
    //   15856: ldc ''
    //   15858: invokevirtual equals : (Ljava/lang/Object;)Z
    //   15861: ifeq -> 15869
    //   15864: goto_w -> 15933
    //   15869: new java/lang/StringBuffer
    //   15872: dup
    //   15873: aload #10
    //   15875: iconst_0
    //   15876: aload #10
    //   15878: ldc_w '</privs>'
    //   15881: invokevirtual indexOf : (Ljava/lang/String;)I
    //   15884: ldc_w '</privs>'
    //   15887: invokevirtual length : ()I
    //   15890: iadd
    //   15891: invokevirtual substring : (II)Ljava/lang/String;
    //   15894: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   15897: invokespecial <init> : (Ljava/lang/String;)V
    //   15900: aload #9
    //   15902: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   15905: aload #10
    //   15907: aload #10
    //   15909: ldc_w '</privs>'
    //   15912: invokevirtual indexOf : (Ljava/lang/String;)I
    //   15915: ldc_w '</privs>'
    //   15918: invokevirtual length : ()I
    //   15921: iadd
    //   15922: invokevirtual substring : (I)Ljava/lang/String;
    //   15925: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   15928: invokevirtual toString : ()Ljava/lang/String;
    //   15931: astore #10
    //   15933: aload_0
    //   15934: aload #10
    //   15936: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   15939: ireturn
    //   15940: aload_0
    //   15941: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   15944: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   15947: ldc_w 'admin_group_name'
    //   15950: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   15953: astore #9
    //   15955: aload #9
    //   15957: ldc ''
    //   15959: invokevirtual equals : (Ljava/lang/Object;)Z
    //   15962: ifne -> 15970
    //   15965: goto_w -> 15978
    //   15970: aload_0
    //   15971: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   15974: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   15977: ireturn
    //   15978: aload #9
    //   15980: ldc_w 'admin_group_name'
    //   15983: invokevirtual equals : (Ljava/lang/Object;)Z
    //   15986: ifne -> 15994
    //   15989: goto_w -> 16008
    //   15994: aload_0
    //   15995: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   15998: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   16001: ldc 'user_name'
    //   16003: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   16006: astore #9
    //   16008: aload_1
    //   16009: ldc_w 'path'
    //   16012: ldc ''
    //   16014: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   16017: bipush #43
    //   16019: bipush #32
    //   16021: invokevirtual replace : (CC)Ljava/lang/String;
    //   16024: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   16027: astore #10
    //   16029: aload #10
    //   16031: ldc_w '///'
    //   16034: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   16037: ifne -> 16045
    //   16040: goto_w -> 16081
    //   16045: aload #10
    //   16047: ldc_w '////'
    //   16050: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   16053: ifeq -> 16061
    //   16056: goto_w -> 16081
    //   16061: new java/lang/StringBuffer
    //   16064: dup
    //   16065: ldc_w '/'
    //   16068: invokespecial <init> : (Ljava/lang/String;)V
    //   16071: aload #10
    //   16073: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   16076: invokevirtual toString : ()Ljava/lang/String;
    //   16079: astore #10
    //   16081: aload #10
    //   16083: ldc_w '/'
    //   16086: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   16089: ifeq -> 16097
    //   16092: goto_w -> 16117
    //   16097: new java/lang/StringBuffer
    //   16100: dup
    //   16101: ldc_w '/'
    //   16104: invokespecial <init> : (Ljava/lang/String;)V
    //   16107: aload #10
    //   16109: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   16112: invokevirtual toString : ()Ljava/lang/String;
    //   16115: astore #10
    //   16117: aload #10
    //   16119: ldc_w '/'
    //   16122: invokevirtual endsWith : (Ljava/lang/String;)Z
    //   16125: ifeq -> 16133
    //   16128: goto_w -> 16156
    //   16133: new java/lang/StringBuffer
    //   16136: dup
    //   16137: aload #10
    //   16139: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   16142: invokespecial <init> : (Ljava/lang/String;)V
    //   16145: ldc_w '/'
    //   16148: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   16151: invokevirtual toString : ()Ljava/lang/String;
    //   16154: astore #10
    //   16156: aload #10
    //   16158: invokestatic dots : (Ljava/lang/String;)Ljava/lang/String;
    //   16161: astore #10
    //   16163: aload_1
    //   16164: ldc_w 'command'
    //   16167: ldc_w 'getXMLListing'
    //   16170: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   16173: pop
    //   16174: aload_0
    //   16175: aload #9
    //   16177: aload_1
    //   16178: aload #10
    //   16180: iconst_1
    //   16181: getstatic crushftp/handlers/UserTools.ut : Lcrushftp/handlers/UserTools;
    //   16184: aload_0
    //   16185: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   16188: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   16191: ldc_w 'listen_ip_port'
    //   16194: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   16197: aload #9
    //   16199: invokevirtual getVFS : (Ljava/lang/String;Ljava/lang/String;)Lcrushftp/server/VFS;
    //   16202: invokevirtual getXmlListingResponse : (Ljava/lang/String;Ljava/util/Properties;Ljava/lang/String;ZLcrushftp/server/VFS;)Ljava/lang/String;
    //   16205: astore #11
    //   16207: aload_0
    //   16208: aload #11
    //   16210: aload_1
    //   16211: ldc_w 'format'
    //   16214: ldc ''
    //   16216: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   16219: ldc_w 'JSONOBJ'
    //   16222: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   16225: invokevirtual writeResponse : (Ljava/lang/String;Z)Z
    //   16228: ireturn
    //   16229: aload #5
    //   16231: ldc_w 'adminAction'
    //   16234: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   16237: ifne -> 16245
    //   16240: goto_w -> 16323
    //   16245: aload_1
    //   16246: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   16249: aload #4
    //   16251: aload_0
    //   16252: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   16255: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   16258: ldc 'user_ip'
    //   16260: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   16263: invokestatic adminAction : (Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
    //   16266: astore #8
    //   16268: aload #8
    //   16270: instanceof java/lang/String
    //   16273: ifne -> 16281
    //   16276: goto_w -> 16307
    //   16281: aload #8
    //   16283: invokevirtual toString : ()Ljava/lang/String;
    //   16286: ldc ''
    //   16288: invokevirtual equals : (Ljava/lang/Object;)Z
    //   16291: ifne -> 16299
    //   16294: goto_w -> 16307
    //   16299: aload_0
    //   16300: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   16303: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16306: ireturn
    //   16307: aload_0
    //   16308: aload #8
    //   16310: ldc_w 'result_item'
    //   16313: ldc_w 'OK'
    //   16316: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   16319: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16322: ireturn
    //   16323: aload #5
    //   16325: ldc_w 'checkForUpdate'
    //   16328: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   16331: ifne -> 16339
    //   16334: goto_w -> 16385
    //   16339: aload #5
    //   16341: aload #4
    //   16343: aload_0
    //   16344: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   16347: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   16350: ldc 'user_ip'
    //   16352: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   16355: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   16358: ifne -> 16366
    //   16361: goto_w -> 16377
    //   16366: aload_0
    //   16367: aload_1
    //   16368: aload #4
    //   16370: invokestatic checkForUpdate : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   16373: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16376: ireturn
    //   16377: aload_0
    //   16378: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   16381: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16384: ireturn
    //   16385: aload #5
    //   16387: ldc_w 'updateNow'
    //   16390: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   16393: ifne -> 16401
    //   16396: goto_w -> 16447
    //   16401: aload #5
    //   16403: aload #4
    //   16405: aload_0
    //   16406: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   16409: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   16412: ldc 'user_ip'
    //   16414: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   16417: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   16420: ifne -> 16428
    //   16423: goto_w -> 16439
    //   16428: aload_0
    //   16429: aload_1
    //   16430: aload #4
    //   16432: invokestatic updateNow : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   16435: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16438: ireturn
    //   16439: aload_0
    //   16440: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   16443: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16446: ireturn
    //   16447: aload #5
    //   16449: ldc_w 'updateWebNow'
    //   16452: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   16455: ifne -> 16463
    //   16458: goto_w -> 16509
    //   16463: aload #5
    //   16465: aload #4
    //   16467: aload_0
    //   16468: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   16471: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   16474: ldc 'user_ip'
    //   16476: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   16479: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   16482: ifne -> 16490
    //   16485: goto_w -> 16501
    //   16490: aload_0
    //   16491: aload_1
    //   16492: aload #4
    //   16494: invokestatic updateWebNow : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   16497: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16500: ireturn
    //   16501: aload_0
    //   16502: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   16505: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16508: ireturn
    //   16509: aload #5
    //   16511: ldc_w 'updateNowProgress'
    //   16514: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   16517: ifne -> 16525
    //   16520: goto_w -> 16571
    //   16525: aload #5
    //   16527: aload #4
    //   16529: aload_0
    //   16530: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   16533: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   16536: ldc 'user_ip'
    //   16538: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   16541: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   16544: ifne -> 16552
    //   16547: goto_w -> 16563
    //   16552: aload_0
    //   16553: aload_1
    //   16554: aload #4
    //   16556: invokestatic updateNowProgress : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   16559: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16562: ireturn
    //   16563: aload_0
    //   16564: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   16567: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16570: ireturn
    //   16571: aload #5
    //   16573: ldc_w 'cancelUpdateProgress'
    //   16576: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   16579: ifne -> 16587
    //   16582: goto_w -> 16633
    //   16587: aload #5
    //   16589: aload #4
    //   16591: aload_0
    //   16592: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   16595: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   16598: ldc 'user_ip'
    //   16600: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   16603: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   16606: ifne -> 16614
    //   16609: goto_w -> 16625
    //   16614: aload_0
    //   16615: aload_1
    //   16616: aload #4
    //   16618: invokestatic cancelUpdateProgress : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   16621: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16624: ireturn
    //   16625: aload_0
    //   16626: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   16629: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16632: ireturn
    //   16633: aload #5
    //   16635: ldc_w 'dumpStack'
    //   16638: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   16641: ifne -> 16649
    //   16644: goto_w -> 16695
    //   16649: aload #5
    //   16651: aload #4
    //   16653: aload_0
    //   16654: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   16657: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   16660: ldc 'user_ip'
    //   16662: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   16665: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   16668: ifne -> 16676
    //   16671: goto_w -> 16687
    //   16676: aload_0
    //   16677: aload_1
    //   16678: aload #4
    //   16680: invokestatic dumpStack : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   16683: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16686: ireturn
    //   16687: aload_0
    //   16688: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   16691: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16694: ireturn
    //   16695: aload #5
    //   16697: ldc_w 'dumpHeap'
    //   16700: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   16703: ifne -> 16711
    //   16706: goto_w -> 16757
    //   16711: aload #5
    //   16713: aload #4
    //   16715: aload_0
    //   16716: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   16719: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   16722: ldc 'user_ip'
    //   16724: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   16727: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   16730: ifne -> 16738
    //   16733: goto_w -> 16749
    //   16738: aload_0
    //   16739: aload_1
    //   16740: aload #4
    //   16742: invokestatic dumpHeap : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   16745: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16748: ireturn
    //   16749: aload_0
    //   16750: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   16753: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16756: ireturn
    //   16757: aload #5
    //   16759: ldc_w 'setMaxServerMemory'
    //   16762: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   16765: ifne -> 16773
    //   16768: goto_w -> 16825
    //   16773: aload #5
    //   16775: aload #4
    //   16777: aload_0
    //   16778: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   16781: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   16784: ldc 'user_ip'
    //   16786: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   16789: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   16792: ifne -> 16800
    //   16795: goto_w -> 16812
    //   16800: aload_1
    //   16801: aload #4
    //   16803: invokestatic setMaxServerMemory : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   16806: pop
    //   16807: goto_w -> 16820
    //   16812: aload_0
    //   16813: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   16816: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16819: ireturn
    //   16820: goto_w -> 53956
    //   16825: aload #5
    //   16827: ldc_w 'restartProcess'
    //   16830: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   16833: ifne -> 16841
    //   16836: goto_w -> 16893
    //   16841: aload #5
    //   16843: aload #4
    //   16845: aload_0
    //   16846: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   16849: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   16852: ldc 'user_ip'
    //   16854: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   16857: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   16860: ifne -> 16868
    //   16863: goto_w -> 16880
    //   16868: aload_1
    //   16869: aload #4
    //   16871: invokestatic restartProcess : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   16874: pop
    //   16875: goto_w -> 16888
    //   16880: aload_0
    //   16881: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   16884: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16887: ireturn
    //   16888: goto_w -> 53956
    //   16893: aload #5
    //   16895: ldc_w 'system.gc'
    //   16898: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   16901: ifne -> 16909
    //   16904: goto_w -> 16955
    //   16909: aload #5
    //   16911: aload #4
    //   16913: aload_0
    //   16914: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   16917: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   16920: ldc 'user_ip'
    //   16922: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   16925: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   16928: ifne -> 16936
    //   16931: goto_w -> 16947
    //   16936: invokestatic gc : ()V
    //   16939: aload_0
    //   16940: ldc_w '<commandResult><response>Success</response></commandResult>'
    //   16943: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16946: ireturn
    //   16947: aload_0
    //   16948: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   16951: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   16954: ireturn
    //   16955: aload #5
    //   16957: ldc_w 'pgpGenerateKeyPair'
    //   16960: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   16963: ifne -> 16971
    //   16966: goto_w -> 17017
    //   16971: aload #5
    //   16973: aload #4
    //   16975: aload_0
    //   16976: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   16979: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   16982: ldc 'user_ip'
    //   16984: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   16987: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   16990: ifne -> 16998
    //   16993: goto_w -> 17009
    //   16998: aload_0
    //   16999: aload_1
    //   17000: aload #4
    //   17002: invokestatic pgpGenerateKeyPair : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   17005: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   17008: ireturn
    //   17009: aload_0
    //   17010: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   17013: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   17016: ireturn
    //   17017: aload #5
    //   17019: ldc_w 'runReport'
    //   17022: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   17025: ifne -> 17033
    //   17028: goto_w -> 18002
    //   17033: aload_1
    //   17034: ldc_w 'report_token'
    //   17037: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   17040: ifeq -> 17048
    //   17043: goto_w -> 17075
    //   17048: aload #5
    //   17050: aload #4
    //   17052: aload_0
    //   17053: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   17056: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   17059: ldc 'user_ip'
    //   17061: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   17064: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   17067: ifne -> 17075
    //   17070: goto_w -> 17994
    //   17075: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   17078: ifne -> 17086
    //   17081: goto_w -> 17716
    //   17086: aload_1
    //   17087: ldc_w 'report_token'
    //   17090: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   17093: ifne -> 17101
    //   17096: goto_w -> 17716
    //   17101: aload_0
    //   17102: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   17105: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   17108: ldc_w 'root_dir'
    //   17111: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   17114: astore #8
    //   17116: aload_0
    //   17117: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   17120: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   17123: getfield uVFS : Lcrushftp/server/VFS;
    //   17126: aload #8
    //   17128: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   17131: astore #9
    //   17133: new java/util/Properties
    //   17136: dup
    //   17137: invokespecial <init> : ()V
    //   17140: astore #10
    //   17142: aload #10
    //   17144: ldc_w 'protocol'
    //   17147: ldc_w 'HTTP'
    //   17150: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   17153: pop
    //   17154: aconst_null
    //   17155: astore #11
    //   17157: iconst_0
    //   17158: istore #12
    //   17160: goto_w -> 17461
    //   17165: new com/crushftp/client/VRL
    //   17168: dup
    //   17169: aload #9
    //   17171: ldc_w 'url'
    //   17174: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   17177: invokestatic getBaseUrl : (Ljava/lang/String;)Ljava/lang/String;
    //   17180: invokespecial <init> : (Ljava/lang/String;)V
    //   17183: aload #10
    //   17185: invokestatic openConnection : (Lcom/crushftp/client/VRL;Ljava/util/Properties;)Lcom/crushftp/client/URLConnection;
    //   17188: astore #11
    //   17190: aload #11
    //   17192: ldc_w 'POST'
    //   17195: invokevirtual setRequestMethod : (Ljava/lang/String;)V
    //   17198: aload_0
    //   17199: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   17202: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   17205: getfield uVFS : Lcrushftp/server/VFS;
    //   17208: aload #9
    //   17210: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   17213: astore #13
    //   17215: aload #11
    //   17217: ldc_w 'Cookie'
    //   17220: new java/lang/StringBuffer
    //   17223: dup
    //   17224: ldc_w 'CrushAuth='
    //   17227: invokespecial <init> : (Ljava/lang/String;)V
    //   17230: aload #13
    //   17232: ldc_w 'crushAuth'
    //   17235: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   17238: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   17241: ldc_w ';'
    //   17244: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   17247: invokevirtual toString : ()Ljava/lang/String;
    //   17250: invokevirtual setRequestProperty : (Ljava/lang/String;Ljava/lang/String;)V
    //   17253: aload #11
    //   17255: iconst_0
    //   17256: invokevirtual setUseCaches : (Z)V
    //   17259: aload #11
    //   17261: iconst_1
    //   17262: invokevirtual setDoOutput : (Z)V
    //   17265: new java/lang/StringBuffer
    //   17268: dup
    //   17269: ldc_w 'command=runReport&c2f='
    //   17272: invokespecial <init> : (Ljava/lang/String;)V
    //   17275: aload #13
    //   17277: ldc_w 'crushAuth'
    //   17280: ldc ''
    //   17282: invokevirtual getConfig : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   17285: aload #13
    //   17287: ldc_w 'crushAuth'
    //   17290: ldc ''
    //   17292: invokevirtual getConfig : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   17295: invokevirtual length : ()I
    //   17298: iconst_4
    //   17299: isub
    //   17300: invokevirtual substring : (I)Ljava/lang/String;
    //   17303: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   17306: ldc_w '&reportName='
    //   17309: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   17312: aload_1
    //   17313: ldc_w 'reportName'
    //   17316: ldc ''
    //   17318: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   17321: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   17324: ldc_w '&report_token='
    //   17327: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   17330: aload_1
    //   17331: ldc_w 'report_token'
    //   17334: ldc ''
    //   17336: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   17339: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   17342: invokevirtual toString : ()Ljava/lang/String;
    //   17345: ldc_w 'UTF8'
    //   17348: invokevirtual getBytes : (Ljava/lang/String;)[B
    //   17351: astore #14
    //   17353: aload #11
    //   17355: aload #14
    //   17357: arraylength
    //   17358: i2l
    //   17359: invokevirtual setLength : (J)V
    //   17362: aload #11
    //   17364: invokevirtual getOutputStream : ()Ljava/io/OutputStream;
    //   17367: astore #15
    //   17369: aload #15
    //   17371: aload #14
    //   17373: invokevirtual write : ([B)V
    //   17376: aload #15
    //   17378: invokevirtual flush : ()V
    //   17381: aload #11
    //   17383: invokevirtual getResponseCode : ()I
    //   17386: sipush #302
    //   17389: if_icmpeq -> 17397
    //   17392: goto_w -> 17440
    //   17397: aload #13
    //   17399: ldc_w 'error'
    //   17402: ldc_w 'Logged out.'
    //   17405: invokevirtual setConfig : (Ljava/lang/String;Ljava/lang/Object;)V
    //   17408: aload #11
    //   17410: invokevirtual disconnect : ()V
    //   17413: aload_0
    //   17414: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   17417: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   17420: getfield uVFS : Lcrushftp/server/VFS;
    //   17423: aload #13
    //   17425: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   17428: pop
    //   17429: ldc2_w 100
    //   17432: invokestatic sleep : (J)V
    //   17435: goto_w -> 17461
    //   17440: aload_0
    //   17441: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   17444: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   17447: getfield uVFS : Lcrushftp/server/VFS;
    //   17450: aload #13
    //   17452: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   17455: pop
    //   17456: goto_w -> 17476
    //   17461: iload #12
    //   17463: iinc #12, 1
    //   17466: bipush #100
    //   17468: if_icmpge -> 17476
    //   17471: goto_w -> 17165
    //   17476: aload_0
    //   17477: new java/lang/StringBuffer
    //   17480: dup
    //   17481: ldc_w 'HTTP/1.1 '
    //   17484: invokespecial <init> : (Ljava/lang/String;)V
    //   17487: aload #11
    //   17489: invokevirtual getResponseCode : ()I
    //   17492: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   17495: ldc_w ' OK'
    //   17498: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   17501: invokevirtual toString : ()Ljava/lang/String;
    //   17504: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   17507: aload_0
    //   17508: new java/lang/StringBuffer
    //   17511: dup
    //   17512: ldc_w 'Content-Type: '
    //   17515: invokespecial <init> : (Ljava/lang/String;)V
    //   17518: aload #11
    //   17520: ldc_w 'CONTENT-TYPE'
    //   17523: invokevirtual getHeaderField : (Ljava/lang/String;)Ljava/lang/String;
    //   17526: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   17529: invokevirtual toString : ()Ljava/lang/String;
    //   17532: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   17535: aload_0
    //   17536: new java/lang/StringBuffer
    //   17539: dup
    //   17540: ldc_w 'Content-Length: '
    //   17543: invokespecial <init> : (Ljava/lang/String;)V
    //   17546: aload #11
    //   17548: ldc_w 'CONTENT-LENGTH'
    //   17551: invokevirtual getHeaderField : (Ljava/lang/String;)Ljava/lang/String;
    //   17554: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   17557: invokevirtual toString : ()Ljava/lang/String;
    //   17560: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   17563: aload_0
    //   17564: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   17567: invokevirtual write_standard_headers : ()V
    //   17570: aload_0
    //   17571: ldc_w 'X-UA-Compatible: chrome=1'
    //   17574: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   17577: aload_0
    //   17578: ldc ''
    //   17580: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   17583: aload #11
    //   17585: invokevirtual getInputStream : ()Ljava/io/InputStream;
    //   17588: astore #13
    //   17590: ldc_w 32768
    //   17593: newarray byte
    //   17595: astore #14
    //   17597: aload #11
    //   17599: ldc_w 'CONTENT-LENGTH'
    //   17602: invokevirtual getHeaderField : (Ljava/lang/String;)Ljava/lang/String;
    //   17605: invokevirtual trim : ()Ljava/lang/String;
    //   17608: invokestatic parseInt : (Ljava/lang/String;)I
    //   17611: istore #15
    //   17613: iconst_0
    //   17614: istore #16
    //   17616: goto_w -> 17681
    //   17621: aload #14
    //   17623: arraylength
    //   17624: iload #15
    //   17626: if_icmpgt -> 17634
    //   17629: goto_w -> 17640
    //   17634: iload #15
    //   17636: newarray byte
    //   17638: astore #14
    //   17640: aload #13
    //   17642: aload #14
    //   17644: invokevirtual read : ([B)I
    //   17647: istore #16
    //   17649: iload #16
    //   17651: ifgt -> 17659
    //   17654: goto_w -> 17681
    //   17659: iload #15
    //   17661: iload #16
    //   17663: isub
    //   17664: istore #15
    //   17666: aload_0
    //   17667: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   17670: getfield original_os : Ljava/io/OutputStream;
    //   17673: aload #14
    //   17675: iconst_0
    //   17676: iload #16
    //   17678: invokevirtual write : ([BII)V
    //   17681: iload #15
    //   17683: ifle -> 17691
    //   17686: goto_w -> 17621
    //   17691: aload_0
    //   17692: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   17695: getfield original_os : Ljava/io/OutputStream;
    //   17698: invokevirtual flush : ()V
    //   17701: aload #13
    //   17703: invokevirtual close : ()V
    //   17706: aload #11
    //   17708: invokevirtual disconnect : ()V
    //   17711: goto_w -> 17992
    //   17716: aload_1
    //   17717: aload #4
    //   17719: invokestatic runReport : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   17722: astore #8
    //   17724: aload_0
    //   17725: ldc_w 'HTTP/1.1 200 OK'
    //   17728: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   17731: aload_0
    //   17732: ldc_w 'Cache-Control: no-store'
    //   17735: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   17738: aload_0
    //   17739: new java/lang/StringBuffer
    //   17742: dup
    //   17743: ldc_w 'Content-Type: text/'
    //   17746: invokespecial <init> : (Ljava/lang/String;)V
    //   17749: aload_1
    //   17750: ldc_w 'export'
    //   17753: ldc 'false'
    //   17755: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   17758: ldc 'true'
    //   17760: invokevirtual equals : (Ljava/lang/Object;)Z
    //   17763: ifne -> 17771
    //   17766: goto_w -> 17779
    //   17771: ldc_w 'plain'
    //   17774: goto_w -> 17782
    //   17779: ldc_w 'html'
    //   17782: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   17785: ldc_w ';charset=utf-8'
    //   17788: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   17791: invokevirtual toString : ()Ljava/lang/String;
    //   17794: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   17797: aload_0
    //   17798: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   17801: invokevirtual write_standard_headers : ()V
    //   17804: aload #8
    //   17806: ldc_w 'UTF8'
    //   17809: invokevirtual getBytes : (Ljava/lang/String;)[B
    //   17812: astore #9
    //   17814: aload_0
    //   17815: new java/lang/StringBuffer
    //   17818: dup
    //   17819: ldc_w 'Content-Length: '
    //   17822: invokespecial <init> : (Ljava/lang/String;)V
    //   17825: aload #9
    //   17827: arraylength
    //   17828: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   17831: invokevirtual toString : ()Ljava/lang/String;
    //   17834: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   17837: new java/lang/StringBuffer
    //   17840: dup
    //   17841: aload_1
    //   17842: ldc_w 'reportName'
    //   17845: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   17848: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   17851: invokespecial <init> : (Ljava/lang/String;)V
    //   17854: aload_1
    //   17855: ldc_w 'export'
    //   17858: ldc 'false'
    //   17860: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   17863: ldc 'true'
    //   17865: invokevirtual equals : (Ljava/lang/Object;)Z
    //   17868: ifne -> 17876
    //   17871: goto_w -> 17884
    //   17876: ldc_w '.csv'
    //   17879: goto_w -> 17887
    //   17884: ldc_w '.html'
    //   17887: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   17890: invokevirtual toString : ()Ljava/lang/String;
    //   17893: astore #10
    //   17895: aload_1
    //   17896: ldc_w 'saveReport'
    //   17899: ldc ''
    //   17901: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   17904: ldc 'true'
    //   17906: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   17909: ifne -> 17917
    //   17912: goto_w -> 17957
    //   17917: aload_0
    //   17918: new java/lang/StringBuffer
    //   17921: dup
    //   17922: ldc_w 'Content-Disposition: attachment; filename="'
    //   17925: invokespecial <init> : (Ljava/lang/String;)V
    //   17928: aload #10
    //   17930: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   17933: ldc_w '\\r'
    //   17936: ldc_w '_'
    //   17939: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   17942: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   17945: ldc_w '"'
    //   17948: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   17951: invokevirtual toString : ()Ljava/lang/String;
    //   17954: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   17957: aload_0
    //   17958: ldc_w 'X-UA-Compatible: chrome=1'
    //   17961: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   17964: aload_0
    //   17965: ldc ''
    //   17967: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   17970: aload_0
    //   17971: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   17974: getfield original_os : Ljava/io/OutputStream;
    //   17977: aload #9
    //   17979: invokevirtual write : ([B)V
    //   17982: aload_0
    //   17983: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   17986: getfield original_os : Ljava/io/OutputStream;
    //   17989: invokevirtual flush : ()V
    //   17992: iconst_1
    //   17993: ireturn
    //   17994: aload_0
    //   17995: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   17998: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18001: ireturn
    //   18002: aload #5
    //   18004: ldc_w 'testReportSchedule'
    //   18007: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   18010: ifne -> 18018
    //   18013: goto_w -> 18064
    //   18018: aload #5
    //   18020: aload #4
    //   18022: aload_0
    //   18023: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   18026: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   18029: ldc 'user_ip'
    //   18031: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   18034: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   18037: ifne -> 18045
    //   18040: goto_w -> 18056
    //   18045: aload_0
    //   18046: aload_1
    //   18047: aload #4
    //   18049: invokestatic testReportSchedule : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   18052: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18055: ireturn
    //   18056: aload_0
    //   18057: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   18060: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18063: ireturn
    //   18064: aload #5
    //   18066: ldc_w 'testPGP'
    //   18069: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   18072: ifne -> 18080
    //   18075: goto_w -> 18126
    //   18080: aload #5
    //   18082: aload #4
    //   18084: aload_0
    //   18085: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   18088: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   18091: ldc 'user_ip'
    //   18093: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   18096: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   18099: ifne -> 18107
    //   18102: goto_w -> 18118
    //   18107: aload_0
    //   18108: aload_1
    //   18109: aload #4
    //   18111: invokestatic testPGP : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   18114: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18117: ireturn
    //   18118: aload_0
    //   18119: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   18122: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18125: ireturn
    //   18126: aload #5
    //   18128: ldc_w 'testJobSchedule'
    //   18131: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   18134: ifne -> 18142
    //   18137: goto_w -> 18193
    //   18142: aload_1
    //   18143: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   18146: pop
    //   18147: aload #5
    //   18149: aload #4
    //   18151: aload_0
    //   18152: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   18155: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   18158: ldc 'user_ip'
    //   18160: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   18163: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   18166: ifne -> 18174
    //   18169: goto_w -> 18185
    //   18174: aload_0
    //   18175: aload_1
    //   18176: aload #4
    //   18178: invokestatic testJobSchedule : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   18181: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18184: ireturn
    //   18185: aload_0
    //   18186: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   18189: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18192: ireturn
    //   18193: aload #5
    //   18195: ldc_w 'testSMTP'
    //   18198: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   18201: ifne -> 18209
    //   18204: goto_w -> 18258
    //   18209: aload #5
    //   18211: aload #4
    //   18213: aload_0
    //   18214: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   18217: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   18220: ldc 'user_ip'
    //   18222: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   18225: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   18228: ifne -> 18236
    //   18231: goto_w -> 18250
    //   18236: aload_0
    //   18237: aload_1
    //   18238: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   18241: aload #4
    //   18243: invokestatic testSMTP : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   18246: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18249: ireturn
    //   18250: aload_0
    //   18251: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   18254: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18257: ireturn
    //   18258: aload #5
    //   18260: ldc_w 'importUsers'
    //   18263: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   18266: ifne -> 18274
    //   18269: goto_w -> 18323
    //   18274: aload #5
    //   18276: aload #4
    //   18278: aload_0
    //   18279: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   18282: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   18285: ldc 'user_ip'
    //   18287: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   18290: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   18293: ifne -> 18301
    //   18296: goto_w -> 18315
    //   18301: aload_0
    //   18302: aload_1
    //   18303: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   18306: aload #4
    //   18308: invokestatic importUsers : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   18311: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18314: ireturn
    //   18315: aload_0
    //   18316: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   18319: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18322: ireturn
    //   18323: aload #5
    //   18325: ldc_w 'sendPassEmail'
    //   18328: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   18331: ifne -> 18339
    //   18334: goto_w -> 18557
    //   18339: aload #5
    //   18341: aload #4
    //   18343: aload_0
    //   18344: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   18347: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   18350: ldc 'user_ip'
    //   18352: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   18355: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   18358: ifne -> 18366
    //   18361: goto_w -> 18549
    //   18366: aload_1
    //   18367: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   18370: pop
    //   18371: aload #4
    //   18373: ldc_w '(CONNECT)'
    //   18376: invokevirtual indexOf : (Ljava/lang/String;)I
    //   18379: iflt -> 18387
    //   18382: goto_w -> 18411
    //   18387: aload_1
    //   18388: ldc_w 'serverGroup'
    //   18391: aload_0
    //   18392: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   18395: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   18398: getfield server_item : Ljava/util/Properties;
    //   18401: ldc_w 'linkedServer'
    //   18404: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   18407: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   18410: pop
    //   18411: aload_1
    //   18412: ldc 'user_name'
    //   18414: ldc ''
    //   18416: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   18419: astore #8
    //   18421: aload_0
    //   18422: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   18425: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   18428: ldc_w 'user_admin_info'
    //   18431: invokevirtual get : (Ljava/lang/String;)Ljava/lang/Object;
    //   18434: checkcast java/util/Properties
    //   18437: astore #9
    //   18439: aload #4
    //   18441: ldc_w '(CONNECT)'
    //   18444: invokevirtual indexOf : (Ljava/lang/String;)I
    //   18447: iflt -> 18455
    //   18450: goto_w -> 18531
    //   18455: aload #4
    //   18457: ldc_w '(USER_EDIT)'
    //   18460: invokevirtual indexOf : (Ljava/lang/String;)I
    //   18463: iflt -> 18471
    //   18466: goto_w -> 18531
    //   18471: aload #9
    //   18473: ldc_w 'list'
    //   18476: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   18479: checkcast java/util/Vector
    //   18482: astore #10
    //   18484: aload #10
    //   18486: aload #8
    //   18488: invokevirtual indexOf : (Ljava/lang/Object;)I
    //   18491: iflt -> 18499
    //   18494: goto_w -> 18531
    //   18499: new java/lang/Exception
    //   18502: dup
    //   18503: new java/lang/StringBuffer
    //   18506: dup
    //   18507: ldc_w 'Username '
    //   18510: invokespecial <init> : (Ljava/lang/String;)V
    //   18513: aload #8
    //   18515: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   18518: ldc_w ' not found.'
    //   18521: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   18524: invokevirtual toString : ()Ljava/lang/String;
    //   18527: invokespecial <init> : (Ljava/lang/String;)V
    //   18530: athrow
    //   18531: aload_0
    //   18532: aload_1
    //   18533: aload_0
    //   18534: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   18537: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   18540: aload #4
    //   18542: invokestatic sendPassEmail : (Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;Ljava/lang/String;)Ljava/lang/String;
    //   18545: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18548: ireturn
    //   18549: aload_0
    //   18550: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   18553: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18556: ireturn
    //   18557: aload #5
    //   18559: ldc_w 'sendEventEmail'
    //   18562: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   18565: ifne -> 18573
    //   18568: goto_w -> 18627
    //   18573: aload_1
    //   18574: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   18577: pop
    //   18578: aload #5
    //   18580: aload #4
    //   18582: aload_0
    //   18583: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   18586: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   18589: ldc 'user_ip'
    //   18591: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   18594: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   18597: ifne -> 18605
    //   18600: goto_w -> 18619
    //   18605: aload_0
    //   18606: aload_1
    //   18607: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   18610: aload #4
    //   18612: invokestatic sendEventEmail : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   18615: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18618: ireturn
    //   18619: aload_0
    //   18620: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   18623: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18626: ireturn
    //   18627: aload #5
    //   18629: ldc_w 'getTempAccounts'
    //   18632: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   18635: ifne -> 18643
    //   18638: goto_w -> 18692
    //   18643: aload #5
    //   18645: aload #4
    //   18647: aload_0
    //   18648: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   18651: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   18654: ldc 'user_ip'
    //   18656: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   18659: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   18662: ifne -> 18670
    //   18665: goto_w -> 18684
    //   18670: aload_0
    //   18671: aload_1
    //   18672: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   18675: aload #4
    //   18677: invokestatic getTempAccounts : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   18680: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18683: ireturn
    //   18684: aload_0
    //   18685: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   18688: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18691: ireturn
    //   18692: aload #5
    //   18694: ldc_w 'addTempAccount'
    //   18697: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   18700: ifne -> 18708
    //   18703: goto_w -> 18754
    //   18708: aload #5
    //   18710: aload #4
    //   18712: aload_0
    //   18713: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   18716: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   18719: ldc 'user_ip'
    //   18721: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   18724: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   18727: ifne -> 18735
    //   18730: goto_w -> 18746
    //   18735: aload_0
    //   18736: aload_1
    //   18737: aload #4
    //   18739: invokestatic addTempAccount : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   18742: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18745: ireturn
    //   18746: aload_0
    //   18747: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   18750: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18753: ireturn
    //   18754: aload #5
    //   18756: ldc_w 'removeTempAccount'
    //   18759: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   18762: ifne -> 18770
    //   18765: goto_w -> 18819
    //   18770: aload #5
    //   18772: aload #4
    //   18774: aload_0
    //   18775: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   18778: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   18781: ldc 'user_ip'
    //   18783: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   18786: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   18789: ifne -> 18797
    //   18792: goto_w -> 18811
    //   18797: aload_0
    //   18798: aload_1
    //   18799: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   18802: aload #4
    //   18804: invokestatic removeTempAccount : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   18807: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18810: ireturn
    //   18811: aload_0
    //   18812: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   18815: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18818: ireturn
    //   18819: aload #5
    //   18821: ldc_w 'getTempAccountFiles'
    //   18824: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   18827: ifne -> 18835
    //   18830: goto_w -> 18884
    //   18835: aload #5
    //   18837: aload #4
    //   18839: aload_0
    //   18840: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   18843: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   18846: ldc 'user_ip'
    //   18848: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   18851: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   18854: ifne -> 18862
    //   18857: goto_w -> 18876
    //   18862: aload_0
    //   18863: aload_1
    //   18864: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   18867: aload #4
    //   18869: invokestatic getTempAccountFiles : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   18872: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18875: ireturn
    //   18876: aload_0
    //   18877: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   18880: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18883: ireturn
    //   18884: aload #5
    //   18886: ldc_w 'removeTempAccountFile'
    //   18889: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   18892: ifne -> 18900
    //   18895: goto_w -> 18949
    //   18900: aload #5
    //   18902: aload #4
    //   18904: aload_0
    //   18905: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   18908: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   18911: ldc 'user_ip'
    //   18913: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   18916: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   18919: ifne -> 18927
    //   18922: goto_w -> 18941
    //   18927: aload_0
    //   18928: aload_1
    //   18929: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   18932: aload #4
    //   18934: invokestatic removeTempAccountFile : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   18937: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18940: ireturn
    //   18941: aload_0
    //   18942: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   18945: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   18948: ireturn
    //   18949: aload #5
    //   18951: ldc_w 'addTempAccountFile'
    //   18954: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   18957: ifne -> 18965
    //   18960: goto_w -> 19014
    //   18965: aload #5
    //   18967: aload #4
    //   18969: aload_0
    //   18970: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   18973: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   18976: ldc 'user_ip'
    //   18978: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   18981: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   18984: ifne -> 18992
    //   18987: goto_w -> 19006
    //   18992: aload_0
    //   18993: aload_1
    //   18994: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   18997: aload #4
    //   18999: invokestatic addTempAccountFile : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   19002: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19005: ireturn
    //   19006: aload_0
    //   19007: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   19010: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19013: ireturn
    //   19014: aload #5
    //   19016: ldc_w 'deleteReplication'
    //   19019: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   19022: ifne -> 19030
    //   19025: goto_w -> 19079
    //   19030: aload #5
    //   19032: aload #4
    //   19034: aload_0
    //   19035: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   19038: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   19041: ldc 'user_ip'
    //   19043: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   19046: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   19049: ifne -> 19057
    //   19052: goto_w -> 19071
    //   19057: aload_0
    //   19058: aload_1
    //   19059: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   19062: aload #4
    //   19064: invokestatic deleteReplication : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   19067: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19070: ireturn
    //   19071: aload_0
    //   19072: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   19075: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19078: ireturn
    //   19079: aload #5
    //   19081: ldc_w 'migrateUsersVFS'
    //   19084: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   19087: ifne -> 19095
    //   19090: goto_w -> 19144
    //   19095: aload #5
    //   19097: aload #4
    //   19099: aload_0
    //   19100: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   19103: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   19106: ldc 'user_ip'
    //   19108: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   19111: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   19114: ifne -> 19122
    //   19117: goto_w -> 19136
    //   19122: aload_0
    //   19123: aload_1
    //   19124: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   19127: aload #4
    //   19129: invokestatic migrateUsersVFS : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   19132: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19135: ireturn
    //   19136: aload_0
    //   19137: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   19140: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19143: ireturn
    //   19144: aload #5
    //   19146: ldc_w 'convertUsers'
    //   19149: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   19152: ifne -> 19160
    //   19155: goto_w -> 19209
    //   19160: aload #5
    //   19162: aload #4
    //   19164: aload_0
    //   19165: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   19168: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   19171: ldc 'user_ip'
    //   19173: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   19176: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   19179: ifne -> 19187
    //   19182: goto_w -> 19201
    //   19187: aload_0
    //   19188: aload_1
    //   19189: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   19192: aload #4
    //   19194: invokestatic convertUsers : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   19197: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19200: ireturn
    //   19201: aload_0
    //   19202: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   19205: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19208: ireturn
    //   19209: aload #5
    //   19211: ldc_w 'generateSSL'
    //   19214: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   19217: ifne -> 19225
    //   19220: goto_w -> 19274
    //   19225: aload #5
    //   19227: aload #4
    //   19229: aload_0
    //   19230: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   19233: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   19236: ldc 'user_ip'
    //   19238: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   19241: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   19244: ifne -> 19252
    //   19247: goto_w -> 19266
    //   19252: aload_0
    //   19253: aload_1
    //   19254: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   19257: aload #4
    //   19259: invokestatic generateSSL : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   19262: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19265: ireturn
    //   19266: aload_0
    //   19267: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   19270: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19273: ireturn
    //   19274: aload #5
    //   19276: ldc_w 'generateCSR'
    //   19279: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   19282: ifne -> 19290
    //   19285: goto_w -> 19339
    //   19290: aload #5
    //   19292: aload #4
    //   19294: aload_0
    //   19295: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   19298: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   19301: ldc 'user_ip'
    //   19303: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   19306: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   19309: ifne -> 19317
    //   19312: goto_w -> 19331
    //   19317: aload_0
    //   19318: aload_1
    //   19319: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   19322: aload #4
    //   19324: invokestatic generateCSR : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   19327: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19330: ireturn
    //   19331: aload_0
    //   19332: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   19335: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19338: ireturn
    //   19339: aload #5
    //   19341: ldc_w 'importReply'
    //   19344: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   19347: ifne -> 19355
    //   19350: goto_w -> 19404
    //   19355: aload #5
    //   19357: aload #4
    //   19359: aload_0
    //   19360: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   19363: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   19366: ldc 'user_ip'
    //   19368: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   19371: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   19374: ifne -> 19382
    //   19377: goto_w -> 19396
    //   19382: aload_0
    //   19383: aload_1
    //   19384: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   19387: aload #4
    //   19389: invokestatic importReply : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   19392: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19395: ireturn
    //   19396: aload_0
    //   19397: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   19400: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19403: ireturn
    //   19404: aload #5
    //   19406: ldc_w 'testKeystore'
    //   19409: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   19412: ifne -> 19420
    //   19415: goto_w -> 19469
    //   19420: aload #5
    //   19422: aload #4
    //   19424: aload_0
    //   19425: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   19428: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   19431: ldc 'user_ip'
    //   19433: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   19436: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   19439: ifne -> 19447
    //   19442: goto_w -> 19461
    //   19447: aload_0
    //   19448: aload_1
    //   19449: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   19452: aload #4
    //   19454: invokestatic testKeystore : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   19457: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19460: ireturn
    //   19461: aload_0
    //   19462: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   19465: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19468: ireturn
    //   19469: aload #5
    //   19471: ldc_w 'listSSL'
    //   19474: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   19477: ifne -> 19485
    //   19480: goto_w -> 19534
    //   19485: aload #5
    //   19487: aload #4
    //   19489: aload_0
    //   19490: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   19493: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   19496: ldc 'user_ip'
    //   19498: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   19501: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   19504: ifne -> 19512
    //   19507: goto_w -> 19526
    //   19512: aload_0
    //   19513: aload_1
    //   19514: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   19517: aload #4
    //   19519: invokestatic listSSL : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   19522: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19525: ireturn
    //   19526: aload_0
    //   19527: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   19530: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19533: ireturn
    //   19534: aload #5
    //   19536: ldc_w 'deleteSSL'
    //   19539: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   19542: ifne -> 19550
    //   19545: goto_w -> 19599
    //   19550: aload #5
    //   19552: aload #4
    //   19554: aload_0
    //   19555: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   19558: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   19561: ldc 'user_ip'
    //   19563: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   19566: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   19569: ifne -> 19577
    //   19572: goto_w -> 19591
    //   19577: aload_0
    //   19578: aload_1
    //   19579: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   19582: aload #4
    //   19584: invokestatic deleteSSL : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   19587: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19590: ireturn
    //   19591: aload_0
    //   19592: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   19595: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19598: ireturn
    //   19599: aload #5
    //   19601: ldc_w 'renameSSL'
    //   19604: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   19607: ifne -> 19615
    //   19610: goto_w -> 19664
    //   19615: aload #5
    //   19617: aload #4
    //   19619: aload_0
    //   19620: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   19623: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   19626: ldc 'user_ip'
    //   19628: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   19631: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   19634: ifne -> 19642
    //   19637: goto_w -> 19656
    //   19642: aload_0
    //   19643: aload_1
    //   19644: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   19647: aload #4
    //   19649: invokestatic renameSSL : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   19652: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19655: ireturn
    //   19656: aload_0
    //   19657: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   19660: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19663: ireturn
    //   19664: aload #5
    //   19666: ldc_w 'exportSSL'
    //   19669: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   19672: ifne -> 19680
    //   19675: goto_w -> 19729
    //   19680: aload #5
    //   19682: aload #4
    //   19684: aload_0
    //   19685: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   19688: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   19691: ldc 'user_ip'
    //   19693: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   19696: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   19699: ifne -> 19707
    //   19702: goto_w -> 19721
    //   19707: aload_0
    //   19708: aload_1
    //   19709: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   19712: aload #4
    //   19714: invokestatic exportSSL : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   19717: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19720: ireturn
    //   19721: aload_0
    //   19722: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   19725: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19728: ireturn
    //   19729: aload #5
    //   19731: ldc_w 'addPrivateSSL'
    //   19734: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   19737: ifne -> 19745
    //   19740: goto_w -> 19794
    //   19745: aload #5
    //   19747: aload #4
    //   19749: aload_0
    //   19750: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   19753: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   19756: ldc 'user_ip'
    //   19758: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   19761: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   19764: ifne -> 19772
    //   19767: goto_w -> 19786
    //   19772: aload_0
    //   19773: aload_1
    //   19774: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   19777: aload #4
    //   19779: invokestatic addPrivateSSL : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   19782: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19785: ireturn
    //   19786: aload_0
    //   19787: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   19790: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19793: ireturn
    //   19794: aload #5
    //   19796: ldc_w 'addPublicSSL'
    //   19799: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   19802: ifne -> 19810
    //   19805: goto_w -> 19859
    //   19810: aload #5
    //   19812: aload #4
    //   19814: aload_0
    //   19815: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   19818: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   19821: ldc 'user_ip'
    //   19823: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   19826: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   19829: ifne -> 19837
    //   19832: goto_w -> 19851
    //   19837: aload_0
    //   19838: aload_1
    //   19839: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   19842: aload #4
    //   19844: invokestatic addPublicSSL : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   19847: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19850: ireturn
    //   19851: aload_0
    //   19852: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   19855: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19858: ireturn
    //   19859: aload #5
    //   19861: ldc_w 'telnetSocket'
    //   19864: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   19867: ifne -> 19875
    //   19870: goto_w -> 19924
    //   19875: aload #5
    //   19877: aload #4
    //   19879: aload_0
    //   19880: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   19883: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   19886: ldc 'user_ip'
    //   19888: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   19891: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   19894: ifne -> 19902
    //   19897: goto_w -> 19916
    //   19902: aload_0
    //   19903: aload_1
    //   19904: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   19907: aload #4
    //   19909: invokestatic telnetSocket : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   19912: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19915: ireturn
    //   19916: aload_0
    //   19917: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   19920: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19923: ireturn
    //   19924: aload #5
    //   19926: ldc_w 'testDB'
    //   19929: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   19932: ifne -> 19940
    //   19935: goto_w -> 19989
    //   19940: aload #5
    //   19942: aload #4
    //   19944: aload_0
    //   19945: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   19948: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   19951: ldc 'user_ip'
    //   19953: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   19956: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   19959: ifne -> 19967
    //   19962: goto_w -> 19981
    //   19967: aload_0
    //   19968: aload_1
    //   19969: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   19972: aload #4
    //   19974: invokestatic testDB : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   19977: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19980: ireturn
    //   19981: aload_0
    //   19982: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   19985: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   19988: ireturn
    //   19989: aload #5
    //   19991: ldc_w 'testQuery'
    //   19994: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   19997: ifne -> 20005
    //   20000: goto_w -> 20054
    //   20005: aload #5
    //   20007: aload #4
    //   20009: aload_0
    //   20010: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   20013: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   20016: ldc 'user_ip'
    //   20018: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   20021: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   20024: ifne -> 20032
    //   20027: goto_w -> 20046
    //   20032: aload_0
    //   20033: aload_1
    //   20034: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   20037: aload #4
    //   20039: invokestatic testQuery : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   20042: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   20045: ireturn
    //   20046: aload_0
    //   20047: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   20050: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   20053: ireturn
    //   20054: aload #5
    //   20056: ldc_w 'pluginMethodCall'
    //   20059: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   20062: ifne -> 20070
    //   20065: goto_w -> 20119
    //   20070: aload #5
    //   20072: aload #4
    //   20074: aload_0
    //   20075: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   20078: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   20081: ldc 'user_ip'
    //   20083: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   20086: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   20089: ifne -> 20097
    //   20092: goto_w -> 20111
    //   20097: aload_0
    //   20098: aload_1
    //   20099: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   20102: aload #4
    //   20104: invokestatic pluginMethodCall : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   20107: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   20110: ireturn
    //   20111: aload_0
    //   20112: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   20115: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   20118: ireturn
    //   20119: aload #5
    //   20121: ldc_w 'generateToken'
    //   20124: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   20127: ifne -> 20135
    //   20130: goto_w -> 20528
    //   20135: aload #4
    //   20137: ldc_w '(USER_ADMIN)'
    //   20140: invokevirtual indexOf : (Ljava/lang/String;)I
    //   20143: ifge -> 20151
    //   20146: goto_w -> 20515
    //   20151: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   20154: ifne -> 20162
    //   20157: goto_w -> 20395
    //   20162: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   20165: ldc_w 'crushftp.dmz.queue'
    //   20168: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   20171: checkcast java/util/Vector
    //   20174: astore #8
    //   20176: new java/util/Properties
    //   20179: dup
    //   20180: invokespecial <init> : ()V
    //   20183: astore #9
    //   20185: aload #9
    //   20187: ldc_w 'type'
    //   20190: ldc_w 'GET:SINGLETON'
    //   20193: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   20196: pop
    //   20197: aload #9
    //   20199: ldc_w 'id'
    //   20202: invokestatic makeBoundary : ()Ljava/lang/String;
    //   20205: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   20208: pop
    //   20209: aload #9
    //   20211: ldc_w 'need_response'
    //   20214: ldc 'true'
    //   20216: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   20219: pop
    //   20220: aload #8
    //   20222: aload #9
    //   20224: invokevirtual addElement : (Ljava/lang/Object;)V
    //   20227: aload #9
    //   20229: bipush #60
    //   20231: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   20234: astore #9
    //   20236: ldc ''
    //   20238: astore #10
    //   20240: aload #9
    //   20242: ifnonnull -> 20250
    //   20245: goto_w -> 20273
    //   20250: new java/lang/StringBuffer
    //   20253: dup
    //   20254: invokespecial <init> : ()V
    //   20257: aload #9
    //   20259: ldc_w 'singleton_id'
    //   20262: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   20265: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   20268: invokevirtual toString : ()Ljava/lang/String;
    //   20271: astore #10
    //   20273: new java/util/Properties
    //   20276: dup
    //   20277: invokespecial <init> : ()V
    //   20280: astore #9
    //   20282: aload #9
    //   20284: ldc_w 'type'
    //   20287: ldc_w 'GET:GENERATE_TOKEN'
    //   20290: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   20293: pop
    //   20294: aload #9
    //   20296: ldc_w 'id'
    //   20299: invokestatic makeBoundary : ()Ljava/lang/String;
    //   20302: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   20305: pop
    //   20306: aload #9
    //   20308: ldc_w 'request'
    //   20311: aload_1
    //   20312: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   20315: pop
    //   20316: aload #9
    //   20318: ldc_w 'site'
    //   20321: aload #4
    //   20323: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   20326: pop
    //   20327: aload #9
    //   20329: ldc_w 'need_response'
    //   20332: ldc 'true'
    //   20334: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   20337: pop
    //   20338: aload #9
    //   20340: ldc_w 'singleton_id'
    //   20343: aload #10
    //   20345: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   20348: pop
    //   20349: aload #8
    //   20351: aload #9
    //   20353: invokevirtual addElement : (Ljava/lang/Object;)V
    //   20356: aload #9
    //   20358: bipush #60
    //   20360: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   20363: astore #9
    //   20365: aload #9
    //   20367: ifnonnull -> 20375
    //   20370: goto_w -> 20390
    //   20375: aload_0
    //   20376: aload #9
    //   20378: ldc_w 'responseText'
    //   20381: ldc ''
    //   20383: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   20386: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   20389: pop
    //   20390: goto_w -> 20510
    //   20395: aload_1
    //   20396: ldc_w 'method'
    //   20399: ldc_w 'generateToken'
    //   20402: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   20405: pop
    //   20406: aload_1
    //   20407: ldc_w 'pluginName'
    //   20410: ldc_w 'CrushSSO'
    //   20413: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   20416: pop
    //   20417: aload_1
    //   20418: ldc_w 'pluginSubItem'
    //   20421: aload_1
    //   20422: ldc_w 'pluginSubItem'
    //   20425: ldc ''
    //   20427: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   20430: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   20433: pop
    //   20434: aload_1
    //   20435: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   20438: aload #4
    //   20440: invokestatic pluginMethodCall : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   20443: astore #8
    //   20445: getstatic crushftp/handlers/SharedSessionReplicated.send_queues : Ljava/util/Properties;
    //   20448: invokevirtual size : ()I
    //   20451: ifgt -> 20459
    //   20454: goto_w -> 20503
    //   20459: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   20462: getfield server_info : Ljava/util/Properties;
    //   20465: ldc_w 'crushSSO_tokens'
    //   20468: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   20471: ifnonnull -> 20479
    //   20474: goto_w -> 20503
    //   20479: invokestatic makeBoundary : ()Ljava/lang/String;
    //   20482: ldc_w 'SYNC_CRUSHSSO_TOKENS'
    //   20485: ldc_w 'tokens'
    //   20488: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   20491: getfield server_info : Ljava/util/Properties;
    //   20494: ldc_w 'crushSSO_tokens'
    //   20497: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   20500: invokestatic send : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
    //   20503: aload_0
    //   20504: aload #8
    //   20506: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   20509: ireturn
    //   20510: goto_w -> 20523
    //   20515: aload_0
    //   20516: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   20519: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   20522: ireturn
    //   20523: goto_w -> 53956
    //   20528: aload #5
    //   20530: ldc_w 'convertXMLSQLUsers'
    //   20533: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   20536: ifne -> 20544
    //   20539: goto_w -> 20593
    //   20544: aload #5
    //   20546: aload #4
    //   20548: aload_0
    //   20549: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   20552: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   20555: ldc 'user_ip'
    //   20557: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   20560: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   20563: ifne -> 20571
    //   20566: goto_w -> 20585
    //   20571: aload_0
    //   20572: aload_1
    //   20573: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   20576: aload #4
    //   20578: invokestatic convertXMLSQLUsers : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   20581: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   20584: ireturn
    //   20585: aload_0
    //   20586: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   20589: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   20592: ireturn
    //   20593: aload #5
    //   20595: ldc_w 'registerCrushFTP'
    //   20598: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   20601: ifne -> 20609
    //   20604: goto_w -> 20658
    //   20609: aload #5
    //   20611: aload #4
    //   20613: aload_0
    //   20614: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   20617: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   20620: ldc 'user_ip'
    //   20622: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   20625: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   20628: ifne -> 20636
    //   20631: goto_w -> 20650
    //   20636: aload_0
    //   20637: aload_1
    //   20638: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   20641: aload #4
    //   20643: invokestatic registerCrushFTP : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   20646: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   20649: ireturn
    //   20650: aload_0
    //   20651: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   20654: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   20657: ireturn
    //   20658: aload #5
    //   20660: ldc_w 'restorePrefs'
    //   20663: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   20666: ifne -> 20674
    //   20669: goto_w -> 20723
    //   20674: aload #5
    //   20676: aload #4
    //   20678: aload_0
    //   20679: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   20682: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   20685: ldc 'user_ip'
    //   20687: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   20690: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   20693: ifne -> 20701
    //   20696: goto_w -> 20715
    //   20701: aload_0
    //   20702: aload_1
    //   20703: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   20706: aload #4
    //   20708: invokestatic restorePrefs : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   20711: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   20714: ireturn
    //   20715: aload_0
    //   20716: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   20719: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   20722: ireturn
    //   20723: aload #5
    //   20725: ldc_w 'testOTP'
    //   20728: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   20731: ifne -> 20739
    //   20734: goto_w -> 20788
    //   20739: aload #5
    //   20741: aload #4
    //   20743: aload_0
    //   20744: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   20747: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   20750: ldc 'user_ip'
    //   20752: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   20755: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   20758: ifne -> 20766
    //   20761: goto_w -> 20780
    //   20766: aload_0
    //   20767: aload_1
    //   20768: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   20771: aload #4
    //   20773: invokestatic testOTP : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
    //   20776: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   20779: ireturn
    //   20780: aload_0
    //   20781: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   20784: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   20787: ireturn
    //   20788: aload #5
    //   20790: ldc_w 'upload'
    //   20793: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   20796: ifeq -> 20804
    //   20799: goto_w -> 20827
    //   20804: aload_1
    //   20805: ldc_w 'the_action'
    //   20808: ldc ''
    //   20810: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   20813: ldc_w 'STOR'
    //   20816: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   20819: ifne -> 20827
    //   20822: goto_w -> 21062
    //   20827: iconst_0
    //   20828: istore #8
    //   20830: sipush #200
    //   20833: istore #9
    //   20835: ldc_w '<commandResult><response>'
    //   20838: astore #10
    //   20840: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   20843: new java/lang/StringBuffer
    //   20846: dup
    //   20847: ldc_w 'crushftp.activeUpload.info'
    //   20850: invokespecial <init> : (Ljava/lang/String;)V
    //   20853: aload_0
    //   20854: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   20857: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   20860: invokevirtual getId : ()Ljava/lang/String;
    //   20863: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   20866: invokevirtual toString : ()Ljava/lang/String;
    //   20869: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   20872: checkcast java/util/Properties
    //   20875: astore #11
    //   20877: aload #11
    //   20879: ifnonnull -> 20887
    //   20882: goto_w -> 20951
    //   20887: aload #11
    //   20889: ldc_w 'fileupload'
    //   20892: ldc ''
    //   20894: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   20897: ldc_w 'ERROR:'
    //   20900: invokevirtual indexOf : (Ljava/lang/String;)I
    //   20903: ifge -> 20911
    //   20906: goto_w -> 20951
    //   20911: new java/lang/StringBuffer
    //   20914: dup
    //   20915: aload #10
    //   20917: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   20920: invokespecial <init> : (Ljava/lang/String;)V
    //   20923: aload #11
    //   20925: ldc_w 'fileupload'
    //   20928: ldc ''
    //   20930: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   20933: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   20936: invokevirtual toString : ()Ljava/lang/String;
    //   20939: astore #10
    //   20941: sipush #500
    //   20944: istore #9
    //   20946: goto_w -> 20974
    //   20951: new java/lang/StringBuffer
    //   20954: dup
    //   20955: aload #10
    //   20957: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   20960: invokespecial <init> : (Ljava/lang/String;)V
    //   20963: ldc_w 'Success'
    //   20966: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   20969: invokevirtual toString : ()Ljava/lang/String;
    //   20972: astore #10
    //   20974: aload_0
    //   20975: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   20978: iconst_1
    //   20979: putfield done : Z
    //   20982: new java/lang/StringBuffer
    //   20985: dup
    //   20986: aload #10
    //   20988: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   20991: invokespecial <init> : (Ljava/lang/String;)V
    //   20994: ldc_w '</response><last_md5>'
    //   20997: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   21000: aload #11
    //   21002: ldc_w 'last_md5'
    //   21005: ldc ''
    //   21007: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   21010: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   21013: ldc_w '</last_md5></commandResult>'
    //   21016: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   21019: invokevirtual toString : ()Ljava/lang/String;
    //   21022: astore #10
    //   21024: aload_0
    //   21025: aload #10
    //   21027: iconst_1
    //   21028: iload #9
    //   21030: iconst_1
    //   21031: iconst_0
    //   21032: iconst_1
    //   21033: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   21036: istore #8
    //   21038: aload_0
    //   21039: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   21042: getfield chunked : Z
    //   21045: ifne -> 21053
    //   21048: goto_w -> 21059
    //   21053: ldc2_w 1000
    //   21056: invokestatic sleep : (J)V
    //   21059: iload #8
    //   21061: ireturn
    //   21062: aload #5
    //   21064: ldc_w 'upload_0_byte'
    //   21067: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   21070: ifne -> 21078
    //   21073: goto_w -> 21884
    //   21078: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   21081: ifne -> 21089
    //   21084: goto_w -> 21550
    //   21089: aload_1
    //   21090: ldc_w 'path'
    //   21093: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   21096: astore #8
    //   21098: aload #8
    //   21100: aload_0
    //   21101: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   21104: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   21107: ldc_w 'root_dir'
    //   21110: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   21113: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   21116: ifeq -> 21124
    //   21119: goto_w -> 21161
    //   21124: new java/lang/StringBuffer
    //   21127: dup
    //   21128: aload_0
    //   21129: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   21132: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   21135: ldc_w 'root_dir'
    //   21138: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   21141: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   21144: invokespecial <init> : (Ljava/lang/String;)V
    //   21147: aload #8
    //   21149: iconst_1
    //   21150: invokevirtual substring : (I)Ljava/lang/String;
    //   21153: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   21156: invokevirtual toString : ()Ljava/lang/String;
    //   21159: astore #8
    //   21161: aload_0
    //   21162: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   21165: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   21168: getfield uVFS : Lcrushftp/server/VFS;
    //   21171: aload #8
    //   21173: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   21176: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   21179: astore #9
    //   21181: new java/util/Properties
    //   21184: dup
    //   21185: invokespecial <init> : ()V
    //   21188: astore #10
    //   21190: aload #10
    //   21192: ldc_w 'protocol'
    //   21195: ldc_w 'HTTP'
    //   21198: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   21201: pop
    //   21202: aconst_null
    //   21203: astore #11
    //   21205: iconst_0
    //   21206: istore #12
    //   21208: goto_w -> 21491
    //   21213: new com/crushftp/client/VRL
    //   21216: dup
    //   21217: aload #9
    //   21219: ldc_w 'url'
    //   21222: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   21225: invokestatic getBaseUrl : (Ljava/lang/String;)Ljava/lang/String;
    //   21228: invokespecial <init> : (Ljava/lang/String;)V
    //   21231: aload #10
    //   21233: invokestatic openConnection : (Lcom/crushftp/client/VRL;Ljava/util/Properties;)Lcom/crushftp/client/URLConnection;
    //   21236: astore #11
    //   21238: aload #11
    //   21240: ldc_w 'POST'
    //   21243: invokevirtual setRequestMethod : (Ljava/lang/String;)V
    //   21246: aload_0
    //   21247: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   21250: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   21253: getfield uVFS : Lcrushftp/server/VFS;
    //   21256: aload #9
    //   21258: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   21261: astore #13
    //   21263: aload #11
    //   21265: ldc_w 'Cookie'
    //   21268: new java/lang/StringBuffer
    //   21271: dup
    //   21272: ldc_w 'CrushAuth='
    //   21275: invokespecial <init> : (Ljava/lang/String;)V
    //   21278: aload #13
    //   21280: ldc_w 'crushAuth'
    //   21283: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   21286: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   21289: ldc_w ';'
    //   21292: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   21295: invokevirtual toString : ()Ljava/lang/String;
    //   21298: invokevirtual setRequestProperty : (Ljava/lang/String;Ljava/lang/String;)V
    //   21301: aload #11
    //   21303: iconst_0
    //   21304: invokevirtual setUseCaches : (Z)V
    //   21307: aload #11
    //   21309: iconst_1
    //   21310: invokevirtual setDoOutput : (Z)V
    //   21313: new java/lang/StringBuffer
    //   21316: dup
    //   21317: ldc_w 'command=upload_0_byte&c2f='
    //   21320: invokespecial <init> : (Ljava/lang/String;)V
    //   21323: aload #13
    //   21325: ldc_w 'crushAuth'
    //   21328: ldc ''
    //   21330: invokevirtual getConfig : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   21333: aload #13
    //   21335: ldc_w 'crushAuth'
    //   21338: ldc ''
    //   21340: invokevirtual getConfig : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   21343: invokevirtual length : ()I
    //   21346: iconst_4
    //   21347: isub
    //   21348: invokevirtual substring : (I)Ljava/lang/String;
    //   21351: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   21354: ldc_w '&path='
    //   21357: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   21360: aload_1
    //   21361: ldc_w 'path'
    //   21364: ldc ''
    //   21366: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   21369: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   21372: invokevirtual toString : ()Ljava/lang/String;
    //   21375: ldc_w 'UTF8'
    //   21378: invokevirtual getBytes : (Ljava/lang/String;)[B
    //   21381: astore #14
    //   21383: aload #11
    //   21385: aload #14
    //   21387: arraylength
    //   21388: i2l
    //   21389: invokevirtual setLength : (J)V
    //   21392: aload #11
    //   21394: invokevirtual getOutputStream : ()Ljava/io/OutputStream;
    //   21397: astore #15
    //   21399: aload #15
    //   21401: aload #14
    //   21403: invokevirtual write : ([B)V
    //   21406: aload #15
    //   21408: invokevirtual flush : ()V
    //   21411: aload #11
    //   21413: invokevirtual getResponseCode : ()I
    //   21416: sipush #302
    //   21419: if_icmpeq -> 21427
    //   21422: goto_w -> 21470
    //   21427: aload #13
    //   21429: ldc_w 'error'
    //   21432: ldc_w 'Logged out.'
    //   21435: invokevirtual setConfig : (Ljava/lang/String;Ljava/lang/Object;)V
    //   21438: aload #11
    //   21440: invokevirtual disconnect : ()V
    //   21443: aload_0
    //   21444: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   21447: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   21450: getfield uVFS : Lcrushftp/server/VFS;
    //   21453: aload #13
    //   21455: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   21458: pop
    //   21459: ldc2_w 100
    //   21462: invokestatic sleep : (J)V
    //   21465: goto_w -> 21491
    //   21470: aload_0
    //   21471: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   21474: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   21477: getfield uVFS : Lcrushftp/server/VFS;
    //   21480: aload #13
    //   21482: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   21485: pop
    //   21486: goto_w -> 21506
    //   21491: iload #12
    //   21493: iinc #12, 1
    //   21496: bipush #100
    //   21498: if_icmpge -> 21506
    //   21501: goto_w -> 21213
    //   21506: new java/io/ByteArrayOutputStream
    //   21509: dup
    //   21510: invokespecial <init> : ()V
    //   21513: astore #13
    //   21515: aload #11
    //   21517: invokevirtual getInputStream : ()Ljava/io/InputStream;
    //   21520: aload #13
    //   21522: iconst_0
    //   21523: iconst_1
    //   21524: iconst_1
    //   21525: invokestatic streamCopier : (Ljava/io/InputStream;Ljava/io/OutputStream;ZZZ)V
    //   21528: aload #11
    //   21530: invokevirtual disconnect : ()V
    //   21533: aload_0
    //   21534: new java/lang/String
    //   21537: dup
    //   21538: aload #13
    //   21540: invokevirtual toByteArray : ()[B
    //   21543: invokespecial <init> : ([B)V
    //   21546: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   21549: ireturn
    //   21550: ldc ''
    //   21552: astore #8
    //   21554: aload_1
    //   21555: ldc_w 'path'
    //   21558: ldc ''
    //   21560: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   21563: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   21566: astore #9
    //   21568: aload #9
    //   21570: ldc_w '/'
    //   21573: invokevirtual equals : (Ljava/lang/Object;)Z
    //   21576: ifne -> 21584
    //   21579: goto_w -> 21599
    //   21584: aload_0
    //   21585: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   21588: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   21591: ldc_w 'root_dir'
    //   21594: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   21597: astore #9
    //   21599: aload #9
    //   21601: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   21604: ldc_w '/'
    //   21607: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   21610: ifne -> 21618
    //   21613: goto_w -> 21687
    //   21618: aload #9
    //   21620: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   21623: aload_0
    //   21624: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   21627: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   21630: ldc_w 'root_dir'
    //   21633: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   21636: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   21639: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   21642: ifeq -> 21650
    //   21645: goto_w -> 21687
    //   21650: new java/lang/StringBuffer
    //   21653: dup
    //   21654: aload_0
    //   21655: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   21658: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   21661: ldc_w 'root_dir'
    //   21664: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   21667: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   21670: invokespecial <init> : (Ljava/lang/String;)V
    //   21673: aload #9
    //   21675: iconst_1
    //   21676: invokevirtual substring : (I)Ljava/lang/String;
    //   21679: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   21682: invokevirtual toString : ()Ljava/lang/String;
    //   21685: astore #9
    //   21687: aload_0
    //   21688: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   21691: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   21694: aload #9
    //   21696: ldc_w 'STOR'
    //   21699: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   21702: ifne -> 21710
    //   21705: goto_w -> 21828
    //   21710: aload_0
    //   21711: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   21714: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   21717: getfield uVFS : Lcrushftp/server/VFS;
    //   21720: aload #9
    //   21722: invokevirtual get_item_parent : (Ljava/lang/String;)Ljava/util/Properties;
    //   21725: astore #10
    //   21727: aload_0
    //   21728: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   21731: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   21734: getfield uVFS : Lcrushftp/server/VFS;
    //   21737: aload #10
    //   21739: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   21742: astore #11
    //   21744: aload #11
    //   21746: new com/crushftp/client/VRL
    //   21749: dup
    //   21750: aload #10
    //   21752: ldc_w 'url'
    //   21755: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   21758: invokespecial <init> : (Ljava/lang/String;)V
    //   21761: invokevirtual getPath : ()Ljava/lang/String;
    //   21764: lconst_0
    //   21765: iconst_1
    //   21766: iconst_1
    //   21767: invokevirtual upload : (Ljava/lang/String;JZZ)Ljava/io/OutputStream;
    //   21770: invokevirtual close : ()V
    //   21773: goto_w -> 21807
    //   21778: astore #12
    //   21780: new java/lang/StringBuffer
    //   21783: dup
    //   21784: aload #8
    //   21786: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   21789: invokespecial <init> : (Ljava/lang/String;)V
    //   21792: aload #12
    //   21794: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   21797: invokevirtual toString : ()Ljava/lang/String;
    //   21800: astore #8
    //   21802: goto_w -> 21807
    //   21807: aload #11
    //   21809: invokevirtual close : ()V
    //   21812: aload_0
    //   21813: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   21816: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   21819: getfield uVFS : Lcrushftp/server/VFS;
    //   21822: aload #11
    //   21824: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   21827: pop
    //   21828: new java/lang/StringBuffer
    //   21831: dup
    //   21832: ldc_w '<commandResult><response>'
    //   21835: invokespecial <init> : (Ljava/lang/String;)V
    //   21838: aload #8
    //   21840: ldc ''
    //   21842: invokevirtual equals : (Ljava/lang/Object;)Z
    //   21845: ifne -> 21853
    //   21848: goto_w -> 21861
    //   21853: ldc_w 'OK'
    //   21856: goto_w -> 21863
    //   21861: aload #8
    //   21863: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   21866: ldc_w '</response></commandResult>'
    //   21869: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   21872: invokevirtual toString : ()Ljava/lang/String;
    //   21875: astore #10
    //   21877: aload_0
    //   21878: aload #10
    //   21880: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   21883: ireturn
    //   21884: aload #5
    //   21886: ldc_w 'blockUploads'
    //   21889: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   21892: ifne -> 21900
    //   21895: goto_w -> 21927
    //   21900: aload_0
    //   21901: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   21904: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   21907: ldc_w 'blockUploads'
    //   21910: ldc 'true'
    //   21912: invokevirtual put : (Ljava/lang/String;Ljava/lang/Object;)V
    //   21915: ldc_w '<commandResult><response>OK</response></commandResult>'
    //   21918: astore #8
    //   21920: aload_0
    //   21921: aload #8
    //   21923: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   21926: ireturn
    //   21927: aload #5
    //   21929: ldc_w 'unblockUploads'
    //   21932: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   21935: ifne -> 21943
    //   21938: goto_w -> 21970
    //   21943: aload_0
    //   21944: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   21947: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   21950: ldc_w 'blockUploads'
    //   21953: ldc 'false'
    //   21955: invokevirtual put : (Ljava/lang/String;Ljava/lang/Object;)V
    //   21958: ldc_w '<commandResult><response>OK</response></commandResult>'
    //   21961: astore #8
    //   21963: aload_0
    //   21964: aload #8
    //   21966: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   21969: ireturn
    //   21970: aload #5
    //   21972: ldc_w 'getLastUploadError'
    //   21975: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   21978: ifne -> 21986
    //   21981: goto_w -> 22173
    //   21986: ldc_w '<commandResult><response>'
    //   21989: astore #8
    //   21991: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   21994: new java/lang/StringBuffer
    //   21997: dup
    //   21998: ldc_w 'crushftp.activeUpload.info'
    //   22001: invokespecial <init> : (Ljava/lang/String;)V
    //   22004: aload_0
    //   22005: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   22008: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   22011: invokevirtual getId : ()Ljava/lang/String;
    //   22014: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22017: invokevirtual toString : ()Ljava/lang/String;
    //   22020: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   22023: checkcast java/util/Properties
    //   22026: astore #9
    //   22028: aload #9
    //   22030: ldc_w 'fileupload'
    //   22033: ldc ''
    //   22035: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   22038: ldc_w 'ERROR:'
    //   22041: invokevirtual indexOf : (Ljava/lang/String;)I
    //   22044: ifge -> 22052
    //   22047: goto_w -> 22087
    //   22052: new java/lang/StringBuffer
    //   22055: dup
    //   22056: aload #8
    //   22058: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22061: invokespecial <init> : (Ljava/lang/String;)V
    //   22064: aload #9
    //   22066: ldc_w 'fileupload'
    //   22069: ldc ''
    //   22071: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   22074: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22077: invokevirtual toString : ()Ljava/lang/String;
    //   22080: astore #8
    //   22082: goto_w -> 22110
    //   22087: new java/lang/StringBuffer
    //   22090: dup
    //   22091: aload #8
    //   22093: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22096: invokespecial <init> : (Ljava/lang/String;)V
    //   22099: ldc_w 'Success'
    //   22102: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22105: invokevirtual toString : ()Ljava/lang/String;
    //   22108: astore #8
    //   22110: aload_0
    //   22111: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   22114: iconst_1
    //   22115: putfield done : Z
    //   22118: new java/lang/StringBuffer
    //   22121: dup
    //   22122: aload #8
    //   22124: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22127: invokespecial <init> : (Ljava/lang/String;)V
    //   22130: ldc_w '</response></commandResult>'
    //   22133: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22136: invokevirtual toString : ()Ljava/lang/String;
    //   22139: astore #8
    //   22141: aload_0
    //   22142: aload #8
    //   22144: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   22147: istore #10
    //   22149: aload_0
    //   22150: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   22153: getfield chunked : Z
    //   22156: ifne -> 22164
    //   22159: goto_w -> 22170
    //   22164: ldc2_w 1000
    //   22167: invokestatic sleep : (J)V
    //   22170: iload #10
    //   22172: ireturn
    //   22173: aload #5
    //   22175: ldc_w 'getPreview'
    //   22178: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   22181: ifne -> 22189
    //   22184: goto_w -> 24185
    //   22189: aload_1
    //   22190: ldc_w 'path'
    //   22193: aload_1
    //   22194: ldc_w 'path'
    //   22197: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   22200: ldc_w '+'
    //   22203: ldc_w '%2B'
    //   22206: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   22209: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   22212: pop
    //   22213: aload_1
    //   22214: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   22217: pop
    //   22218: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   22221: ifne -> 22229
    //   22224: goto_w -> 22959
    //   22229: aload_1
    //   22230: ldc_w 'path'
    //   22233: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   22236: astore #8
    //   22238: aload #8
    //   22240: aload_0
    //   22241: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   22244: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   22247: ldc_w 'root_dir'
    //   22250: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   22253: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   22256: ifeq -> 22264
    //   22259: goto_w -> 22301
    //   22264: new java/lang/StringBuffer
    //   22267: dup
    //   22268: aload_0
    //   22269: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   22272: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   22275: ldc_w 'root_dir'
    //   22278: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   22281: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22284: invokespecial <init> : (Ljava/lang/String;)V
    //   22287: aload #8
    //   22289: iconst_1
    //   22290: invokevirtual substring : (I)Ljava/lang/String;
    //   22293: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22296: invokevirtual toString : ()Ljava/lang/String;
    //   22299: astore #8
    //   22301: aload_0
    //   22302: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   22305: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   22308: getfield uVFS : Lcrushftp/server/VFS;
    //   22311: aload #8
    //   22313: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   22316: astore #9
    //   22318: new java/util/Properties
    //   22321: dup
    //   22322: invokespecial <init> : ()V
    //   22325: astore #10
    //   22327: aload #10
    //   22329: ldc_w 'protocol'
    //   22332: ldc_w 'HTTP'
    //   22335: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   22338: pop
    //   22339: aconst_null
    //   22340: astore #11
    //   22342: iconst_0
    //   22343: istore #12
    //   22345: goto_w -> 22704
    //   22350: new com/crushftp/client/VRL
    //   22353: dup
    //   22354: aload #9
    //   22356: ldc_w 'url'
    //   22359: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   22362: invokestatic getBaseUrl : (Ljava/lang/String;)Ljava/lang/String;
    //   22365: invokespecial <init> : (Ljava/lang/String;)V
    //   22368: aload #10
    //   22370: invokestatic openConnection : (Lcom/crushftp/client/VRL;Ljava/util/Properties;)Lcom/crushftp/client/URLConnection;
    //   22373: astore #11
    //   22375: aload #11
    //   22377: ldc_w 'POST'
    //   22380: invokevirtual setRequestMethod : (Ljava/lang/String;)V
    //   22383: aload_0
    //   22384: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   22387: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   22390: getfield uVFS : Lcrushftp/server/VFS;
    //   22393: aload #9
    //   22395: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   22398: astore #13
    //   22400: aload #11
    //   22402: ldc_w 'Cookie'
    //   22405: new java/lang/StringBuffer
    //   22408: dup
    //   22409: ldc_w 'CrushAuth='
    //   22412: invokespecial <init> : (Ljava/lang/String;)V
    //   22415: aload #13
    //   22417: ldc_w 'crushAuth'
    //   22420: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   22423: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   22426: ldc_w ';'
    //   22429: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22432: invokevirtual toString : ()Ljava/lang/String;
    //   22435: invokevirtual setRequestProperty : (Ljava/lang/String;Ljava/lang/String;)V
    //   22438: aload #11
    //   22440: iconst_0
    //   22441: invokevirtual setUseCaches : (Z)V
    //   22444: aload #11
    //   22446: iconst_1
    //   22447: invokevirtual setDoOutput : (Z)V
    //   22450: new java/lang/StringBuffer
    //   22453: dup
    //   22454: ldc_w 'command=getPreview&c2f='
    //   22457: invokespecial <init> : (Ljava/lang/String;)V
    //   22460: aload #13
    //   22462: ldc_w 'crushAuth'
    //   22465: ldc ''
    //   22467: invokevirtual getConfig : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   22470: aload #13
    //   22472: ldc_w 'crushAuth'
    //   22475: ldc ''
    //   22477: invokevirtual getConfig : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   22480: invokevirtual length : ()I
    //   22483: iconst_4
    //   22484: isub
    //   22485: invokevirtual substring : (I)Ljava/lang/String;
    //   22488: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22491: ldc_w '&size='
    //   22494: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22497: aload_1
    //   22498: ldc_w 'size'
    //   22501: ldc_w '1'
    //   22504: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   22507: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22510: ldc_w '&frame='
    //   22513: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22516: aload_1
    //   22517: ldc_w 'frame'
    //   22520: ldc_w '1'
    //   22523: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   22526: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22529: ldc_w '&object_type='
    //   22532: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22535: aload_1
    //   22536: ldc_w 'object_type'
    //   22539: ldc_w 'image'
    //   22542: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   22545: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22548: ldc_w '&download='
    //   22551: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22554: aload_1
    //   22555: ldc_w 'download'
    //   22558: ldc 'false'
    //   22560: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   22563: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22566: ldc_w '&path='
    //   22569: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22572: aload_1
    //   22573: ldc_w 'path'
    //   22576: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   22579: invokestatic url_encode : (Ljava/lang/String;)Ljava/lang/String;
    //   22582: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22585: invokevirtual toString : ()Ljava/lang/String;
    //   22588: ldc_w 'UTF8'
    //   22591: invokevirtual getBytes : (Ljava/lang/String;)[B
    //   22594: astore #14
    //   22596: aload #11
    //   22598: aload #14
    //   22600: arraylength
    //   22601: i2l
    //   22602: invokevirtual setLength : (J)V
    //   22605: aload #11
    //   22607: invokevirtual getOutputStream : ()Ljava/io/OutputStream;
    //   22610: astore #15
    //   22612: aload #15
    //   22614: aload #14
    //   22616: invokevirtual write : ([B)V
    //   22619: aload #15
    //   22621: invokevirtual flush : ()V
    //   22624: aload #11
    //   22626: invokevirtual getResponseCode : ()I
    //   22629: sipush #302
    //   22632: if_icmpeq -> 22640
    //   22635: goto_w -> 22683
    //   22640: aload #13
    //   22642: ldc_w 'error'
    //   22645: ldc_w 'Logged out.'
    //   22648: invokevirtual setConfig : (Ljava/lang/String;Ljava/lang/Object;)V
    //   22651: aload #11
    //   22653: invokevirtual disconnect : ()V
    //   22656: aload_0
    //   22657: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   22660: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   22663: getfield uVFS : Lcrushftp/server/VFS;
    //   22666: aload #13
    //   22668: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   22671: pop
    //   22672: ldc2_w 100
    //   22675: invokestatic sleep : (J)V
    //   22678: goto_w -> 22704
    //   22683: aload_0
    //   22684: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   22687: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   22690: getfield uVFS : Lcrushftp/server/VFS;
    //   22693: aload #13
    //   22695: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   22698: pop
    //   22699: goto_w -> 22719
    //   22704: iload #12
    //   22706: iinc #12, 1
    //   22709: bipush #100
    //   22711: if_icmpge -> 22719
    //   22714: goto_w -> 22350
    //   22719: aload_0
    //   22720: new java/lang/StringBuffer
    //   22723: dup
    //   22724: ldc_w 'HTTP/1.1 '
    //   22727: invokespecial <init> : (Ljava/lang/String;)V
    //   22730: aload #11
    //   22732: invokevirtual getResponseCode : ()I
    //   22735: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   22738: ldc_w ' OK'
    //   22741: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22744: invokevirtual toString : ()Ljava/lang/String;
    //   22747: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   22750: aload_0
    //   22751: new java/lang/StringBuffer
    //   22754: dup
    //   22755: ldc_w 'Content-Type: '
    //   22758: invokespecial <init> : (Ljava/lang/String;)V
    //   22761: aload #11
    //   22763: ldc_w 'CONTENT-TYPE'
    //   22766: invokevirtual getHeaderField : (Ljava/lang/String;)Ljava/lang/String;
    //   22769: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22772: invokevirtual toString : ()Ljava/lang/String;
    //   22775: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   22778: aload_0
    //   22779: new java/lang/StringBuffer
    //   22782: dup
    //   22783: ldc_w 'Content-Length: '
    //   22786: invokespecial <init> : (Ljava/lang/String;)V
    //   22789: aload #11
    //   22791: ldc_w 'CONTENT-LENGTH'
    //   22794: invokevirtual getHeaderField : (Ljava/lang/String;)Ljava/lang/String;
    //   22797: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   22800: invokevirtual toString : ()Ljava/lang/String;
    //   22803: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   22806: aload_0
    //   22807: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   22810: invokevirtual write_standard_headers : ()V
    //   22813: aload_0
    //   22814: ldc_w 'X-UA-Compatible: chrome=1'
    //   22817: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   22820: aload_0
    //   22821: ldc ''
    //   22823: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   22826: aload #11
    //   22828: invokevirtual getInputStream : ()Ljava/io/InputStream;
    //   22831: astore #13
    //   22833: ldc_w 32768
    //   22836: newarray byte
    //   22838: astore #14
    //   22840: aload #11
    //   22842: ldc_w 'CONTENT-LENGTH'
    //   22845: invokevirtual getHeaderField : (Ljava/lang/String;)Ljava/lang/String;
    //   22848: invokevirtual trim : ()Ljava/lang/String;
    //   22851: invokestatic parseInt : (Ljava/lang/String;)I
    //   22854: istore #15
    //   22856: iconst_0
    //   22857: istore #16
    //   22859: goto_w -> 22924
    //   22864: aload #14
    //   22866: arraylength
    //   22867: iload #15
    //   22869: if_icmpgt -> 22877
    //   22872: goto_w -> 22883
    //   22877: iload #15
    //   22879: newarray byte
    //   22881: astore #14
    //   22883: aload #13
    //   22885: aload #14
    //   22887: invokevirtual read : ([B)I
    //   22890: istore #16
    //   22892: iload #16
    //   22894: ifgt -> 22902
    //   22897: goto_w -> 22924
    //   22902: iload #15
    //   22904: iload #16
    //   22906: isub
    //   22907: istore #15
    //   22909: aload_0
    //   22910: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   22913: getfield original_os : Ljava/io/OutputStream;
    //   22916: aload #14
    //   22918: iconst_0
    //   22919: iload #16
    //   22921: invokevirtual write : ([BII)V
    //   22924: iload #15
    //   22926: ifle -> 22934
    //   22929: goto_w -> 22864
    //   22934: aload_0
    //   22935: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   22938: getfield original_os : Ljava/io/OutputStream;
    //   22941: invokevirtual flush : ()V
    //   22944: aload #13
    //   22946: invokevirtual close : ()V
    //   22949: aload #11
    //   22951: invokevirtual disconnect : ()V
    //   22954: goto_w -> 24183
    //   22959: new java/util/Vector
    //   22962: dup
    //   22963: invokespecial <init> : ()V
    //   22966: astore #8
    //   22968: new java/util/Vector
    //   22971: dup
    //   22972: invokespecial <init> : ()V
    //   22975: astore #9
    //   22977: aload_1
    //   22978: ldc_w 'path'
    //   22981: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   22984: ldc_w ';'
    //   22987: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   22990: astore #10
    //   22992: ldc ''
    //   22994: astore #11
    //   22996: iconst_0
    //   22997: istore #12
    //   22999: goto_w -> 23630
    //   23004: aload #10
    //   23006: iload #12
    //   23008: aaload
    //   23009: astore #11
    //   23011: aload #11
    //   23013: invokevirtual trim : ()Ljava/lang/String;
    //   23016: ldc ''
    //   23018: invokevirtual equals : (Ljava/lang/Object;)Z
    //   23021: ifne -> 23029
    //   23024: goto_w -> 23034
    //   23029: goto_w -> 23627
    //   23034: aload #8
    //   23036: aload #11
    //   23038: invokevirtual addElement : (Ljava/lang/Object;)V
    //   23041: aload_0
    //   23042: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   23045: aload #11
    //   23047: invokevirtual setupCurrentDir : (Ljava/lang/String;)V
    //   23050: ldc_w 'HTTP_SERVER'
    //   23053: iconst_2
    //   23054: new java/lang/StringBuffer
    //   23057: dup
    //   23058: ldc_w 'getPreview:'
    //   23061: invokespecial <init> : (Ljava/lang/String;)V
    //   23064: aload #11
    //   23066: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23069: invokevirtual toString : ()Ljava/lang/String;
    //   23072: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   23075: pop
    //   23076: aload #11
    //   23078: ldc_w '@'
    //   23081: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   23084: ifne -> 23092
    //   23087: goto_w -> 23322
    //   23092: aload #11
    //   23094: iconst_1
    //   23095: invokevirtual substring : (I)Ljava/lang/String;
    //   23098: astore #11
    //   23100: aload #11
    //   23102: ldc_w '..'
    //   23105: invokevirtual indexOf : (Ljava/lang/String;)I
    //   23108: ifge -> 23116
    //   23111: goto_w -> 23120
    //   23116: ldc ''
    //   23118: astore #11
    //   23120: aload #11
    //   23122: ldc_w 'folder'
    //   23125: invokevirtual equals : (Ljava/lang/Object;)Z
    //   23128: ifeq -> 23136
    //   23131: goto_w -> 23259
    //   23136: aload #11
    //   23138: ldc_w '.'
    //   23141: invokevirtual indexOf : (Ljava/lang/String;)I
    //   23144: ifge -> 23152
    //   23147: goto_w -> 23169
    //   23152: aload #11
    //   23154: aload #11
    //   23156: ldc_w '.'
    //   23159: invokevirtual lastIndexOf : (Ljava/lang/String;)I
    //   23162: iconst_1
    //   23163: iadd
    //   23164: invokevirtual substring : (I)Ljava/lang/String;
    //   23167: astore #11
    //   23169: new com/crushftp/client/File_S
    //   23172: dup
    //   23173: new java/lang/StringBuffer
    //   23176: dup
    //   23177: ldc_w 'crushftp.web'
    //   23180: invokestatic getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   23183: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   23186: invokespecial <init> : (Ljava/lang/String;)V
    //   23189: ldc_w 'WebInterface/images/mimetypes/'
    //   23192: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23195: aload #11
    //   23197: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23200: ldc_w '.png'
    //   23203: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23206: invokevirtual toString : ()Ljava/lang/String;
    //   23209: invokespecial <init> : (Ljava/lang/String;)V
    //   23212: invokevirtual exists : ()Z
    //   23215: ifne -> 23223
    //   23218: goto_w -> 23254
    //   23223: new java/lang/StringBuffer
    //   23226: dup
    //   23227: ldc_w '/WebInterface/images/mimetypes/'
    //   23230: invokespecial <init> : (Ljava/lang/String;)V
    //   23233: aload #11
    //   23235: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23238: ldc_w '.png'
    //   23241: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23244: invokevirtual toString : ()Ljava/lang/String;
    //   23247: astore #11
    //   23249: goto_w -> 23259
    //   23254: ldc_w 'file'
    //   23257: astore #11
    //   23259: aload #11
    //   23261: ldc_w '/'
    //   23264: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   23267: ifeq -> 23275
    //   23270: goto_w -> 23317
    //   23275: new java/lang/StringBuffer
    //   23278: dup
    //   23279: ldc_w '/WebInterface/images/'
    //   23282: invokespecial <init> : (Ljava/lang/String;)V
    //   23285: aload #11
    //   23287: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23290: ldc_w '.png/p1/'
    //   23293: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23296: aload_1
    //   23297: ldc_w 'size'
    //   23300: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   23303: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23306: ldc_w '.png'
    //   23309: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23312: invokevirtual toString : ()Ljava/lang/String;
    //   23315: astore #11
    //   23317: goto_w -> 23620
    //   23322: aload_1
    //   23323: ldc_w 'object_type'
    //   23326: ldc_w 'image'
    //   23329: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   23332: ldc_w 'exif'
    //   23335: invokevirtual equals : (Ljava/lang/Object;)Z
    //   23338: ifne -> 23346
    //   23341: goto_w -> 23492
    //   23346: ldc_w 'HTTP_SERVER'
    //   23349: iconst_2
    //   23350: new java/lang/StringBuffer
    //   23353: dup
    //   23354: ldc_w 'getPreview2:'
    //   23357: invokespecial <init> : (Ljava/lang/String;)V
    //   23360: aload_0
    //   23361: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   23364: invokevirtual pwd : ()Ljava/lang/String;
    //   23367: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23370: invokevirtual toString : ()Ljava/lang/String;
    //   23373: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   23376: pop
    //   23377: aload_0
    //   23378: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   23381: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   23384: getfield uVFS : Lcrushftp/server/VFS;
    //   23387: aload_0
    //   23388: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   23391: invokevirtual pwd : ()Ljava/lang/String;
    //   23394: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   23397: astore #13
    //   23399: new java/lang/StringBuffer
    //   23402: dup
    //   23403: ldc_w '/WebInterface/images'
    //   23406: invokespecial <init> : (Ljava/lang/String;)V
    //   23409: aload #13
    //   23411: ldc_w 'url'
    //   23414: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   23417: ldc_w '1'
    //   23420: iconst_1
    //   23421: invokestatic getPreviewPath : (Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
    //   23424: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23427: invokevirtual toString : ()Ljava/lang/String;
    //   23430: astore #11
    //   23432: new java/lang/StringBuffer
    //   23435: dup
    //   23436: aload #11
    //   23438: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   23441: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   23444: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   23447: invokespecial <init> : (Ljava/lang/String;)V
    //   23450: ldc_w 'info.xml'
    //   23453: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23456: invokevirtual toString : ()Ljava/lang/String;
    //   23459: astore #11
    //   23461: ldc_w 'HTTP_SERVER'
    //   23464: iconst_2
    //   23465: new java/lang/StringBuffer
    //   23468: dup
    //   23469: ldc_w 'getPreview3:'
    //   23472: invokespecial <init> : (Ljava/lang/String;)V
    //   23475: aload #11
    //   23477: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23480: invokevirtual toString : ()Ljava/lang/String;
    //   23483: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   23486: pop
    //   23487: goto_w -> 23620
    //   23492: ldc_w 'HTTP_SERVER'
    //   23495: iconst_2
    //   23496: new java/lang/StringBuffer
    //   23499: dup
    //   23500: ldc_w 'getPreview2:'
    //   23503: invokespecial <init> : (Ljava/lang/String;)V
    //   23506: aload_0
    //   23507: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   23510: invokevirtual pwd : ()Ljava/lang/String;
    //   23513: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23516: invokevirtual toString : ()Ljava/lang/String;
    //   23519: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   23522: pop
    //   23523: aload_0
    //   23524: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   23527: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   23530: getfield uVFS : Lcrushftp/server/VFS;
    //   23533: aload_0
    //   23534: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   23537: invokevirtual pwd : ()Ljava/lang/String;
    //   23540: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   23543: astore #13
    //   23545: new java/lang/StringBuffer
    //   23548: dup
    //   23549: ldc_w '/WebInterface/images'
    //   23552: invokespecial <init> : (Ljava/lang/String;)V
    //   23555: aload #13
    //   23557: ldc_w 'url'
    //   23560: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   23563: aload_1
    //   23564: ldc_w 'size'
    //   23567: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   23570: aload_1
    //   23571: ldc_w 'frame'
    //   23574: ldc_w '1'
    //   23577: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   23580: invokestatic parseInt : (Ljava/lang/String;)I
    //   23583: invokestatic getPreviewPath : (Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
    //   23586: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23589: invokevirtual toString : ()Ljava/lang/String;
    //   23592: astore #11
    //   23594: ldc_w 'HTTP_SERVER'
    //   23597: iconst_2
    //   23598: new java/lang/StringBuffer
    //   23601: dup
    //   23602: ldc_w 'getPreview3:'
    //   23605: invokespecial <init> : (Ljava/lang/String;)V
    //   23608: aload #11
    //   23610: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23613: invokevirtual toString : ()Ljava/lang/String;
    //   23616: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   23619: pop
    //   23620: aload #9
    //   23622: aload #11
    //   23624: invokevirtual addElement : (Ljava/lang/Object;)V
    //   23627: iinc #12, 1
    //   23630: iload #12
    //   23632: aload #10
    //   23634: arraylength
    //   23635: if_icmpge -> 23643
    //   23638: goto_w -> 23004
    //   23643: aload #9
    //   23645: invokevirtual size : ()I
    //   23648: ifgt -> 23656
    //   23651: goto_w -> 23667
    //   23656: aload #9
    //   23658: iconst_0
    //   23659: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   23662: invokevirtual toString : ()Ljava/lang/String;
    //   23665: astore #11
    //   23667: new java/lang/StringBuffer
    //   23670: dup
    //   23671: ldc_w 'GET '
    //   23674: invokespecial <init> : (Ljava/lang/String;)V
    //   23677: aload #11
    //   23679: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23682: ldc_w ' HTTP/1.1'
    //   23685: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23688: invokevirtual toString : ()Ljava/lang/String;
    //   23691: astore #12
    //   23693: aload_0
    //   23694: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   23697: getfield headers : Ljava/util/Vector;
    //   23700: aload #12
    //   23702: iconst_0
    //   23703: invokevirtual setElementAt : (Ljava/lang/Object;I)V
    //   23706: aconst_null
    //   23707: astore #13
    //   23709: aload_1
    //   23710: ldc_w 'download'
    //   23713: ldc 'false'
    //   23715: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   23718: ldc 'true'
    //   23720: invokevirtual equals : (Ljava/lang/Object;)Z
    //   23723: ifne -> 23731
    //   23726: goto_w -> 23794
    //   23731: aload_1
    //   23732: ldc_w 'path'
    //   23735: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   23738: invokestatic last : (Ljava/lang/String;)Ljava/lang/String;
    //   23741: astore #13
    //   23743: aload #13
    //   23745: ldc_w '.'
    //   23748: invokevirtual indexOf : (Ljava/lang/String;)I
    //   23751: ifge -> 23759
    //   23754: goto_w -> 23794
    //   23759: new java/lang/StringBuffer
    //   23762: dup
    //   23763: aload #13
    //   23765: iconst_0
    //   23766: aload #13
    //   23768: ldc_w '.'
    //   23771: invokevirtual lastIndexOf : (Ljava/lang/String;)I
    //   23774: invokevirtual substring : (II)Ljava/lang/String;
    //   23777: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   23780: invokespecial <init> : (Ljava/lang/String;)V
    //   23783: ldc_w '.jpg'
    //   23786: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23789: invokevirtual toString : ()Ljava/lang/String;
    //   23792: astore #13
    //   23794: aload #9
    //   23796: invokevirtual size : ()I
    //   23799: iconst_1
    //   23800: if_icmpeq -> 23808
    //   23803: goto_w -> 23838
    //   23808: aload_0
    //   23809: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   23812: aload_0
    //   23813: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   23816: getfield headers : Ljava/util/Vector;
    //   23819: aload_0
    //   23820: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   23823: getfield original_os : Ljava/io/OutputStream;
    //   23826: iconst_0
    //   23827: aload #13
    //   23829: invokestatic serveFile : (Lcrushftp/server/ServerSessionHTTP;Ljava/util/Vector;Ljava/io/OutputStream;ZLjava/lang/String;)Lcom/crushftp/client/File_B;
    //   23832: pop
    //   23833: goto_w -> 24183
    //   23838: aload_0
    //   23839: ldc_w 'HTTP/1.1 200 OK'
    //   23842: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   23845: iconst_1
    //   23846: istore #14
    //   23848: aload_0
    //   23849: new java/lang/StringBuffer
    //   23852: dup
    //   23853: ldc_w 'Cache-Control: post-check='
    //   23856: invokespecial <init> : (Ljava/lang/String;)V
    //   23859: iload #14
    //   23861: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   23864: ldc_w ',pre-check='
    //   23867: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   23870: iload #14
    //   23872: bipush #10
    //   23874: imul
    //   23875: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   23878: invokevirtual toString : ()Ljava/lang/String;
    //   23881: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   23884: aload_0
    //   23885: ldc_w 'Content-Type: application/zip'
    //   23888: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   23891: aload_0
    //   23892: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   23895: invokevirtual write_standard_headers : ()V
    //   23898: aload_0
    //   23899: ldc_w 'Content-Disposition: attachment; filename="images.zip"'
    //   23902: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   23905: aload_0
    //   23906: ldc_w 'X-UA-Compatible: chrome=1'
    //   23909: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   23912: aload_0
    //   23913: ldc_w 'Connection: close'
    //   23916: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   23919: aload_0
    //   23920: ldc ''
    //   23922: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   23925: new org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream
    //   23928: dup
    //   23929: aload_0
    //   23930: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   23933: getfield original_os : Ljava/io/OutputStream;
    //   23936: invokespecial <init> : (Ljava/io/OutputStream;)V
    //   23939: astore #15
    //   23941: iconst_0
    //   23942: istore #16
    //   23944: goto_w -> 24158
    //   23949: aload #8
    //   23951: iload #16
    //   23953: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   23956: invokevirtual toString : ()Ljava/lang/String;
    //   23959: astore #11
    //   23961: aload #11
    //   23963: invokestatic last : (Ljava/lang/String;)Ljava/lang/String;
    //   23966: astore #13
    //   23968: aload #13
    //   23970: ldc_w '.'
    //   23973: invokevirtual indexOf : (Ljava/lang/String;)I
    //   23976: ifge -> 23984
    //   23979: goto_w -> 24019
    //   23984: new java/lang/StringBuffer
    //   23987: dup
    //   23988: aload #13
    //   23990: iconst_0
    //   23991: aload #13
    //   23993: ldc_w '.'
    //   23996: invokevirtual lastIndexOf : (Ljava/lang/String;)I
    //   23999: invokevirtual substring : (II)Ljava/lang/String;
    //   24002: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   24005: invokespecial <init> : (Ljava/lang/String;)V
    //   24008: ldc_w '.jpg'
    //   24011: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24014: invokevirtual toString : ()Ljava/lang/String;
    //   24017: astore #13
    //   24019: new org/apache/commons/compress/archivers/zip/ZipArchiveEntry
    //   24022: dup
    //   24023: aload #13
    //   24025: invokespecial <init> : (Ljava/lang/String;)V
    //   24028: astore #17
    //   24030: aload #15
    //   24032: aload #17
    //   24034: invokevirtual putArchiveEntry : (Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
    //   24037: aload_0
    //   24038: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   24041: aload #11
    //   24043: invokevirtual setupCurrentDir : (Ljava/lang/String;)V
    //   24046: aload_0
    //   24047: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   24050: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   24053: getfield uVFS : Lcrushftp/server/VFS;
    //   24056: aload_0
    //   24057: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   24060: invokevirtual pwd : ()Ljava/lang/String;
    //   24063: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   24066: astore #18
    //   24068: new com/crushftp/client/File_S
    //   24071: dup
    //   24072: new java/lang/StringBuffer
    //   24075: dup
    //   24076: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   24079: pop
    //   24080: ldc_w 'previews_path'
    //   24083: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   24086: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   24089: invokespecial <init> : (Ljava/lang/String;)V
    //   24092: aload #18
    //   24094: ldc_w 'url'
    //   24097: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   24100: aload_1
    //   24101: ldc_w 'size'
    //   24104: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   24107: aload_1
    //   24108: ldc_w 'frame'
    //   24111: ldc_w '1'
    //   24114: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24117: invokestatic parseInt : (Ljava/lang/String;)I
    //   24120: invokestatic getPreviewPath : (Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
    //   24123: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24126: invokevirtual toString : ()Ljava/lang/String;
    //   24129: invokespecial <init> : (Ljava/lang/String;)V
    //   24132: astore #19
    //   24134: new java/io/FileInputStream
    //   24137: dup
    //   24138: aload #19
    //   24140: invokespecial <init> : (Ljava/io/File;)V
    //   24143: aload #15
    //   24145: iconst_1
    //   24146: iconst_0
    //   24147: invokestatic copyStreams : (Ljava/io/InputStream;Ljava/lang/Object;ZZ)V
    //   24150: aload #15
    //   24152: invokevirtual closeArchiveEntry : ()V
    //   24155: iinc #16, 1
    //   24158: iload #16
    //   24160: aload #8
    //   24162: invokevirtual size : ()I
    //   24165: if_icmpge -> 24173
    //   24168: goto_w -> 23949
    //   24173: aload #15
    //   24175: invokevirtual finish : ()V
    //   24178: aload #15
    //   24180: invokevirtual close : ()V
    //   24183: iconst_1
    //   24184: ireturn
    //   24185: aload #5
    //   24187: ldc_w 'setPreview'
    //   24190: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   24193: ifne -> 24201
    //   24196: goto_w -> 25848
    //   24201: aload_1
    //   24202: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   24205: pop
    //   24206: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   24209: ifne -> 24217
    //   24212: goto_w -> 24841
    //   24217: aload_1
    //   24218: ldc_w 'path'
    //   24221: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   24224: astore #8
    //   24226: aload #8
    //   24228: aload_0
    //   24229: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   24232: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   24235: ldc_w 'root_dir'
    //   24238: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   24241: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   24244: ifeq -> 24252
    //   24247: goto_w -> 24289
    //   24252: new java/lang/StringBuffer
    //   24255: dup
    //   24256: aload_0
    //   24257: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   24260: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   24263: ldc_w 'root_dir'
    //   24266: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   24269: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   24272: invokespecial <init> : (Ljava/lang/String;)V
    //   24275: aload #8
    //   24277: iconst_1
    //   24278: invokevirtual substring : (I)Ljava/lang/String;
    //   24281: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24284: invokevirtual toString : ()Ljava/lang/String;
    //   24287: astore #8
    //   24289: aload_0
    //   24290: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   24293: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   24296: getfield uVFS : Lcrushftp/server/VFS;
    //   24299: aload #8
    //   24301: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   24304: astore #9
    //   24306: new java/util/Properties
    //   24309: dup
    //   24310: invokespecial <init> : ()V
    //   24313: astore #10
    //   24315: aload #10
    //   24317: ldc_w 'protocol'
    //   24320: ldc_w 'HTTP'
    //   24323: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   24326: pop
    //   24327: aconst_null
    //   24328: astore #11
    //   24330: iconst_0
    //   24331: istore #12
    //   24333: goto_w -> 24782
    //   24338: new com/crushftp/client/VRL
    //   24341: dup
    //   24342: aload #9
    //   24344: ldc_w 'url'
    //   24347: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   24350: invokestatic getBaseUrl : (Ljava/lang/String;)Ljava/lang/String;
    //   24353: invokespecial <init> : (Ljava/lang/String;)V
    //   24356: aload #10
    //   24358: invokestatic openConnection : (Lcom/crushftp/client/VRL;Ljava/util/Properties;)Lcom/crushftp/client/URLConnection;
    //   24361: astore #11
    //   24363: aload #11
    //   24365: ldc_w 'POST'
    //   24368: invokevirtual setRequestMethod : (Ljava/lang/String;)V
    //   24371: aload_0
    //   24372: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   24375: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   24378: getfield uVFS : Lcrushftp/server/VFS;
    //   24381: aload #9
    //   24383: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   24386: astore #13
    //   24388: aload #11
    //   24390: ldc_w 'Cookie'
    //   24393: new java/lang/StringBuffer
    //   24396: dup
    //   24397: ldc_w 'CrushAuth='
    //   24400: invokespecial <init> : (Ljava/lang/String;)V
    //   24403: aload #13
    //   24405: ldc_w 'crushAuth'
    //   24408: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   24411: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   24414: ldc_w ';'
    //   24417: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24420: invokevirtual toString : ()Ljava/lang/String;
    //   24423: invokevirtual setRequestProperty : (Ljava/lang/String;Ljava/lang/String;)V
    //   24426: aload #11
    //   24428: iconst_0
    //   24429: invokevirtual setUseCaches : (Z)V
    //   24432: aload #11
    //   24434: iconst_1
    //   24435: invokevirtual setDoOutput : (Z)V
    //   24438: new java/lang/StringBuffer
    //   24441: dup
    //   24442: ldc_w 'command=setPreview&c2f='
    //   24445: invokespecial <init> : (Ljava/lang/String;)V
    //   24448: aload #13
    //   24450: ldc_w 'crushAuth'
    //   24453: ldc ''
    //   24455: invokevirtual getConfig : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24458: aload #13
    //   24460: ldc_w 'crushAuth'
    //   24463: ldc ''
    //   24465: invokevirtual getConfig : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24468: invokevirtual length : ()I
    //   24471: iconst_4
    //   24472: isub
    //   24473: invokevirtual substring : (I)Ljava/lang/String;
    //   24476: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24479: ldc_w '&serverGroup_original='
    //   24482: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24485: aload_1
    //   24486: ldc_w 'serverGroup_original'
    //   24489: ldc ''
    //   24491: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24494: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24497: ldc_w '&exif_key='
    //   24500: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24503: aload_1
    //   24504: ldc_w 'exif_key'
    //   24507: ldc ''
    //   24509: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24512: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24515: ldc_w '&exif_val='
    //   24518: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24521: aload_1
    //   24522: ldc_w 'exif_val'
    //   24525: ldc ''
    //   24527: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24530: invokestatic xss_strip : (Ljava/lang/String;)Ljava/lang/String;
    //   24533: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24536: ldc_w '&form_id='
    //   24539: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24542: aload_1
    //   24543: ldc_w 'form_id'
    //   24546: ldc ''
    //   24548: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24551: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24554: ldc_w '&type='
    //   24557: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24560: aload_1
    //   24561: ldc_w 'type'
    //   24564: ldc ''
    //   24566: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24569: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24572: ldc_w '&object_type='
    //   24575: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24578: aload_1
    //   24579: ldc_w 'object_type'
    //   24582: ldc ''
    //   24584: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24587: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24590: ldc_w '&serverGroup_backup='
    //   24593: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24596: aload_1
    //   24597: ldc_w 'serverGroup_backup'
    //   24600: ldc ''
    //   24602: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24605: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24608: ldc_w '&instance='
    //   24611: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24614: aload_1
    //   24615: ldc_w 'instance'
    //   24618: ldc ''
    //   24620: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24623: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24626: ldc_w '&serverGroup='
    //   24629: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24632: aload_1
    //   24633: ldc_w 'serverGroup'
    //   24636: ldc ''
    //   24638: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24641: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24644: ldc_w '&path='
    //   24647: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24650: aload_1
    //   24651: ldc_w 'path'
    //   24654: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   24657: invokestatic url_encode : (Ljava/lang/String;)Ljava/lang/String;
    //   24660: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   24663: invokevirtual toString : ()Ljava/lang/String;
    //   24666: ldc_w 'UTF8'
    //   24669: invokevirtual getBytes : (Ljava/lang/String;)[B
    //   24672: astore #14
    //   24674: aload #11
    //   24676: aload #14
    //   24678: arraylength
    //   24679: i2l
    //   24680: invokevirtual setLength : (J)V
    //   24683: aload #11
    //   24685: invokevirtual getOutputStream : ()Ljava/io/OutputStream;
    //   24688: astore #15
    //   24690: aload #15
    //   24692: aload #14
    //   24694: invokevirtual write : ([B)V
    //   24697: aload #15
    //   24699: invokevirtual flush : ()V
    //   24702: aload #11
    //   24704: invokevirtual getResponseCode : ()I
    //   24707: sipush #302
    //   24710: if_icmpeq -> 24718
    //   24713: goto_w -> 24761
    //   24718: aload #13
    //   24720: ldc_w 'error'
    //   24723: ldc_w 'Logged out.'
    //   24726: invokevirtual setConfig : (Ljava/lang/String;Ljava/lang/Object;)V
    //   24729: aload #11
    //   24731: invokevirtual disconnect : ()V
    //   24734: aload_0
    //   24735: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   24738: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   24741: getfield uVFS : Lcrushftp/server/VFS;
    //   24744: aload #13
    //   24746: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   24749: pop
    //   24750: ldc2_w 100
    //   24753: invokestatic sleep : (J)V
    //   24756: goto_w -> 24782
    //   24761: aload_0
    //   24762: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   24765: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   24768: getfield uVFS : Lcrushftp/server/VFS;
    //   24771: aload #13
    //   24773: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   24776: pop
    //   24777: goto_w -> 24797
    //   24782: iload #12
    //   24784: iinc #12, 1
    //   24787: bipush #100
    //   24789: if_icmpge -> 24797
    //   24792: goto_w -> 24338
    //   24797: new java/io/ByteArrayOutputStream
    //   24800: dup
    //   24801: invokespecial <init> : ()V
    //   24804: astore #13
    //   24806: aload #11
    //   24808: invokevirtual getInputStream : ()Ljava/io/InputStream;
    //   24811: aload #13
    //   24813: iconst_0
    //   24814: iconst_1
    //   24815: iconst_1
    //   24816: invokestatic streamCopier : (Ljava/io/InputStream;Ljava/io/OutputStream;ZZZ)V
    //   24819: aload #11
    //   24821: invokevirtual disconnect : ()V
    //   24824: aload_0
    //   24825: new java/lang/String
    //   24828: dup
    //   24829: aload #13
    //   24831: invokevirtual toByteArray : ()[B
    //   24834: invokespecial <init> : ([B)V
    //   24837: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   24840: ireturn
    //   24841: aconst_null
    //   24842: astore #8
    //   24844: iconst_0
    //   24845: istore #9
    //   24847: aload_1
    //   24848: ldc_w 'exif_key'
    //   24851: ldc ''
    //   24853: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24856: ldc_w 'crushftp_'
    //   24859: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   24862: ifne -> 24870
    //   24865: goto_w -> 25212
    //   24870: getstatic crushftp/server/ServerStatus.server_settings : Ljava/util/Properties;
    //   24873: ldc_w 'CustomForms'
    //   24876: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   24879: checkcast java/util/Vector
    //   24882: astore #10
    //   24884: aload #10
    //   24886: ifnonnull -> 24894
    //   24889: goto_w -> 25212
    //   24894: iconst_0
    //   24895: istore #11
    //   24897: goto_w -> 24956
    //   24902: aload #10
    //   24904: iload #11
    //   24906: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   24909: checkcast java/util/Properties
    //   24912: astore #12
    //   24914: aload #12
    //   24916: ldc_w 'name'
    //   24919: ldc ''
    //   24921: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24924: aload_1
    //   24925: ldc_w 'form_id'
    //   24928: ldc ''
    //   24930: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24933: invokevirtual equals : (Ljava/lang/Object;)Z
    //   24936: ifne -> 24944
    //   24939: goto_w -> 24953
    //   24944: aload #12
    //   24946: astore #8
    //   24948: goto_w -> 24971
    //   24953: iinc #11, 1
    //   24956: iload #11
    //   24958: aload #10
    //   24960: invokevirtual size : ()I
    //   24963: if_icmpge -> 24971
    //   24966: goto_w -> 24902
    //   24971: aload #8
    //   24973: ifnonnull -> 24981
    //   24976: goto_w -> 25212
    //   24981: aload #8
    //   24983: ldc_w 'entries'
    //   24986: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   24989: ifeq -> 24997
    //   24992: goto_w -> 25013
    //   24997: aload #8
    //   24999: ldc_w 'entries'
    //   25002: new java/util/Vector
    //   25005: dup
    //   25006: invokespecial <init> : ()V
    //   25009: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   25012: pop
    //   25013: aload #8
    //   25015: ldc_w 'entries'
    //   25018: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   25021: checkcast java/util/Vector
    //   25024: astore #11
    //   25026: iconst_0
    //   25027: istore #12
    //   25029: goto_w -> 25197
    //   25034: aload #11
    //   25036: iload #12
    //   25038: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   25041: checkcast java/util/Properties
    //   25044: astore #13
    //   25046: aload #13
    //   25048: ldc_w 'type'
    //   25051: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   25054: invokevirtual trim : ()Ljava/lang/String;
    //   25057: ldc_w 'label'
    //   25060: invokevirtual equals : (Ljava/lang/Object;)Z
    //   25063: ifeq -> 25071
    //   25066: goto_w -> 25194
    //   25071: aload #13
    //   25073: ldc_w 'name'
    //   25076: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   25079: aload_1
    //   25080: ldc_w 'exif_key'
    //   25083: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   25086: invokevirtual equals : (Ljava/lang/Object;)Z
    //   25089: ifne -> 25097
    //   25092: goto_w -> 25100
    //   25097: iconst_1
    //   25098: istore #9
    //   25100: aload #13
    //   25102: ldc_w 'value'
    //   25105: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   25108: ldc_w '{user_name}'
    //   25111: invokevirtual indexOf : (Ljava/lang/String;)I
    //   25114: ifge -> 25122
    //   25117: goto_w -> 25194
    //   25122: aload_1
    //   25123: ldc_w 'exif_key'
    //   25126: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   25129: ldc_w 'crushftp_locked_user'
    //   25132: invokevirtual indexOf : (Ljava/lang/String;)I
    //   25135: ifge -> 25143
    //   25138: goto_w -> 25194
    //   25143: aload_1
    //   25144: ldc_w 'exif_val'
    //   25147: aload #13
    //   25149: ldc_w 'value'
    //   25152: ldc ''
    //   25154: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   25157: aload_0
    //   25158: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   25161: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   25164: getfield user : Ljava/util/Properties;
    //   25167: aload_0
    //   25168: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   25171: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   25174: getfield user_info : Ljava/util/Properties;
    //   25177: aload_0
    //   25178: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   25181: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   25184: invokestatic change_vars_to_values_static : (Ljava/lang/String;Ljava/util/Properties;Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;)Ljava/lang/String;
    //   25187: invokestatic xss_strip : (Ljava/lang/String;)Ljava/lang/String;
    //   25190: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   25193: pop
    //   25194: iinc #12, 1
    //   25197: iload #12
    //   25199: aload #11
    //   25201: invokevirtual size : ()I
    //   25204: if_icmpge -> 25212
    //   25207: goto_w -> 25034
    //   25212: ldc_w 'No preview converters found.'
    //   25215: astore #10
    //   25217: aload_1
    //   25218: ldc_w 'path'
    //   25221: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   25224: bipush #62
    //   25226: bipush #95
    //   25228: invokevirtual replace : (CC)Ljava/lang/String;
    //   25231: bipush #60
    //   25233: bipush #95
    //   25235: invokevirtual replace : (CC)Ljava/lang/String;
    //   25238: ldc_w ';'
    //   25241: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   25244: astore #11
    //   25246: iconst_0
    //   25247: istore #12
    //   25249: goto_w -> 25802
    //   25254: aload #11
    //   25256: iload #12
    //   25258: aaload
    //   25259: astore #13
    //   25261: aload_0
    //   25262: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   25265: aload #13
    //   25267: invokevirtual setupCurrentDir : (Ljava/lang/String;)V
    //   25270: aload_0
    //   25271: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   25274: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   25277: getfield uVFS : Lcrushftp/server/VFS;
    //   25280: aload_0
    //   25281: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   25284: invokevirtual pwd : ()Ljava/lang/String;
    //   25287: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   25290: astore #14
    //   25292: new com/crushftp/client/VRL
    //   25295: dup
    //   25296: aload #14
    //   25298: ldc_w 'url'
    //   25301: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   25304: invokespecial <init> : (Ljava/lang/String;)V
    //   25307: invokevirtual getPath : ()Ljava/lang/String;
    //   25310: invokestatic dots : (Ljava/lang/String;)Ljava/lang/String;
    //   25313: astore #15
    //   25315: aload_0
    //   25316: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   25319: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   25322: aload #13
    //   25324: ldc_w 'STOR'
    //   25327: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   25330: ifeq -> 25338
    //   25333: goto_w -> 25369
    //   25338: new java/lang/StringBuffer
    //   25341: dup
    //   25342: ldc_w 'You need upload permissions to edit exif tags on a file:'
    //   25345: invokespecial <init> : (Ljava/lang/String;)V
    //   25348: aload_1
    //   25349: ldc_w 'path'
    //   25352: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   25355: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   25358: ldc_w '\\r\\n'
    //   25361: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   25364: invokevirtual toString : ()Ljava/lang/String;
    //   25367: astore #10
    //   25369: aload_1
    //   25370: ldc_w 'object_type'
    //   25373: ldc_w 'image'
    //   25376: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   25379: ldc_w 'exif'
    //   25382: invokevirtual equals : (Ljava/lang/Object;)Z
    //   25385: ifne -> 25393
    //   25388: goto_w -> 25778
    //   25393: iconst_0
    //   25394: istore #16
    //   25396: goto_w -> 25552
    //   25401: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   25404: getfield previewWorkers : Ljava/util/Vector;
    //   25407: iload #16
    //   25409: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   25412: checkcast crushftp/handlers/PreviewWorker
    //   25415: astore #17
    //   25417: aload #17
    //   25419: getfield prefs : Ljava/util/Properties;
    //   25422: ldc_w 'preview_enabled'
    //   25425: ldc 'false'
    //   25427: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   25430: ldc 'true'
    //   25432: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   25435: ifne -> 25443
    //   25438: goto_w -> 25549
    //   25443: aload #17
    //   25445: aload #13
    //   25447: invokestatic last : (Ljava/lang/String;)Ljava/lang/String;
    //   25450: aload #14
    //   25452: invokevirtual checkExtension : (Ljava/lang/String;Ljava/util/Properties;)Z
    //   25455: ifne -> 25463
    //   25458: goto_w -> 25549
    //   25463: aload_1
    //   25464: ldc_w 'exif_key'
    //   25467: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   25470: ldc_w 'crushftp_'
    //   25473: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   25476: ifeq -> 25484
    //   25479: goto_w -> 25549
    //   25484: aload #17
    //   25486: aload #15
    //   25488: new java/lang/StringBuffer
    //   25491: dup
    //   25492: aload #14
    //   25494: ldc_w 'url'
    //   25497: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   25500: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   25503: invokespecial <init> : (Ljava/lang/String;)V
    //   25506: ldc_w '/p1/'
    //   25509: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   25512: invokevirtual toString : ()Ljava/lang/String;
    //   25515: invokestatic getDestPath2 : (Ljava/lang/String;)Ljava/lang/String;
    //   25518: aload_1
    //   25519: ldc_w 'exif_key'
    //   25522: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   25525: aload_1
    //   25526: ldc_w 'exif_val'
    //   25529: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   25532: invokestatic xss_strip : (Ljava/lang/String;)Ljava/lang/String;
    //   25535: invokevirtual setExifInfo : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Properties;
    //   25538: pop
    //   25539: ldc_w 'Success'
    //   25542: astore #10
    //   25544: goto_w -> 25571
    //   25549: iinc #16, 1
    //   25552: iload #16
    //   25554: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   25557: getfield previewWorkers : Ljava/util/Vector;
    //   25560: invokevirtual size : ()I
    //   25563: if_icmpge -> 25571
    //   25566: goto_w -> 25401
    //   25571: iload #9
    //   25573: ifne -> 25581
    //   25576: goto_w -> 25778
    //   25581: new java/lang/StringBuffer
    //   25584: dup
    //   25585: aload #14
    //   25587: ldc_w 'url'
    //   25590: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   25593: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   25596: invokespecial <init> : (Ljava/lang/String;)V
    //   25599: ldc_w '/p1/'
    //   25602: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   25605: invokevirtual toString : ()Ljava/lang/String;
    //   25608: invokestatic getDestPath2 : (Ljava/lang/String;)Ljava/lang/String;
    //   25611: invokestatic getMetaInfo : (Ljava/lang/String;)Ljava/util/Properties;
    //   25614: astore #16
    //   25616: aload #16
    //   25618: ldc_w 'crushftp_locked_user'
    //   25621: ldc ''
    //   25623: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   25626: ldc ''
    //   25628: invokevirtual equals : (Ljava/lang/Object;)Z
    //   25631: ifeq -> 25639
    //   25634: goto_w -> 25699
    //   25639: aload #16
    //   25641: ldc_w 'crushftp_locked_user'
    //   25644: ldc ''
    //   25646: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   25649: aload_0
    //   25650: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   25653: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   25656: ldc 'user_name'
    //   25658: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   25661: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   25664: ifeq -> 25672
    //   25667: goto_w -> 25699
    //   25672: aload_0
    //   25673: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   25676: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   25679: ldc_w 'site'
    //   25682: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   25685: ldc_w '(CONNECT)'
    //   25688: invokevirtual indexOf : (Ljava/lang/String;)I
    //   25691: ifge -> 25699
    //   25694: goto_w -> 25768
    //   25699: aload #16
    //   25701: aload_1
    //   25702: ldc_w 'exif_key'
    //   25705: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   25708: aload_1
    //   25709: ldc_w 'exif_val'
    //   25712: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   25715: invokestatic xss_strip : (Ljava/lang/String;)Ljava/lang/String;
    //   25718: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   25721: pop
    //   25722: new java/lang/StringBuffer
    //   25725: dup
    //   25726: aload #14
    //   25728: ldc_w 'url'
    //   25731: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   25734: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   25737: invokespecial <init> : (Ljava/lang/String;)V
    //   25740: ldc_w '/p1/'
    //   25743: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   25746: invokevirtual toString : ()Ljava/lang/String;
    //   25749: invokestatic getDestPath2 : (Ljava/lang/String;)Ljava/lang/String;
    //   25752: aload #16
    //   25754: invokestatic setMetaInfo : (Ljava/lang/String;Ljava/util/Properties;)Ljava/util/Properties;
    //   25757: pop
    //   25758: ldc_w 'Success'
    //   25761: astore #10
    //   25763: goto_w -> 25773
    //   25768: ldc_w 'FAILURE: Item already locked.'
    //   25771: astore #10
    //   25773: goto_w -> 25815
    //   25778: aload #10
    //   25780: ldc_w 'Success'
    //   25783: invokevirtual equals : (Ljava/lang/Object;)Z
    //   25786: ifeq -> 25794
    //   25789: goto_w -> 25799
    //   25794: goto_w -> 25815
    //   25799: iinc #12, 1
    //   25802: iload #12
    //   25804: aload #11
    //   25806: arraylength
    //   25807: if_icmpge -> 25815
    //   25810: goto_w -> 25254
    //   25815: new java/lang/StringBuffer
    //   25818: dup
    //   25819: ldc_w '<commandResult><response>'
    //   25822: invokespecial <init> : (Ljava/lang/String;)V
    //   25825: aload #10
    //   25827: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   25830: ldc_w '</response></commandResult>'
    //   25833: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   25836: invokevirtual toString : ()Ljava/lang/String;
    //   25839: astore #12
    //   25841: aload_0
    //   25842: aload #12
    //   25844: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   25847: ireturn
    //   25848: aload #5
    //   25850: ldc_w 'siteCommand'
    //   25853: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   25856: ifne -> 25864
    //   25859: goto_w -> 26411
    //   25864: aload_1
    //   25865: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   25868: pop
    //   25869: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   25872: astore #8
    //   25874: aload_0
    //   25875: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   25878: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   25881: ldc_w 'the_command'
    //   25884: ldc_w 'SITE'
    //   25887: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   25890: aload_1
    //   25891: ldc_w 'siteCommand'
    //   25894: ldc ''
    //   25896: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   25899: astore #9
    //   25901: aload_0
    //   25902: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   25905: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   25908: ldc_w 'the_command_data'
    //   25911: aload #9
    //   25913: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   25916: aconst_null
    //   25917: astore #10
    //   25919: aload #9
    //   25921: ldc_w 'BLOCK_UPLOADS'
    //   25924: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   25927: ifeq -> 25935
    //   25930: goto_w -> 25951
    //   25935: aload #9
    //   25937: ldc_w 'ABOR'
    //   25940: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   25943: ifne -> 25951
    //   25946: goto_w -> 26041
    //   25951: ldc_w 'blocked'
    //   25954: astore #10
    //   25956: getstatic crushftp/handlers/SharedSessionReplicated.send_queues : Ljava/util/Properties;
    //   25959: invokevirtual size : ()I
    //   25962: ifgt -> 25970
    //   25965: goto_w -> 26023
    //   25970: new java/util/Properties
    //   25973: dup
    //   25974: invokespecial <init> : ()V
    //   25977: astore #11
    //   25979: aload #11
    //   25981: ldc_w 'the_command_data'
    //   25984: aload #9
    //   25986: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   25989: pop
    //   25990: aload #11
    //   25992: ldc_w 'CrushAuth'
    //   25995: aload_0
    //   25996: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   25999: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   26002: invokevirtual getId : ()Ljava/lang/String;
    //   26005: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   26008: pop
    //   26009: invokestatic makeBoundary : ()Ljava/lang/String;
    //   26012: ldc_w 'crushftp.server.ServerSessionAjax.doFileAbortBlock'
    //   26015: ldc_w 'info'
    //   26018: aload #11
    //   26020: invokestatic send : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
    //   26023: aload_0
    //   26024: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   26027: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   26030: aload #9
    //   26032: iconst_1
    //   26033: invokevirtual doFileAbortBlock : (Ljava/lang/String;Z)V
    //   26036: goto_w -> 26370
    //   26041: aload_0
    //   26042: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   26045: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   26048: getfield uVFS : Lcrushftp/server/VFS;
    //   26051: aload_0
    //   26052: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   26055: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   26058: getfield uVFS : Lcrushftp/server/VFS;
    //   26061: aload_0
    //   26062: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   26065: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   26068: ldc_w 'root_dir'
    //   26071: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   26074: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   26077: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   26080: astore #11
    //   26082: new com/crushftp/client/VRL
    //   26085: dup
    //   26086: aload_0
    //   26087: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   26090: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   26093: getfield uVFS : Lcrushftp/server/VFS;
    //   26096: aload_0
    //   26097: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   26100: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   26103: ldc_w 'root_dir'
    //   26106: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   26109: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   26112: ldc_w 'url'
    //   26115: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   26118: invokespecial <init> : (Ljava/lang/String;)V
    //   26121: astore #12
    //   26123: ldc_w 'site_ack'
    //   26126: invokestatic BG : (Ljava/lang/String;)Z
    //   26129: ifne -> 26137
    //   26132: goto_w -> 26162
    //   26137: aload #11
    //   26139: new java/lang/StringBuffer
    //   26142: dup
    //   26143: ldc_w 'SITE '
    //   26146: invokespecial <init> : (Ljava/lang/String;)V
    //   26149: aload #9
    //   26151: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26154: invokevirtual toString : ()Ljava/lang/String;
    //   26157: invokevirtual doCommand : (Ljava/lang/String;)Ljava/lang/String;
    //   26160: astore #10
    //   26162: aload #10
    //   26164: ifnull -> 26172
    //   26167: goto_w -> 26308
    //   26172: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   26175: new java/lang/StringBuffer
    //   26178: dup
    //   26179: ldc_w 'crushftp.activeUpload.info'
    //   26182: invokespecial <init> : (Ljava/lang/String;)V
    //   26185: aload_0
    //   26186: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   26189: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   26192: invokevirtual getId : ()Ljava/lang/String;
    //   26195: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26198: invokevirtual toString : ()Ljava/lang/String;
    //   26201: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   26204: checkcast java/util/Properties
    //   26207: astore #13
    //   26209: aload #13
    //   26211: invokevirtual keys : ()Ljava/util/Enumeration;
    //   26214: astore #14
    //   26216: ldc ''
    //   26218: astore #10
    //   26220: goto_w -> 26288
    //   26225: aload #14
    //   26227: invokeinterface nextElement : ()Ljava/lang/Object;
    //   26232: invokevirtual toString : ()Ljava/lang/String;
    //   26235: astore #15
    //   26237: aload #13
    //   26239: aload #15
    //   26241: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   26244: invokevirtual toString : ()Ljava/lang/String;
    //   26247: astore #16
    //   26249: new java/lang/StringBuffer
    //   26252: dup
    //   26253: aload #10
    //   26255: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   26258: invokespecial <init> : (Ljava/lang/String;)V
    //   26261: aload #15
    //   26263: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26266: ldc_w ':'
    //   26269: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26272: aload #16
    //   26274: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26277: ldc_w '\\r\\n'
    //   26280: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26283: invokevirtual toString : ()Ljava/lang/String;
    //   26286: astore #10
    //   26288: aload #14
    //   26290: invokeinterface hasMoreElements : ()Z
    //   26295: ifeq -> 26303
    //   26298: goto_w -> 26225
    //   26303: goto_w -> 26316
    //   26308: aload #10
    //   26310: iconst_4
    //   26311: invokevirtual substring : (I)Ljava/lang/String;
    //   26314: astore #10
    //   26316: aload_0
    //   26317: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   26320: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   26323: getfield uVFS : Lcrushftp/server/VFS;
    //   26326: invokevirtual reset : ()V
    //   26329: goto_w -> 26365
    //   26334: astore #18
    //   26336: jsr_w -> 26344
    //   26341: aload #18
    //   26343: athrow
    //   26344: astore #17
    //   26346: aload_0
    //   26347: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   26350: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   26353: getfield uVFS : Lcrushftp/server/VFS;
    //   26356: aload #11
    //   26358: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   26361: astore #11
    //   26363: ret #17
    //   26365: jsr_w -> 26344
    //   26370: new java/lang/StringBuffer
    //   26373: dup
    //   26374: aload #8
    //   26376: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   26379: invokespecial <init> : (Ljava/lang/String;)V
    //   26382: ldc_w '<commandResult><response>'
    //   26385: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26388: aload #10
    //   26390: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26393: ldc_w '</response></commandResult>'
    //   26396: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26399: invokevirtual toString : ()Ljava/lang/String;
    //   26402: astore #8
    //   26404: aload_0
    //   26405: aload #8
    //   26407: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   26410: ireturn
    //   26411: aload #5
    //   26413: ldc_w 'sitePlugin'
    //   26416: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   26419: ifne -> 26427
    //   26422: goto_w -> 26656
    //   26427: aload #4
    //   26429: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   26432: ldc_w '(SITE_PLUGIN)'
    //   26435: invokevirtual indexOf : (Ljava/lang/String;)I
    //   26438: ifge -> 26446
    //   26441: goto_w -> 26656
    //   26446: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   26449: astore #8
    //   26451: aload_0
    //   26452: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   26455: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   26458: ldc_w 'the_command'
    //   26461: ldc_w 'SITE'
    //   26464: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   26467: aload_1
    //   26468: ldc_w 'siteCommand'
    //   26471: ldc ''
    //   26473: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   26476: astore #9
    //   26478: aload_0
    //   26479: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   26482: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   26485: ldc_w 'the_command_data'
    //   26488: aload #9
    //   26490: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   26493: new java/util/Properties
    //   26496: dup
    //   26497: invokespecial <init> : ()V
    //   26500: astore #10
    //   26502: aload #10
    //   26504: ldc_w 'url'
    //   26507: ldc_w 'ftp://127.0.0.1:56789/'
    //   26510: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   26513: pop
    //   26514: aload #10
    //   26516: ldc_w 'the_file_path'
    //   26519: aload_1
    //   26520: ldc_w 'the_file_path'
    //   26523: ldc_w '/'
    //   26526: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   26529: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   26532: pop
    //   26533: aload #10
    //   26535: ldc_w 'the_file_size'
    //   26538: ldc_w '1'
    //   26541: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   26544: pop
    //   26545: aload #10
    //   26547: ldc_w 'event_name'
    //   26550: aload_1
    //   26551: ldc_w 'event'
    //   26554: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   26557: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   26560: pop
    //   26561: aload #10
    //   26563: ldc_w 'the_file_name'
    //   26566: aload_1
    //   26567: ldc_w 'the_file_name'
    //   26570: ldc_w 'none'
    //   26573: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   26576: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   26579: pop
    //   26580: aload #10
    //   26582: aload_1
    //   26583: invokevirtual putAll : (Ljava/util/Map;)V
    //   26586: aload_0
    //   26587: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   26590: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   26593: ldc_w 'SITE'
    //   26596: aload #10
    //   26598: invokevirtual do_event5 : (Ljava/lang/String;Ljava/util/Properties;)Ljava/util/Properties;
    //   26601: pop
    //   26602: aload #10
    //   26604: ldc_w 'execute_log'
    //   26607: ldc_w 'No Result'
    //   26610: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   26613: astore #11
    //   26615: new java/lang/StringBuffer
    //   26618: dup
    //   26619: aload #8
    //   26621: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   26624: invokespecial <init> : (Ljava/lang/String;)V
    //   26627: ldc_w '<commandResult><response>'
    //   26630: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26633: aload #11
    //   26635: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26638: ldc_w '</response></commandResult>'
    //   26641: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26644: invokevirtual toString : ()Ljava/lang/String;
    //   26647: astore #8
    //   26649: aload_0
    //   26650: aload #8
    //   26652: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   26655: ireturn
    //   26656: aload #5
    //   26658: ldc_w 'getUploadStatus'
    //   26661: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   26664: ifne -> 26672
    //   26667: goto_w -> 26885
    //   26672: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   26675: astore #8
    //   26677: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   26680: new java/lang/StringBuffer
    //   26683: dup
    //   26684: ldc_w 'crushftp.activeUpload.info'
    //   26687: invokespecial <init> : (Ljava/lang/String;)V
    //   26690: aload_0
    //   26691: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   26694: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   26697: invokevirtual getId : ()Ljava/lang/String;
    //   26700: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26703: invokevirtual toString : ()Ljava/lang/String;
    //   26706: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   26709: checkcast java/util/Properties
    //   26712: astore #9
    //   26714: ldc ''
    //   26716: astore #10
    //   26718: aload #9
    //   26720: ifnonnull -> 26728
    //   26723: goto_w -> 26844
    //   26728: aload #9
    //   26730: aload_1
    //   26731: ldc_w 'itemName'
    //   26734: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   26737: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   26740: astore #10
    //   26742: aload #10
    //   26744: ifnonnull -> 26752
    //   26747: goto_w -> 26844
    //   26752: aload #10
    //   26754: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   26757: ldc_w 'DONE:'
    //   26760: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   26763: ifne -> 26771
    //   26766: goto_w -> 26789
    //   26771: aload #9
    //   26773: aload_1
    //   26774: ldc_w 'itemName'
    //   26777: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   26780: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   26783: pop
    //   26784: goto_w -> 26844
    //   26789: aload #10
    //   26791: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   26794: ldc_w 'PROGRESS:'
    //   26797: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   26800: ifeq -> 26808
    //   26803: goto_w -> 26844
    //   26808: aload #10
    //   26810: ldc_w 'ERROR:'
    //   26813: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   26816: ifeq -> 26824
    //   26819: goto_w -> 26844
    //   26824: new java/lang/StringBuffer
    //   26827: dup
    //   26828: ldc_w 'ERROR:'
    //   26831: invokespecial <init> : (Ljava/lang/String;)V
    //   26834: aload #10
    //   26836: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26839: invokevirtual toString : ()Ljava/lang/String;
    //   26842: astore #10
    //   26844: new java/lang/StringBuffer
    //   26847: dup
    //   26848: aload #8
    //   26850: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   26853: invokespecial <init> : (Ljava/lang/String;)V
    //   26856: ldc_w '<commandResult><response>'
    //   26859: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26862: aload #10
    //   26864: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26867: ldc_w '</response></commandResult>'
    //   26870: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26873: invokevirtual toString : ()Ljava/lang/String;
    //   26876: astore #8
    //   26878: aload_0
    //   26879: aload #8
    //   26881: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   26884: ireturn
    //   26885: aload #5
    //   26887: ldc_w 'getTime'
    //   26890: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   26893: ifne -> 26901
    //   26896: goto_w -> 26948
    //   26901: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   26904: astore #8
    //   26906: new java/lang/StringBuffer
    //   26909: dup
    //   26910: aload #8
    //   26912: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   26915: invokespecial <init> : (Ljava/lang/String;)V
    //   26918: ldc_w '<commandResult><response>'
    //   26921: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26924: invokestatic currentTimeMillis : ()J
    //   26927: invokevirtual append : (J)Ljava/lang/StringBuffer;
    //   26930: ldc_w '</response></commandResult>'
    //   26933: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   26936: invokevirtual toString : ()Ljava/lang/String;
    //   26939: astore #8
    //   26941: aload_0
    //   26942: aload #8
    //   26944: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   26947: ireturn
    //   26948: aload #5
    //   26950: ldc_w 'lookup_form_field'
    //   26953: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   26956: ifne -> 26964
    //   26959: goto_w -> 29260
    //   26964: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   26967: astore #8
    //   26969: getstatic crushftp/server/ServerStatus.server_settings : Ljava/util/Properties;
    //   26972: ldc_w 'CustomForms'
    //   26975: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   26978: checkcast java/util/Vector
    //   26981: astore #9
    //   26983: aload #9
    //   26985: ifnonnull -> 26993
    //   26988: goto_w -> 29252
    //   26993: aconst_null
    //   26994: astore #10
    //   26996: iconst_0
    //   26997: istore #11
    //   26999: goto_w -> 27056
    //   27004: aload #9
    //   27006: iload #11
    //   27008: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   27011: checkcast java/util/Properties
    //   27014: astore #12
    //   27016: aload #12
    //   27018: ldc_w 'name'
    //   27021: ldc ''
    //   27023: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   27026: aload_1
    //   27027: ldc_w 'form_name'
    //   27030: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   27033: invokevirtual equals : (Ljava/lang/Object;)Z
    //   27036: ifne -> 27044
    //   27039: goto_w -> 27053
    //   27044: aload #12
    //   27046: astore #10
    //   27048: goto_w -> 27071
    //   27053: iinc #11, 1
    //   27056: iload #11
    //   27058: aload #9
    //   27060: invokevirtual size : ()I
    //   27063: if_icmpge -> 27071
    //   27066: goto_w -> 27004
    //   27071: aload #10
    //   27073: ifnonnull -> 27081
    //   27076: goto_w -> 29252
    //   27081: aconst_null
    //   27082: astore #11
    //   27084: aload #10
    //   27086: ldc_w 'entries'
    //   27089: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   27092: ifeq -> 27100
    //   27095: goto_w -> 27116
    //   27100: aload #10
    //   27102: ldc_w 'entries'
    //   27105: new java/util/Vector
    //   27108: dup
    //   27109: invokespecial <init> : ()V
    //   27112: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   27115: pop
    //   27116: aload #10
    //   27118: ldc_w 'entries'
    //   27121: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   27124: checkcast java/util/Vector
    //   27127: astore #12
    //   27129: iconst_0
    //   27130: istore #13
    //   27132: goto_w -> 27192
    //   27137: aload #12
    //   27139: iload #13
    //   27141: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   27144: checkcast java/util/Properties
    //   27147: astore #14
    //   27149: aload #14
    //   27151: ldc_w 'name'
    //   27154: ldc ''
    //   27156: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   27159: invokevirtual trim : ()Ljava/lang/String;
    //   27162: aload_1
    //   27163: ldc_w 'from_element_name'
    //   27166: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   27169: invokevirtual equals : (Ljava/lang/Object;)Z
    //   27172: ifeq -> 27180
    //   27175: goto_w -> 27189
    //   27180: aload #14
    //   27182: astore #11
    //   27184: goto_w -> 27207
    //   27189: iinc #13, 1
    //   27192: iload #13
    //   27194: aload #12
    //   27196: invokevirtual size : ()I
    //   27199: if_icmpge -> 27207
    //   27202: goto_w -> 27137
    //   27207: aload #11
    //   27209: ifnonnull -> 27217
    //   27212: goto_w -> 29252
    //   27217: new java/util/Vector
    //   27220: dup
    //   27221: invokespecial <init> : ()V
    //   27224: astore #13
    //   27226: aload_1
    //   27227: ldc_w 'q'
    //   27230: ldc ''
    //   27232: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   27235: astore #14
    //   27237: aload #11
    //   27239: ldc_w 'lookup_type'
    //   27242: ldc_w 'text'
    //   27245: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   27248: invokevirtual trim : ()Ljava/lang/String;
    //   27251: ldc ''
    //   27253: invokevirtual equals : (Ljava/lang/Object;)Z
    //   27256: ifne -> 27264
    //   27259: goto_w -> 27276
    //   27264: aload #11
    //   27266: ldc_w 'lookup_type'
    //   27269: ldc_w 'text'
    //   27272: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   27275: pop
    //   27276: aload #11
    //   27278: ldc_w 'lookup_type'
    //   27281: ldc_w 'text'
    //   27284: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   27287: invokevirtual trim : ()Ljava/lang/String;
    //   27290: ldc_w 'text'
    //   27293: invokevirtual equals : (Ljava/lang/Object;)Z
    //   27296: ifne -> 27304
    //   27299: goto_w -> 28490
    //   27304: new com/crushftp/client/File_S
    //   27307: dup
    //   27308: new java/lang/StringBuffer
    //   27311: dup
    //   27312: ldc_w 'crushftp.prefs'
    //   27315: invokestatic getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   27318: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   27321: invokespecial <init> : (Ljava/lang/String;)V
    //   27324: ldc_w 'forms/'
    //   27327: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   27330: new java/lang/StringBuffer
    //   27333: dup
    //   27334: aload_1
    //   27335: ldc_w 'form_element_name'
    //   27338: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   27341: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   27344: invokespecial <init> : (Ljava/lang/String;)V
    //   27347: ldc_w '_'
    //   27350: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   27353: aload_0
    //   27354: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   27357: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   27360: ldc 'user_name'
    //   27362: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   27365: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   27368: ldc_w '.txt'
    //   27371: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   27374: invokevirtual toString : ()Ljava/lang/String;
    //   27377: invokestatic dots : (Ljava/lang/String;)Ljava/lang/String;
    //   27380: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   27383: invokevirtual toString : ()Ljava/lang/String;
    //   27386: invokespecial <init> : (Ljava/lang/String;)V
    //   27389: astore #15
    //   27391: ldc_w 'HTTP_SERVER'
    //   27394: iconst_2
    //   27395: new java/lang/StringBuffer
    //   27398: dup
    //   27399: ldc_w 'Looking for lookup file:'
    //   27402: invokespecial <init> : (Ljava/lang/String;)V
    //   27405: aload #15
    //   27407: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   27410: invokevirtual toString : ()Ljava/lang/String;
    //   27413: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   27416: pop
    //   27417: aload #15
    //   27419: invokevirtual exists : ()Z
    //   27422: ifne -> 27430
    //   27425: goto_w -> 27662
    //   27430: new java/io/BufferedReader
    //   27433: dup
    //   27434: new java/io/InputStreamReader
    //   27437: dup
    //   27438: new java/io/FileInputStream
    //   27441: dup
    //   27442: aload #15
    //   27444: invokespecial <init> : (Ljava/io/File;)V
    //   27447: invokespecial <init> : (Ljava/io/InputStream;)V
    //   27450: invokespecial <init> : (Ljava/io/Reader;)V
    //   27453: astore #16
    //   27455: ldc ''
    //   27457: astore #17
    //   27459: goto_w -> 27641
    //   27464: ldc_w 'HTTP_SERVER'
    //   27467: iconst_2
    //   27468: new java/lang/StringBuffer
    //   27471: dup
    //   27472: invokespecial <init> : ()V
    //   27475: aload #15
    //   27477: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   27480: ldc_w ':Checking data:'
    //   27483: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   27486: aload #17
    //   27488: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   27491: invokevirtual toString : ()Ljava/lang/String;
    //   27494: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   27497: pop
    //   27498: aload #17
    //   27500: invokevirtual trim : ()Ljava/lang/String;
    //   27503: astore #18
    //   27505: aload #18
    //   27507: astore #19
    //   27509: new java/util/Properties
    //   27512: dup
    //   27513: invokespecial <init> : ()V
    //   27516: astore #20
    //   27518: aload #17
    //   27520: ldc_w ':'
    //   27523: invokevirtual indexOf : (Ljava/lang/String;)I
    //   27526: ifge -> 27534
    //   27529: goto_w -> 27591
    //   27534: aload #17
    //   27536: ldc_w ':'
    //   27539: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   27542: iconst_0
    //   27543: aaload
    //   27544: invokevirtual trim : ()Ljava/lang/String;
    //   27547: astore #18
    //   27549: aload #17
    //   27551: ldc_w ':'
    //   27554: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   27557: arraylength
    //   27558: iconst_1
    //   27559: if_icmpeq -> 27567
    //   27562: goto_w -> 27576
    //   27567: ldc ''
    //   27569: astore #19
    //   27571: goto_w -> 27591
    //   27576: aload #17
    //   27578: ldc_w ':'
    //   27581: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   27584: iconst_1
    //   27585: aaload
    //   27586: invokevirtual trim : ()Ljava/lang/String;
    //   27589: astore #19
    //   27591: aload #20
    //   27593: ldc_w 'key'
    //   27596: aload #18
    //   27598: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   27601: pop
    //   27602: aload #20
    //   27604: ldc_w 'val'
    //   27607: aload #19
    //   27609: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   27612: pop
    //   27613: aload #18
    //   27615: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   27618: aload #14
    //   27620: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   27623: invokevirtual indexOf : (Ljava/lang/String;)I
    //   27626: ifge -> 27634
    //   27629: goto_w -> 27641
    //   27634: aload #13
    //   27636: aload #20
    //   27638: invokevirtual addElement : (Ljava/lang/Object;)V
    //   27641: aload #16
    //   27643: invokevirtual readLine : ()Ljava/lang/String;
    //   27646: dup
    //   27647: astore #17
    //   27649: ifnull -> 27657
    //   27652: goto_w -> 27464
    //   27657: aload #16
    //   27659: invokevirtual close : ()V
    //   27662: aload_0
    //   27663: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   27666: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   27669: getfield server_item : Ljava/util/Properties;
    //   27672: ldc_w 'linkedServer'
    //   27675: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   27678: invokestatic getGroups : (Ljava/lang/String;)Ljava/util/Properties;
    //   27681: astore #16
    //   27683: aload #16
    //   27685: invokevirtual keys : ()Ljava/util/Enumeration;
    //   27688: astore #17
    //   27690: goto_w -> 28120
    //   27695: aload #17
    //   27697: invokeinterface nextElement : ()Ljava/lang/Object;
    //   27702: invokevirtual toString : ()Ljava/lang/String;
    //   27705: astore #18
    //   27707: aload #16
    //   27709: aload #18
    //   27711: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   27714: checkcast java/util/Vector
    //   27717: astore #19
    //   27719: aload #19
    //   27721: aload_0
    //   27722: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   27725: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   27728: ldc 'user_name'
    //   27730: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   27733: invokevirtual indexOf : (Ljava/lang/Object;)I
    //   27736: ifge -> 27744
    //   27739: goto_w -> 28120
    //   27744: new com/crushftp/client/File_S
    //   27747: dup
    //   27748: new java/lang/StringBuffer
    //   27751: dup
    //   27752: ldc_w 'crushftp.prefs'
    //   27755: invokestatic getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   27758: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   27761: invokespecial <init> : (Ljava/lang/String;)V
    //   27764: ldc_w 'forms/'
    //   27767: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   27770: new java/lang/StringBuffer
    //   27773: dup
    //   27774: aload_1
    //   27775: ldc_w 'form_element_name'
    //   27778: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   27781: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   27784: invokespecial <init> : (Ljava/lang/String;)V
    //   27787: ldc_w '_'
    //   27790: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   27793: aload #18
    //   27795: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   27798: ldc_w '.txt'
    //   27801: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   27804: invokevirtual toString : ()Ljava/lang/String;
    //   27807: invokestatic dots : (Ljava/lang/String;)Ljava/lang/String;
    //   27810: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   27813: invokevirtual toString : ()Ljava/lang/String;
    //   27816: invokespecial <init> : (Ljava/lang/String;)V
    //   27819: astore #20
    //   27821: ldc_w 'HTTP_SERVER'
    //   27824: iconst_2
    //   27825: new java/lang/StringBuffer
    //   27828: dup
    //   27829: ldc_w 'Looking for lookup file:'
    //   27832: invokespecial <init> : (Ljava/lang/String;)V
    //   27835: aload #20
    //   27837: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   27840: invokevirtual toString : ()Ljava/lang/String;
    //   27843: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   27846: pop
    //   27847: aload #20
    //   27849: invokevirtual exists : ()Z
    //   27852: ifne -> 27860
    //   27855: goto_w -> 28120
    //   27860: new java/io/BufferedReader
    //   27863: dup
    //   27864: new java/io/InputStreamReader
    //   27867: dup
    //   27868: new java/io/FileInputStream
    //   27871: dup
    //   27872: aload #20
    //   27874: invokespecial <init> : (Ljava/io/File;)V
    //   27877: invokespecial <init> : (Ljava/io/InputStream;)V
    //   27880: invokespecial <init> : (Ljava/io/Reader;)V
    //   27883: astore #21
    //   27885: ldc ''
    //   27887: astore #22
    //   27889: goto_w -> 28099
    //   27894: ldc_w 'HTTP_SERVER'
    //   27897: iconst_2
    //   27898: new java/lang/StringBuffer
    //   27901: dup
    //   27902: invokespecial <init> : ()V
    //   27905: aload #20
    //   27907: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   27910: ldc_w ':Checking data:'
    //   27913: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   27916: aload #22
    //   27918: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   27921: invokevirtual toString : ()Ljava/lang/String;
    //   27924: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   27927: pop
    //   27928: aload #22
    //   27930: invokevirtual trim : ()Ljava/lang/String;
    //   27933: astore #23
    //   27935: aload #23
    //   27937: astore #24
    //   27939: new java/util/Properties
    //   27942: dup
    //   27943: invokespecial <init> : ()V
    //   27946: astore #25
    //   27948: aload #22
    //   27950: ldc_w ':'
    //   27953: invokevirtual indexOf : (Ljava/lang/String;)I
    //   27956: ifge -> 27964
    //   27959: goto_w -> 28021
    //   27964: aload #22
    //   27966: ldc_w ':'
    //   27969: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   27972: iconst_0
    //   27973: aaload
    //   27974: invokevirtual trim : ()Ljava/lang/String;
    //   27977: astore #23
    //   27979: aload #22
    //   27981: ldc_w ':'
    //   27984: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   27987: arraylength
    //   27988: iconst_1
    //   27989: if_icmpeq -> 27997
    //   27992: goto_w -> 28006
    //   27997: ldc ''
    //   27999: astore #24
    //   28001: goto_w -> 28021
    //   28006: aload #22
    //   28008: ldc_w ':'
    //   28011: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   28014: iconst_1
    //   28015: aaload
    //   28016: invokevirtual trim : ()Ljava/lang/String;
    //   28019: astore #24
    //   28021: new java/lang/StringBuffer
    //   28024: dup
    //   28025: aload #18
    //   28027: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   28030: invokespecial <init> : (Ljava/lang/String;)V
    //   28033: ldc_w ' - '
    //   28036: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   28039: aload #23
    //   28041: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   28044: invokevirtual toString : ()Ljava/lang/String;
    //   28047: astore #23
    //   28049: aload #25
    //   28051: ldc_w 'key'
    //   28054: aload #23
    //   28056: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   28059: pop
    //   28060: aload #25
    //   28062: ldc_w 'val'
    //   28065: aload #24
    //   28067: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   28070: pop
    //   28071: aload #23
    //   28073: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   28076: aload #14
    //   28078: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   28081: invokevirtual indexOf : (Ljava/lang/String;)I
    //   28084: ifge -> 28092
    //   28087: goto_w -> 28099
    //   28092: aload #13
    //   28094: aload #25
    //   28096: invokevirtual addElement : (Ljava/lang/Object;)V
    //   28099: aload #21
    //   28101: invokevirtual readLine : ()Ljava/lang/String;
    //   28104: dup
    //   28105: astore #22
    //   28107: ifnull -> 28115
    //   28110: goto_w -> 27894
    //   28115: aload #21
    //   28117: invokevirtual close : ()V
    //   28120: aload #17
    //   28122: invokeinterface hasMoreElements : ()Z
    //   28127: ifeq -> 28135
    //   28130: goto_w -> 27695
    //   28135: new com/crushftp/client/File_S
    //   28138: dup
    //   28139: new java/lang/StringBuffer
    //   28142: dup
    //   28143: ldc_w 'crushftp.prefs'
    //   28146: invokestatic getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   28149: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   28152: invokespecial <init> : (Ljava/lang/String;)V
    //   28155: ldc_w 'forms/'
    //   28158: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   28161: new java/lang/StringBuffer
    //   28164: dup
    //   28165: aload_1
    //   28166: ldc_w 'form_element_name'
    //   28169: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   28172: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   28175: invokespecial <init> : (Ljava/lang/String;)V
    //   28178: ldc_w '.txt'
    //   28181: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   28184: invokevirtual toString : ()Ljava/lang/String;
    //   28187: invokestatic dots : (Ljava/lang/String;)Ljava/lang/String;
    //   28190: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   28193: invokevirtual toString : ()Ljava/lang/String;
    //   28196: invokespecial <init> : (Ljava/lang/String;)V
    //   28199: astore #18
    //   28201: ldc_w 'HTTP_SERVER'
    //   28204: iconst_2
    //   28205: new java/lang/StringBuffer
    //   28208: dup
    //   28209: ldc_w 'Looking for lookup file:'
    //   28212: invokespecial <init> : (Ljava/lang/String;)V
    //   28215: aload #18
    //   28217: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   28220: invokevirtual toString : ()Ljava/lang/String;
    //   28223: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   28226: pop
    //   28227: aload #18
    //   28229: invokevirtual exists : ()Z
    //   28232: ifne -> 28240
    //   28235: goto_w -> 28485
    //   28240: aload #13
    //   28242: invokevirtual size : ()I
    //   28245: ifeq -> 28253
    //   28248: goto_w -> 28485
    //   28253: new java/io/BufferedReader
    //   28256: dup
    //   28257: new java/io/InputStreamReader
    //   28260: dup
    //   28261: new java/io/FileInputStream
    //   28264: dup
    //   28265: aload #18
    //   28267: invokespecial <init> : (Ljava/io/File;)V
    //   28270: invokespecial <init> : (Ljava/io/InputStream;)V
    //   28273: invokespecial <init> : (Ljava/io/Reader;)V
    //   28276: astore #19
    //   28278: ldc ''
    //   28280: astore #20
    //   28282: goto_w -> 28464
    //   28287: ldc_w 'HTTP_SERVER'
    //   28290: iconst_2
    //   28291: new java/lang/StringBuffer
    //   28294: dup
    //   28295: invokespecial <init> : ()V
    //   28298: aload #18
    //   28300: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   28303: ldc_w ':Checking data:'
    //   28306: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   28309: aload #20
    //   28311: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   28314: invokevirtual toString : ()Ljava/lang/String;
    //   28317: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   28320: pop
    //   28321: aload #20
    //   28323: invokevirtual trim : ()Ljava/lang/String;
    //   28326: astore #21
    //   28328: aload #21
    //   28330: astore #22
    //   28332: new java/util/Properties
    //   28335: dup
    //   28336: invokespecial <init> : ()V
    //   28339: astore #23
    //   28341: aload #20
    //   28343: ldc_w ':'
    //   28346: invokevirtual indexOf : (Ljava/lang/String;)I
    //   28349: ifge -> 28357
    //   28352: goto_w -> 28414
    //   28357: aload #20
    //   28359: ldc_w ':'
    //   28362: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   28365: iconst_0
    //   28366: aaload
    //   28367: invokevirtual trim : ()Ljava/lang/String;
    //   28370: astore #21
    //   28372: aload #20
    //   28374: ldc_w ':'
    //   28377: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   28380: arraylength
    //   28381: iconst_1
    //   28382: if_icmpeq -> 28390
    //   28385: goto_w -> 28399
    //   28390: ldc ''
    //   28392: astore #22
    //   28394: goto_w -> 28414
    //   28399: aload #20
    //   28401: ldc_w ':'
    //   28404: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   28407: iconst_1
    //   28408: aaload
    //   28409: invokevirtual trim : ()Ljava/lang/String;
    //   28412: astore #22
    //   28414: aload #23
    //   28416: ldc_w 'key'
    //   28419: aload #21
    //   28421: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   28424: pop
    //   28425: aload #23
    //   28427: ldc_w 'val'
    //   28430: aload #22
    //   28432: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   28435: pop
    //   28436: aload #21
    //   28438: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   28441: aload #14
    //   28443: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   28446: invokevirtual indexOf : (Ljava/lang/String;)I
    //   28449: ifge -> 28457
    //   28452: goto_w -> 28464
    //   28457: aload #13
    //   28459: aload #23
    //   28461: invokevirtual addElement : (Ljava/lang/Object;)V
    //   28464: aload #19
    //   28466: invokevirtual readLine : ()Ljava/lang/String;
    //   28469: dup
    //   28470: astore #20
    //   28472: ifnull -> 28480
    //   28475: goto_w -> 28287
    //   28480: aload #19
    //   28482: invokevirtual close : ()V
    //   28485: goto_w -> 29097
    //   28490: aload #11
    //   28492: ldc_w 'lookup_type'
    //   28495: ldc ''
    //   28497: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   28500: invokevirtual trim : ()Ljava/lang/String;
    //   28503: ldc_w 'task'
    //   28506: invokevirtual equals : (Ljava/lang/Object;)Z
    //   28509: ifne -> 28517
    //   28512: goto_w -> 28873
    //   28517: aload #11
    //   28519: invokevirtual clone : ()Ljava/lang/Object;
    //   28522: checkcast java/util/Properties
    //   28525: astore #15
    //   28527: aload #15
    //   28529: ldc_w 'url'
    //   28532: new java/lang/StringBuffer
    //   28535: dup
    //   28536: ldc_w 'file://'
    //   28539: invokespecial <init> : (Ljava/lang/String;)V
    //   28542: aload #11
    //   28544: ldc_w 'name'
    //   28547: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   28550: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   28553: ldc_w '/'
    //   28556: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   28559: aload #14
    //   28561: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   28564: invokevirtual toString : ()Ljava/lang/String;
    //   28567: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   28570: pop
    //   28571: aload #15
    //   28573: ldc_w 'the_file_name'
    //   28576: aload #14
    //   28578: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   28581: pop
    //   28582: aload #15
    //   28584: ldc_w 'the_file_path'
    //   28587: aload #11
    //   28589: ldc_w 'name'
    //   28592: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   28595: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   28598: pop
    //   28599: new java/util/Vector
    //   28602: dup
    //   28603: invokespecial <init> : ()V
    //   28606: astore #16
    //   28608: aload #16
    //   28610: aload #15
    //   28612: invokevirtual addElement : (Ljava/lang/Object;)V
    //   28615: new java/util/Properties
    //   28618: dup
    //   28619: invokespecial <init> : ()V
    //   28622: astore #17
    //   28624: aload #17
    //   28626: ldc_w 'event_plugin_list'
    //   28629: aload #11
    //   28631: ldc_w 'entry_plugin'
    //   28634: ldc ''
    //   28636: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   28639: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   28642: pop
    //   28643: aload #17
    //   28645: ldc_w 'name'
    //   28648: new java/lang/StringBuffer
    //   28651: dup
    //   28652: ldc_w 'FormPlugin:'
    //   28655: invokespecial <init> : (Ljava/lang/String;)V
    //   28658: aload_1
    //   28659: ldc_w 'form_name'
    //   28662: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   28665: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   28668: ldc_w ':'
    //   28671: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   28674: aload #11
    //   28676: ldc_w 'entry_plugin'
    //   28679: ldc ''
    //   28681: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   28684: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   28687: invokevirtual toString : ()Ljava/lang/String;
    //   28690: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   28693: pop
    //   28694: new java/util/Properties
    //   28697: dup
    //   28698: invokespecial <init> : ()V
    //   28701: astore #18
    //   28703: ldc_w 'event_asynch'
    //   28706: invokestatic BG : (Ljava/lang/String;)Z
    //   28709: istore #19
    //   28711: getstatic crushftp/server/ServerStatus.server_settings : Ljava/util/Properties;
    //   28714: ldc_w 'event_async'
    //   28717: ldc 'false'
    //   28719: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   28722: pop
    //   28723: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   28726: getfield events6 : Lcrushftp/server/Events;
    //   28729: aload #18
    //   28731: aload #17
    //   28733: aload_0
    //   28734: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   28737: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   28740: aload #16
    //   28742: invokevirtual doEventPlugin : (Ljava/util/Properties;Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;Ljava/util/Vector;)Ljava/util/Properties;
    //   28745: astore #18
    //   28747: getstatic crushftp/server/ServerStatus.server_settings : Ljava/util/Properties;
    //   28750: ldc_w 'event_async'
    //   28753: new java/lang/StringBuffer
    //   28756: dup
    //   28757: iload #19
    //   28759: invokestatic valueOf : (Z)Ljava/lang/String;
    //   28762: invokespecial <init> : (Ljava/lang/String;)V
    //   28765: invokevirtual toString : ()Ljava/lang/String;
    //   28768: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   28771: pop
    //   28772: aload #18
    //   28774: ldc_w 'newItems'
    //   28777: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   28780: checkcast java/util/Vector
    //   28783: astore #16
    //   28785: aload #16
    //   28787: invokevirtual size : ()I
    //   28790: iconst_1
    //   28791: isub
    //   28792: istore #20
    //   28794: goto_w -> 28850
    //   28799: aload #16
    //   28801: iload #20
    //   28803: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   28806: checkcast java/util/Properties
    //   28809: astore #21
    //   28811: aload #21
    //   28813: ldc_w 'key'
    //   28816: ldc ''
    //   28818: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   28821: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   28824: aload #14
    //   28826: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   28829: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   28832: ifeq -> 28840
    //   28835: goto_w -> 28847
    //   28840: aload #16
    //   28842: iload #20
    //   28844: invokevirtual removeElementAt : (I)V
    //   28847: iinc #20, -1
    //   28850: iload #20
    //   28852: iflt -> 28860
    //   28855: goto_w -> 28799
    //   28860: aload #13
    //   28862: aload #16
    //   28864: invokevirtual addAll : (Ljava/util/Collection;)Z
    //   28867: pop
    //   28868: goto_w -> 29097
    //   28873: aload #11
    //   28875: ldc_w 'lookup_type'
    //   28878: ldc ''
    //   28880: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   28883: invokevirtual trim : ()Ljava/lang/String;
    //   28886: ldc_w 'plugin'
    //   28889: invokevirtual equals : (Ljava/lang/Object;)Z
    //   28892: ifne -> 28900
    //   28895: goto_w -> 29097
    //   28900: aload_1
    //   28901: ldc_w 'pluginName'
    //   28904: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   28907: aconst_null
    //   28908: aload_1
    //   28909: ldc_w 'pluginSubItem'
    //   28912: ldc ''
    //   28914: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   28917: invokestatic getPlugin : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
    //   28920: astore #15
    //   28922: aload #15
    //   28924: ifnull -> 28932
    //   28927: goto_w -> 28969
    //   28932: aload_1
    //   28933: ldc_w 'pluginSubItem'
    //   28936: ldc ''
    //   28938: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   28941: ldc ''
    //   28943: invokevirtual equals : (Ljava/lang/Object;)Z
    //   28946: ifne -> 28954
    //   28949: goto_w -> 28969
    //   28954: aload_1
    //   28955: ldc_w 'pluginName'
    //   28958: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   28961: aconst_null
    //   28962: ldc 'false'
    //   28964: invokestatic getPlugin : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
    //   28967: astore #15
    //   28969: aload #15
    //   28971: invokevirtual getClass : ()Ljava/lang/Class;
    //   28974: aload_1
    //   28975: ldc_w 'method'
    //   28978: ldc_w 'lookupList'
    //   28981: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   28984: iconst_1
    //   28985: anewarray java/lang/Class
    //   28988: dup
    //   28989: iconst_0
    //   28990: new java/util/Properties
    //   28993: dup
    //   28994: invokespecial <init> : ()V
    //   28997: invokevirtual getClass : ()Ljava/lang/Class;
    //   29000: aastore
    //   29001: invokevirtual getMethod : (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    //   29004: astore #16
    //   29006: aload #16
    //   29008: aload #15
    //   29010: iconst_1
    //   29011: anewarray java/lang/Object
    //   29014: dup
    //   29015: iconst_0
    //   29016: aload_1
    //   29017: aastore
    //   29018: invokevirtual invoke : (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    //   29021: astore #17
    //   29023: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   29026: getfield common_code : Lcrushftp/handlers/Common;
    //   29029: pop
    //   29030: aload #17
    //   29032: ldc_w 'list'
    //   29035: aconst_null
    //   29036: invokestatic getXMLString : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   29039: astore #8
    //   29041: goto_w -> 29097
    //   29046: astore #15
    //   29048: ldc_w 'HTTP_SERVER'
    //   29051: iconst_1
    //   29052: aload #15
    //   29054: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   29057: pop
    //   29058: new java/lang/StringBuffer
    //   29061: dup
    //   29062: aload #8
    //   29064: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   29067: invokespecial <init> : (Ljava/lang/String;)V
    //   29070: ldc_w 'Error:'
    //   29073: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29076: aload #15
    //   29078: invokevirtual toString : ()Ljava/lang/String;
    //   29081: invokestatic url_encode : (Ljava/lang/String;)Ljava/lang/String;
    //   29084: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29087: invokevirtual toString : ()Ljava/lang/String;
    //   29090: astore #8
    //   29092: goto_w -> 29097
    //   29097: aload #13
    //   29099: ldc_w 'name'
    //   29102: ldc_w 'key'
    //   29105: invokestatic do_sort : (Ljava/util/Vector;Ljava/lang/String;Ljava/lang/String;)V
    //   29108: new java/lang/StringBuffer
    //   29111: dup
    //   29112: invokespecial <init> : ()V
    //   29115: astore #15
    //   29117: aload #15
    //   29119: ldc_w '[\\r\\n'
    //   29122: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29125: pop
    //   29126: iconst_0
    //   29127: istore #16
    //   29129: goto_w -> 29221
    //   29134: aload #13
    //   29136: iload #16
    //   29138: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   29141: checkcast java/util/Properties
    //   29144: astore #17
    //   29146: iload #16
    //   29148: ifgt -> 29156
    //   29151: goto_w -> 29165
    //   29156: aload #15
    //   29158: ldc_w ',\\r\\n'
    //   29161: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29164: pop
    //   29165: aload #15
    //   29167: new java/lang/StringBuffer
    //   29170: dup
    //   29171: ldc_w '\\t{"id":"'
    //   29174: invokespecial <init> : (Ljava/lang/String;)V
    //   29177: aload #17
    //   29179: ldc_w 'val'
    //   29182: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   29185: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29188: ldc_w '","name":"'
    //   29191: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29194: aload #17
    //   29196: ldc_w 'key'
    //   29199: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   29202: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29205: ldc_w '"}'
    //   29208: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29211: invokevirtual toString : ()Ljava/lang/String;
    //   29214: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29217: pop
    //   29218: iinc #16, 1
    //   29221: iload #16
    //   29223: aload #13
    //   29225: invokevirtual size : ()I
    //   29228: if_icmpge -> 29236
    //   29231: goto_w -> 29134
    //   29236: aload #15
    //   29238: ldc_w ']\\r\\n'
    //   29241: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29244: pop
    //   29245: aload #15
    //   29247: invokevirtual toString : ()Ljava/lang/String;
    //   29250: astore #8
    //   29252: aload_0
    //   29253: aload #8
    //   29255: iconst_1
    //   29256: invokevirtual writeResponse : (Ljava/lang/String;Z)Z
    //   29259: ireturn
    //   29260: aload #5
    //   29262: ldc_w 'batchComplete'
    //   29265: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   29268: ifne -> 29276
    //   29271: goto_w -> 29326
    //   29276: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   29279: astore #8
    //   29281: new java/lang/StringBuffer
    //   29284: dup
    //   29285: aload #8
    //   29287: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   29290: invokespecial <init> : (Ljava/lang/String;)V
    //   29293: ldc_w '<commandResult><response>SUCCESS</response></commandResult>'
    //   29296: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29299: invokevirtual toString : ()Ljava/lang/String;
    //   29302: astore #8
    //   29304: aload_0
    //   29305: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29308: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   29311: ldc_w 'BATCH_COMPLETE'
    //   29314: aconst_null
    //   29315: invokevirtual do_event5 : (Ljava/lang/String;Ljava/util/Properties;)Ljava/util/Properties;
    //   29318: pop
    //   29319: aload_0
    //   29320: aload #8
    //   29322: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   29325: ireturn
    //   29326: aload #5
    //   29328: ldc_w 'decrypt'
    //   29331: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   29334: ifne -> 29342
    //   29337: goto_w -> 30172
    //   29342: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   29345: astore #8
    //   29347: aload_1
    //   29348: ldc_w 'names'
    //   29351: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   29354: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   29357: bipush #62
    //   29359: bipush #95
    //   29361: invokevirtual replace : (CC)Ljava/lang/String;
    //   29364: bipush #60
    //   29366: bipush #95
    //   29368: invokevirtual replace : (CC)Ljava/lang/String;
    //   29371: ldc_w '\\r\\n'
    //   29374: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   29377: astore #9
    //   29379: ldc ''
    //   29381: astore #10
    //   29383: iconst_0
    //   29384: istore #11
    //   29386: goto_w -> 30098
    //   29391: aload #9
    //   29393: iload #11
    //   29395: aaload
    //   29396: astore #12
    //   29398: aload #12
    //   29400: aload_0
    //   29401: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29404: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   29407: ldc_w 'root_dir'
    //   29410: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   29413: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   29416: ifeq -> 29424
    //   29419: goto_w -> 29461
    //   29424: new java/lang/StringBuffer
    //   29427: dup
    //   29428: aload_0
    //   29429: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29432: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   29435: ldc_w 'root_dir'
    //   29438: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   29441: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   29444: invokespecial <init> : (Ljava/lang/String;)V
    //   29447: aload #12
    //   29449: iconst_1
    //   29450: invokevirtual substring : (I)Ljava/lang/String;
    //   29453: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29456: invokevirtual toString : ()Ljava/lang/String;
    //   29459: astore #12
    //   29461: aload_0
    //   29462: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29465: aload #12
    //   29467: invokevirtual cd : (Ljava/lang/String;)V
    //   29470: aload_0
    //   29471: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29474: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   29477: aload_0
    //   29478: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29481: invokevirtual pwd : ()Ljava/lang/String;
    //   29484: ldc_w 'RETR'
    //   29487: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   29490: ifne -> 29498
    //   29493: goto_w -> 29526
    //   29498: aload_0
    //   29499: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29502: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   29505: aload_0
    //   29506: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29509: invokevirtual pwd : ()Ljava/lang/String;
    //   29512: ldc_w 'STOR'
    //   29515: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   29518: ifeq -> 29526
    //   29521: goto_w -> 29565
    //   29526: new java/lang/StringBuffer
    //   29529: dup
    //   29530: aload #10
    //   29532: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   29535: invokespecial <init> : (Ljava/lang/String;)V
    //   29538: ldc_w 'ERROR:You need download, and upload permissions to decrypt a file:'
    //   29541: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29544: aload #12
    //   29546: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29549: ldc_w '\\r\\n'
    //   29552: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29555: invokevirtual toString : ()Ljava/lang/String;
    //   29558: astore #10
    //   29560: goto_w -> 30036
    //   29565: aload_0
    //   29566: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29569: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   29572: ldc_w 'the_command'
    //   29575: ldc_w 'DECRYPT'
    //   29578: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   29581: aload_0
    //   29582: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29585: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   29588: ldc_w 'the_command_data'
    //   29591: aload_0
    //   29592: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29595: invokevirtual pwd : ()Ljava/lang/String;
    //   29598: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   29601: aload_0
    //   29602: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29605: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   29608: getfield uVFS : Lcrushftp/server/VFS;
    //   29611: aload #12
    //   29613: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   29616: astore #13
    //   29618: new com/crushftp/client/VRL
    //   29621: dup
    //   29622: aload #13
    //   29624: ldc_w 'url'
    //   29627: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   29630: invokespecial <init> : (Ljava/lang/String;)V
    //   29633: astore #14
    //   29635: aload_0
    //   29636: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29639: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   29642: getfield uVFS : Lcrushftp/server/VFS;
    //   29645: aload #13
    //   29647: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   29650: astore #15
    //   29652: aload_0
    //   29653: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29656: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   29659: getfield uVFS : Lcrushftp/server/VFS;
    //   29662: aload #13
    //   29664: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   29667: astore #16
    //   29669: aload #15
    //   29671: aload #14
    //   29673: invokevirtual getPath : ()Ljava/lang/String;
    //   29676: lconst_0
    //   29677: ldc2_w -1
    //   29680: iconst_1
    //   29681: invokevirtual download : (Ljava/lang/String;JJZ)Ljava/io/InputStream;
    //   29684: astore #17
    //   29686: aload_0
    //   29687: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29690: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   29693: getfield user : Ljava/util/Properties;
    //   29696: ldc_w 'fileEncryptionKey'
    //   29699: ldc ''
    //   29701: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   29704: ldc ''
    //   29706: invokevirtual equals : (Ljava/lang/Object;)Z
    //   29709: ifne -> 29717
    //   29712: goto_w -> 29748
    //   29717: aload_0
    //   29718: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29721: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   29724: getfield user : Ljava/util/Properties;
    //   29727: ldc_w 'fileDecryptionKey'
    //   29730: ldc ''
    //   29732: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   29735: ldc ''
    //   29737: invokevirtual equals : (Ljava/lang/Object;)Z
    //   29740: ifeq -> 29748
    //   29743: goto_w -> 29814
    //   29748: aload #17
    //   29750: aload_0
    //   29751: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29754: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   29757: getfield user : Ljava/util/Properties;
    //   29760: ldc_w 'fileEncryptionKey'
    //   29763: ldc ''
    //   29765: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   29768: aload_0
    //   29769: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29772: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   29775: getfield user : Ljava/util/Properties;
    //   29778: ldc_w 'fileDecryptionKey'
    //   29781: ldc ''
    //   29783: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   29786: aload_0
    //   29787: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29790: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   29793: getfield user : Ljava/util/Properties;
    //   29796: ldc_w 'fileDecryptionKeyPass'
    //   29799: ldc ''
    //   29801: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   29804: invokestatic getDecryptedStream : (Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;
    //   29807: astore #17
    //   29809: goto_w -> 29872
    //   29814: ldc_w 'fileEncryptionKey'
    //   29817: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   29820: ldc ''
    //   29822: invokevirtual equals : (Ljava/lang/Object;)Z
    //   29825: ifne -> 29833
    //   29828: goto_w -> 29847
    //   29833: ldc_w 'fileDecryption'
    //   29836: invokestatic BG : (Ljava/lang/String;)Z
    //   29839: ifne -> 29847
    //   29842: goto_w -> 29872
    //   29847: aload #17
    //   29849: ldc_w 'fileEncryptionKey'
    //   29852: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   29855: ldc_w 'fileDecryptionKey'
    //   29858: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   29861: ldc_w 'fileDecryptionKeyPass'
    //   29864: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   29867: invokestatic getDecryptedStream : (Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;
    //   29870: astore #17
    //   29872: aload #16
    //   29874: new java/lang/StringBuffer
    //   29877: dup
    //   29878: aload #14
    //   29880: invokevirtual getPath : ()Ljava/lang/String;
    //   29883: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   29886: invokespecial <init> : (Ljava/lang/String;)V
    //   29889: ldc_w '.decrypting'
    //   29892: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29895: invokevirtual toString : ()Ljava/lang/String;
    //   29898: lconst_0
    //   29899: iconst_1
    //   29900: iconst_1
    //   29901: invokevirtual upload : (Ljava/lang/String;JZZ)Ljava/io/OutputStream;
    //   29904: astore #18
    //   29906: aload #17
    //   29908: aload #18
    //   29910: iconst_1
    //   29911: iconst_1
    //   29912: invokestatic copyStreams : (Ljava/io/InputStream;Ljava/lang/Object;ZZ)V
    //   29915: aload #15
    //   29917: new java/lang/StringBuffer
    //   29920: dup
    //   29921: aload #14
    //   29923: invokevirtual getPath : ()Ljava/lang/String;
    //   29926: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   29929: invokespecial <init> : (Ljava/lang/String;)V
    //   29932: ldc_w '.decrypting'
    //   29935: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29938: invokevirtual toString : ()Ljava/lang/String;
    //   29941: aload #14
    //   29943: invokevirtual getPath : ()Ljava/lang/String;
    //   29946: invokevirtual rename : (Ljava/lang/String;Ljava/lang/String;)Z
    //   29949: pop
    //   29950: new java/lang/StringBuffer
    //   29953: dup
    //   29954: aload #10
    //   29956: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   29959: invokespecial <init> : (Ljava/lang/String;)V
    //   29962: aload #12
    //   29964: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29967: ldc_w ' decrypted.'
    //   29970: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   29973: invokevirtual toString : ()Ljava/lang/String;
    //   29976: astore #10
    //   29978: goto_w -> 30031
    //   29983: astore #20
    //   29985: jsr_w -> 29993
    //   29990: aload #20
    //   29992: athrow
    //   29993: astore #19
    //   29995: aload_0
    //   29996: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   29999: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   30002: getfield uVFS : Lcrushftp/server/VFS;
    //   30005: aload #15
    //   30007: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   30010: astore #15
    //   30012: aload_0
    //   30013: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30016: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   30019: getfield uVFS : Lcrushftp/server/VFS;
    //   30022: aload #16
    //   30024: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   30027: astore #16
    //   30029: ret #19
    //   30031: jsr_w -> 29993
    //   30036: goto_w -> 30095
    //   30041: astore #12
    //   30043: ldc_w 'HTTP_SERVER'
    //   30046: iconst_0
    //   30047: aload #12
    //   30049: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   30052: pop
    //   30053: new java/lang/StringBuffer
    //   30056: dup
    //   30057: aload #10
    //   30059: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   30062: invokespecial <init> : (Ljava/lang/String;)V
    //   30065: ldc_w 'ERROR:'
    //   30068: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   30071: aload #12
    //   30073: invokevirtual getMessage : ()Ljava/lang/String;
    //   30076: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   30079: ldc_w '\\r\\n'
    //   30082: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   30085: invokevirtual toString : ()Ljava/lang/String;
    //   30088: astore #10
    //   30090: goto_w -> 30095
    //   30095: iinc #11, 1
    //   30098: iload #11
    //   30100: aload #9
    //   30102: arraylength
    //   30103: if_icmpge -> 30111
    //   30106: goto_w -> 29391
    //   30111: new java/lang/StringBuffer
    //   30114: dup
    //   30115: aload #8
    //   30117: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   30120: invokespecial <init> : (Ljava/lang/String;)V
    //   30123: ldc_w '<commandResult><response>'
    //   30126: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   30129: aload #10
    //   30131: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   30134: ldc_w '</response></commandResult>'
    //   30137: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   30140: invokevirtual toString : ()Ljava/lang/String;
    //   30143: astore #8
    //   30145: aload_0
    //   30146: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30149: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   30152: getfield uVFS : Lcrushftp/server/VFS;
    //   30155: invokevirtual reset : ()V
    //   30158: aload_0
    //   30159: aload #8
    //   30161: bipush #37
    //   30163: bipush #32
    //   30165: invokevirtual replace : (CC)Ljava/lang/String;
    //   30168: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   30171: ireturn
    //   30172: aload #5
    //   30174: ldc_w 'encrypt'
    //   30177: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   30180: ifne -> 30188
    //   30183: goto_w -> 31259
    //   30188: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   30191: astore #8
    //   30193: aload_1
    //   30194: ldc_w 'names'
    //   30197: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   30200: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   30203: bipush #62
    //   30205: bipush #95
    //   30207: invokevirtual replace : (CC)Ljava/lang/String;
    //   30210: bipush #60
    //   30212: bipush #95
    //   30214: invokevirtual replace : (CC)Ljava/lang/String;
    //   30217: ldc_w '\\r\\n'
    //   30220: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   30223: astore #9
    //   30225: ldc ''
    //   30227: astore #10
    //   30229: iconst_0
    //   30230: istore #11
    //   30232: goto_w -> 31185
    //   30237: aload #9
    //   30239: iload #11
    //   30241: aaload
    //   30242: astore #12
    //   30244: aload #12
    //   30246: aload_0
    //   30247: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30250: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   30253: ldc_w 'root_dir'
    //   30256: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   30259: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   30262: ifeq -> 30270
    //   30265: goto_w -> 30307
    //   30270: new java/lang/StringBuffer
    //   30273: dup
    //   30274: aload_0
    //   30275: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30278: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   30281: ldc_w 'root_dir'
    //   30284: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   30287: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   30290: invokespecial <init> : (Ljava/lang/String;)V
    //   30293: aload #12
    //   30295: iconst_1
    //   30296: invokevirtual substring : (I)Ljava/lang/String;
    //   30299: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   30302: invokevirtual toString : ()Ljava/lang/String;
    //   30305: astore #12
    //   30307: aload_0
    //   30308: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30311: aload #12
    //   30313: invokevirtual cd : (Ljava/lang/String;)V
    //   30316: aload_0
    //   30317: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30320: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   30323: aload_0
    //   30324: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30327: invokevirtual pwd : ()Ljava/lang/String;
    //   30330: ldc_w 'RETR'
    //   30333: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   30336: ifne -> 30344
    //   30339: goto_w -> 30372
    //   30344: aload_0
    //   30345: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30348: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   30351: aload_0
    //   30352: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30355: invokevirtual pwd : ()Ljava/lang/String;
    //   30358: ldc_w 'STOR'
    //   30361: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   30364: ifeq -> 30372
    //   30367: goto_w -> 30411
    //   30372: new java/lang/StringBuffer
    //   30375: dup
    //   30376: aload #10
    //   30378: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   30381: invokespecial <init> : (Ljava/lang/String;)V
    //   30384: ldc_w 'ERROR:You need download, and upload permissions to encrypt a file:'
    //   30387: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   30390: aload #12
    //   30392: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   30395: ldc_w '\\r\\n'
    //   30398: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   30401: invokevirtual toString : ()Ljava/lang/String;
    //   30404: astore #10
    //   30406: goto_w -> 31182
    //   30411: aload_0
    //   30412: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30415: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   30418: ldc_w 'the_command'
    //   30421: ldc_w 'DECRYPT'
    //   30424: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   30427: aload_0
    //   30428: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30431: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   30434: ldc_w 'the_command_data'
    //   30437: aload_0
    //   30438: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30441: invokevirtual pwd : ()Ljava/lang/String;
    //   30444: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   30447: aload_0
    //   30448: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30451: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   30454: getfield uVFS : Lcrushftp/server/VFS;
    //   30457: aload #12
    //   30459: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   30462: astore #13
    //   30464: new com/crushftp/client/VRL
    //   30467: dup
    //   30468: aload #13
    //   30470: ldc_w 'url'
    //   30473: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   30476: invokespecial <init> : (Ljava/lang/String;)V
    //   30479: astore #14
    //   30481: aload_0
    //   30482: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30485: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   30488: getfield uVFS : Lcrushftp/server/VFS;
    //   30491: aload #13
    //   30493: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   30496: astore #15
    //   30498: aload_0
    //   30499: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30502: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   30505: getfield uVFS : Lcrushftp/server/VFS;
    //   30508: aload #13
    //   30510: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   30513: astore #16
    //   30515: new java/io/BufferedInputStream
    //   30518: dup
    //   30519: aload #15
    //   30521: aload #14
    //   30523: invokevirtual getPath : ()Ljava/lang/String;
    //   30526: lconst_0
    //   30527: ldc2_w -1
    //   30530: iconst_1
    //   30531: invokevirtual download : (Ljava/lang/String;JJZ)Ljava/io/InputStream;
    //   30534: invokespecial <init> : (Ljava/io/InputStream;)V
    //   30537: astore #17
    //   30539: aload #17
    //   30541: sipush #2000
    //   30544: invokevirtual mark : (I)V
    //   30547: sipush #500
    //   30550: newarray byte
    //   30552: astore #18
    //   30554: iconst_0
    //   30555: istore #19
    //   30557: iconst_0
    //   30558: istore #20
    //   30560: new java/io/ByteArrayOutputStream
    //   30563: dup
    //   30564: invokespecial <init> : ()V
    //   30567: astore #21
    //   30569: goto_w -> 30610
    //   30574: aload #17
    //   30576: aload #18
    //   30578: invokevirtual read : ([B)I
    //   30581: istore #20
    //   30583: iload #20
    //   30585: ifge -> 30593
    //   30588: goto_w -> 30610
    //   30593: aload #21
    //   30595: aload #18
    //   30597: iconst_0
    //   30598: iload #20
    //   30600: invokevirtual write : ([BII)V
    //   30603: iload #19
    //   30605: iload #20
    //   30607: iadd
    //   30608: istore #19
    //   30610: iload #20
    //   30612: ifge -> 30620
    //   30615: goto_w -> 30633
    //   30620: iload #19
    //   30622: sipush #1000
    //   30625: if_icmpge -> 30633
    //   30628: goto_w -> 30574
    //   30633: aload #17
    //   30635: invokevirtual reset : ()V
    //   30638: new java/lang/String
    //   30641: dup
    //   30642: aload #21
    //   30644: invokevirtual toByteArray : ()[B
    //   30647: ldc_w 'UTF8'
    //   30650: invokespecial <init> : ([BLjava/lang/String;)V
    //   30653: astore #22
    //   30655: aload #22
    //   30657: ldc_w '-----BEGIN PGP MESSAGE-----'
    //   30660: invokevirtual indexOf : (Ljava/lang/String;)I
    //   30663: ifge -> 30671
    //   30666: goto_w -> 30687
    //   30671: aload #22
    //   30673: ldc_w 'CRUSHFTP#'
    //   30676: invokevirtual indexOf : (Ljava/lang/String;)I
    //   30679: iflt -> 30687
    //   30682: goto_w -> 31011
    //   30687: aload #16
    //   30689: new java/lang/StringBuffer
    //   30692: dup
    //   30693: aload #14
    //   30695: invokevirtual getPath : ()Ljava/lang/String;
    //   30698: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   30701: invokespecial <init> : (Ljava/lang/String;)V
    //   30704: ldc_w '.encrypting'
    //   30707: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   30710: invokevirtual toString : ()Ljava/lang/String;
    //   30713: lconst_0
    //   30714: iconst_1
    //   30715: iconst_1
    //   30716: invokevirtual upload : (Ljava/lang/String;JZZ)Ljava/io/OutputStream;
    //   30719: astore #23
    //   30721: aload_0
    //   30722: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30725: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   30728: getfield user : Ljava/util/Properties;
    //   30731: ldc_w 'filePublicEncryptionKey'
    //   30734: ldc ''
    //   30736: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   30739: ldc ''
    //   30741: invokevirtual equals : (Ljava/lang/Object;)Z
    //   30744: ifeq -> 30752
    //   30747: goto_w -> 30784
    //   30752: aload #23
    //   30754: aload_0
    //   30755: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30758: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   30761: getfield user : Ljava/util/Properties;
    //   30764: ldc_w 'filePublicEncryptionKey'
    //   30767: ldc ''
    //   30769: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   30772: lconst_0
    //   30773: iconst_0
    //   30774: invokestatic getEncryptedStream : (Ljava/io/OutputStream;Ljava/lang/String;JZ)Ljava/io/OutputStream;
    //   30777: astore #23
    //   30779: goto_w -> 30934
    //   30784: ldc_w 'fileEncryption'
    //   30787: invokestatic BG : (Ljava/lang/String;)Z
    //   30790: ifne -> 30798
    //   30793: goto_w -> 30842
    //   30798: ldc_w 'filePublicEncryptionKey'
    //   30801: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   30804: ldc ''
    //   30806: invokevirtual equals : (Ljava/lang/Object;)Z
    //   30809: ifeq -> 30817
    //   30812: goto_w -> 30842
    //   30817: aload #23
    //   30819: ldc_w 'filePublicEncryptionKey'
    //   30822: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   30825: lconst_0
    //   30826: ldc_w 'file_encrypt_ascii'
    //   30829: invokestatic BG : (Ljava/lang/String;)Z
    //   30832: invokestatic getEncryptedStream : (Ljava/io/OutputStream;Ljava/lang/String;JZ)Ljava/io/OutputStream;
    //   30835: astore #23
    //   30837: goto_w -> 30934
    //   30842: aload_0
    //   30843: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30846: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   30849: getfield user : Ljava/util/Properties;
    //   30852: ldc_w 'fileEncryptionKey'
    //   30855: ldc ''
    //   30857: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   30860: ldc ''
    //   30862: invokevirtual equals : (Ljava/lang/Object;)Z
    //   30865: ifeq -> 30873
    //   30868: goto_w -> 30905
    //   30873: aload #23
    //   30875: aload_0
    //   30876: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   30879: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   30882: getfield user : Ljava/util/Properties;
    //   30885: ldc_w 'fileEncryptionKey'
    //   30888: ldc ''
    //   30890: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   30893: lconst_0
    //   30894: iconst_0
    //   30895: invokestatic getEncryptedStream : (Ljava/io/OutputStream;Ljava/lang/String;JZ)Ljava/io/OutputStream;
    //   30898: astore #23
    //   30900: goto_w -> 30934
    //   30905: ldc_w 'fileEncryption'
    //   30908: invokestatic BG : (Ljava/lang/String;)Z
    //   30911: ifne -> 30919
    //   30914: goto_w -> 30934
    //   30919: aload #23
    //   30921: ldc_w 'fileEncryptionKey'
    //   30924: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   30927: lconst_0
    //   30928: iconst_0
    //   30929: invokestatic getEncryptedStream : (Ljava/io/OutputStream;Ljava/lang/String;JZ)Ljava/io/OutputStream;
    //   30932: astore #23
    //   30934: aload #17
    //   30936: aload #23
    //   30938: iconst_1
    //   30939: iconst_1
    //   30940: invokestatic copyStreams : (Ljava/io/InputStream;Ljava/lang/Object;ZZ)V
    //   30943: aload #15
    //   30945: new java/lang/StringBuffer
    //   30948: dup
    //   30949: aload #14
    //   30951: invokevirtual getPath : ()Ljava/lang/String;
    //   30954: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   30957: invokespecial <init> : (Ljava/lang/String;)V
    //   30960: ldc_w '.encrypting'
    //   30963: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   30966: invokevirtual toString : ()Ljava/lang/String;
    //   30969: aload #14
    //   30971: invokevirtual getPath : ()Ljava/lang/String;
    //   30974: invokevirtual rename : (Ljava/lang/String;Ljava/lang/String;)Z
    //   30977: pop
    //   30978: new java/lang/StringBuffer
    //   30981: dup
    //   30982: aload #10
    //   30984: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   30987: invokespecial <init> : (Ljava/lang/String;)V
    //   30990: aload #12
    //   30992: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   30995: ldc_w ' encrypted.'
    //   30998: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31001: invokevirtual toString : ()Ljava/lang/String;
    //   31004: astore #10
    //   31006: goto_w -> 31070
    //   31011: ldc_w 'HTTP_SERVER'
    //   31014: iconst_0
    //   31015: new java/lang/StringBuffer
    //   31018: dup
    //   31019: ldc_w 'Ignoring encryption request, already encrypted:'
    //   31022: invokespecial <init> : (Ljava/lang/String;)V
    //   31025: aload #12
    //   31027: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31030: invokevirtual toString : ()Ljava/lang/String;
    //   31033: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   31036: pop
    //   31037: new java/lang/StringBuffer
    //   31040: dup
    //   31041: aload #10
    //   31043: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   31046: invokespecial <init> : (Ljava/lang/String;)V
    //   31049: aload #12
    //   31051: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31054: ldc_w ' : Ignoring encryption request, already encrypted.'
    //   31057: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31060: invokevirtual toString : ()Ljava/lang/String;
    //   31063: astore #10
    //   31065: aload #17
    //   31067: invokevirtual close : ()V
    //   31070: goto_w -> 31177
    //   31075: astore #17
    //   31077: ldc_w 'HTTP_SERVER'
    //   31080: iconst_0
    //   31081: aload #17
    //   31083: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   31086: pop
    //   31087: new java/lang/StringBuffer
    //   31090: dup
    //   31091: aload #10
    //   31093: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   31096: invokespecial <init> : (Ljava/lang/String;)V
    //   31099: ldc_w 'ERROR:'
    //   31102: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31105: aload #17
    //   31107: invokevirtual getMessage : ()Ljava/lang/String;
    //   31110: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31113: ldc_w '\\r\\n'
    //   31116: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31119: invokevirtual toString : ()Ljava/lang/String;
    //   31122: astore #10
    //   31124: goto_w -> 31177
    //   31129: astore #25
    //   31131: jsr_w -> 31139
    //   31136: aload #25
    //   31138: athrow
    //   31139: astore #24
    //   31141: aload_0
    //   31142: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31145: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31148: getfield uVFS : Lcrushftp/server/VFS;
    //   31151: aload #15
    //   31153: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   31156: astore #15
    //   31158: aload_0
    //   31159: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31162: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31165: getfield uVFS : Lcrushftp/server/VFS;
    //   31168: aload #16
    //   31170: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   31173: astore #16
    //   31175: ret #24
    //   31177: jsr_w -> 31139
    //   31182: iinc #11, 1
    //   31185: iload #11
    //   31187: aload #9
    //   31189: arraylength
    //   31190: if_icmpge -> 31198
    //   31193: goto_w -> 30237
    //   31198: new java/lang/StringBuffer
    //   31201: dup
    //   31202: aload #8
    //   31204: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   31207: invokespecial <init> : (Ljava/lang/String;)V
    //   31210: ldc_w '<commandResult><response>'
    //   31213: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31216: aload #10
    //   31218: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31221: ldc_w '</response></commandResult>'
    //   31224: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31227: invokevirtual toString : ()Ljava/lang/String;
    //   31230: astore #8
    //   31232: aload_0
    //   31233: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31236: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31239: getfield uVFS : Lcrushftp/server/VFS;
    //   31242: invokevirtual reset : ()V
    //   31245: aload_0
    //   31246: aload #8
    //   31248: bipush #37
    //   31250: bipush #32
    //   31252: invokevirtual replace : (CC)Ljava/lang/String;
    //   31255: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   31258: ireturn
    //   31259: aload #5
    //   31261: ldc_w 'unzip'
    //   31264: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   31267: ifne -> 31275
    //   31270: goto_w -> 31794
    //   31275: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   31278: astore #8
    //   31280: aload_1
    //   31281: ldc_w 'names'
    //   31284: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   31287: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   31290: bipush #62
    //   31292: bipush #95
    //   31294: invokevirtual replace : (CC)Ljava/lang/String;
    //   31297: bipush #60
    //   31299: bipush #95
    //   31301: invokevirtual replace : (CC)Ljava/lang/String;
    //   31304: ldc_w '\\r\\n'
    //   31307: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   31310: astore #9
    //   31312: ldc ''
    //   31314: astore #10
    //   31316: iconst_0
    //   31317: istore #11
    //   31319: goto_w -> 31720
    //   31324: aload #9
    //   31326: iload #11
    //   31328: aaload
    //   31329: bipush #62
    //   31331: bipush #95
    //   31333: invokevirtual replace : (CC)Ljava/lang/String;
    //   31336: bipush #60
    //   31338: bipush #95
    //   31340: invokevirtual replace : (CC)Ljava/lang/String;
    //   31343: astore #12
    //   31345: aload #12
    //   31347: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   31350: ldc_w '.ZIP'
    //   31353: invokevirtual endsWith : (Ljava/lang/String;)Z
    //   31356: ifeq -> 31364
    //   31359: goto_w -> 31369
    //   31364: goto_w -> 31717
    //   31369: aload #12
    //   31371: aload_0
    //   31372: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31375: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31378: ldc_w 'root_dir'
    //   31381: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   31384: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   31387: ifeq -> 31395
    //   31390: goto_w -> 31432
    //   31395: new java/lang/StringBuffer
    //   31398: dup
    //   31399: aload_0
    //   31400: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31403: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31406: ldc_w 'root_dir'
    //   31409: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   31412: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   31415: invokespecial <init> : (Ljava/lang/String;)V
    //   31418: aload #12
    //   31420: iconst_1
    //   31421: invokevirtual substring : (I)Ljava/lang/String;
    //   31424: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31427: invokevirtual toString : ()Ljava/lang/String;
    //   31430: astore #12
    //   31432: aload_0
    //   31433: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31436: aload #12
    //   31438: invokevirtual cd : (Ljava/lang/String;)V
    //   31441: aload_0
    //   31442: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31445: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31448: aload_0
    //   31449: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31452: invokevirtual pwd : ()Ljava/lang/String;
    //   31455: ldc_w 'RETR'
    //   31458: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   31461: ifne -> 31469
    //   31464: goto_w -> 31528
    //   31469: aload_0
    //   31470: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31473: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31476: aload_0
    //   31477: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31480: invokevirtual pwd : ()Ljava/lang/String;
    //   31483: ldc_w 'STOR'
    //   31486: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   31489: ifne -> 31497
    //   31492: goto_w -> 31528
    //   31497: aload_0
    //   31498: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31501: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31504: aload_0
    //   31505: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31508: invokevirtual pwd : ()Ljava/lang/String;
    //   31511: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   31514: ldc_w 'MKD'
    //   31517: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   31520: ifeq -> 31528
    //   31523: goto_w -> 31567
    //   31528: new java/lang/StringBuffer
    //   31531: dup
    //   31532: aload #10
    //   31534: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   31537: invokespecial <init> : (Ljava/lang/String;)V
    //   31540: ldc_w 'You need download, upload, and make directory permissions to unzip a file:'
    //   31543: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31546: aload #12
    //   31548: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31551: ldc_w '\\r\\n'
    //   31554: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31557: invokevirtual toString : ()Ljava/lang/String;
    //   31560: astore #10
    //   31562: goto_w -> 31717
    //   31567: aload_0
    //   31568: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31571: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31574: ldc_w 'the_command'
    //   31577: ldc_w 'UNZIP'
    //   31580: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   31583: aload_0
    //   31584: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31587: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31590: ldc_w 'the_command_data'
    //   31593: aload_0
    //   31594: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31597: invokevirtual pwd : ()Ljava/lang/String;
    //   31600: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   31603: aload_0
    //   31604: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31607: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31610: getfield uVFS : Lcrushftp/server/VFS;
    //   31613: aload #12
    //   31615: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   31618: astore #13
    //   31620: new com/crushftp/client/VRL
    //   31623: dup
    //   31624: aload #13
    //   31626: ldc_w 'url'
    //   31629: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   31632: invokespecial <init> : (Ljava/lang/String;)V
    //   31635: astore #14
    //   31637: aload_0
    //   31638: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31641: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31644: getfield uVFS : Lcrushftp/server/VFS;
    //   31647: aload #13
    //   31649: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   31652: astore #15
    //   31654: aload #14
    //   31656: invokevirtual getPath : ()Ljava/lang/String;
    //   31659: aload #15
    //   31661: aload_0
    //   31662: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31665: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31668: aload #12
    //   31670: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   31673: invokestatic unzip : (Ljava/lang/String;Lcom/crushftp/client/GenericClient;Lcrushftp/handlers/SessionCrush;Ljava/lang/String;)V
    //   31676: goto_w -> 31712
    //   31681: astore #17
    //   31683: jsr_w -> 31691
    //   31688: aload #17
    //   31690: athrow
    //   31691: astore #16
    //   31693: aload_0
    //   31694: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31697: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31700: getfield uVFS : Lcrushftp/server/VFS;
    //   31703: aload #15
    //   31705: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   31708: astore #15
    //   31710: ret #16
    //   31712: jsr_w -> 31691
    //   31717: iinc #11, 1
    //   31720: iload #11
    //   31722: aload #9
    //   31724: arraylength
    //   31725: if_icmpge -> 31733
    //   31728: goto_w -> 31324
    //   31733: new java/lang/StringBuffer
    //   31736: dup
    //   31737: aload #8
    //   31739: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   31742: invokespecial <init> : (Ljava/lang/String;)V
    //   31745: ldc_w '<commandResult><response>'
    //   31748: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31751: aload #10
    //   31753: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31756: ldc_w '</response></commandResult>'
    //   31759: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31762: invokevirtual toString : ()Ljava/lang/String;
    //   31765: astore #8
    //   31767: aload_0
    //   31768: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31771: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31774: getfield uVFS : Lcrushftp/server/VFS;
    //   31777: invokevirtual reset : ()V
    //   31780: aload_0
    //   31781: aload #8
    //   31783: bipush #37
    //   31785: bipush #32
    //   31787: invokevirtual replace : (CC)Ljava/lang/String;
    //   31790: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   31793: ireturn
    //   31794: aload #5
    //   31796: ldc_w 'zip'
    //   31799: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   31802: ifne -> 31810
    //   31805: goto_w -> 32486
    //   31810: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   31813: astore #8
    //   31815: aload_1
    //   31816: ldc_w 'names'
    //   31819: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   31822: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   31825: bipush #62
    //   31827: bipush #95
    //   31829: invokevirtual replace : (CC)Ljava/lang/String;
    //   31832: bipush #60
    //   31834: bipush #95
    //   31836: invokevirtual replace : (CC)Ljava/lang/String;
    //   31839: ldc_w '\\r\\n'
    //   31842: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   31845: astore #9
    //   31847: ldc ''
    //   31849: astore #10
    //   31851: new java/util/Vector
    //   31854: dup
    //   31855: invokespecial <init> : ()V
    //   31858: astore #11
    //   31860: new java/lang/StringBuffer
    //   31863: dup
    //   31864: invokespecial <init> : ()V
    //   31867: astore #12
    //   31869: iconst_0
    //   31870: istore #13
    //   31872: goto_w -> 32158
    //   31877: aload #9
    //   31879: iload #13
    //   31881: aaload
    //   31882: astore #14
    //   31884: aload #14
    //   31886: aload_0
    //   31887: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31890: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31893: ldc_w 'root_dir'
    //   31896: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   31899: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   31902: ifeq -> 31910
    //   31905: goto_w -> 31947
    //   31910: new java/lang/StringBuffer
    //   31913: dup
    //   31914: aload_0
    //   31915: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31918: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31921: ldc_w 'root_dir'
    //   31924: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   31927: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   31930: invokespecial <init> : (Ljava/lang/String;)V
    //   31933: aload #14
    //   31935: iconst_1
    //   31936: invokevirtual substring : (I)Ljava/lang/String;
    //   31939: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   31942: invokevirtual toString : ()Ljava/lang/String;
    //   31945: astore #14
    //   31947: aload_0
    //   31948: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31951: aload #14
    //   31953: invokevirtual cd : (Ljava/lang/String;)V
    //   31956: aload_0
    //   31957: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31960: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31963: aload_0
    //   31964: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31967: invokevirtual pwd : ()Ljava/lang/String;
    //   31970: ldc_w 'RETR'
    //   31973: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   31976: ifne -> 31984
    //   31979: goto_w -> 32012
    //   31984: aload_0
    //   31985: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31988: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   31991: aload_0
    //   31992: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   31995: invokevirtual pwd : ()Ljava/lang/String;
    //   31998: ldc_w 'STOR'
    //   32001: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   32004: ifeq -> 32012
    //   32007: goto_w -> 32051
    //   32012: new java/lang/StringBuffer
    //   32015: dup
    //   32016: aload #10
    //   32018: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   32021: invokespecial <init> : (Ljava/lang/String;)V
    //   32024: ldc_w 'You need download, upload permissions to zip a file:'
    //   32027: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32030: aload #14
    //   32032: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32035: ldc_w '\\r\\n'
    //   32038: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32041: invokevirtual toString : ()Ljava/lang/String;
    //   32044: astore #10
    //   32046: goto_w -> 32155
    //   32051: aload_0
    //   32052: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32055: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32058: ldc_w 'the_command'
    //   32061: ldc_w 'ZIP'
    //   32064: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   32067: aload_0
    //   32068: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32071: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32074: ldc_w 'the_command_data'
    //   32077: aload_0
    //   32078: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32081: invokevirtual pwd : ()Ljava/lang/String;
    //   32084: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   32087: aload_0
    //   32088: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32091: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32094: getfield uVFS : Lcrushftp/server/VFS;
    //   32097: aload #14
    //   32099: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   32102: astore #15
    //   32104: aload #12
    //   32106: invokevirtual length : ()I
    //   32109: ifeq -> 32117
    //   32112: goto_w -> 32131
    //   32117: aload #12
    //   32119: aload #15
    //   32121: ldc_w 'name'
    //   32124: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   32127: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32130: pop
    //   32131: aload_0
    //   32132: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32135: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32138: getfield uVFS : Lcrushftp/server/VFS;
    //   32141: aload #11
    //   32143: aload #14
    //   32145: sipush #999
    //   32148: ldc_w 50000
    //   32151: iconst_1
    //   32152: invokevirtual getListing : (Ljava/util/Vector;Ljava/lang/String;IIZ)V
    //   32155: iinc #13, 1
    //   32158: iload #13
    //   32160: aload #9
    //   32162: arraylength
    //   32163: if_icmpge -> 32171
    //   32166: goto_w -> 31877
    //   32171: aload_1
    //   32172: ldc_w 'path'
    //   32175: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   32178: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   32181: astore #13
    //   32183: aload #13
    //   32185: aload_0
    //   32186: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32189: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32192: ldc_w 'root_dir'
    //   32195: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   32198: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   32201: ifeq -> 32209
    //   32204: goto_w -> 32246
    //   32209: new java/lang/StringBuffer
    //   32212: dup
    //   32213: aload_0
    //   32214: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32217: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32220: ldc_w 'root_dir'
    //   32223: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   32226: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   32229: invokespecial <init> : (Ljava/lang/String;)V
    //   32232: aload #13
    //   32234: iconst_1
    //   32235: invokevirtual substring : (I)Ljava/lang/String;
    //   32238: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32241: invokevirtual toString : ()Ljava/lang/String;
    //   32244: astore #13
    //   32246: aload_0
    //   32247: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32250: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32253: aload #13
    //   32255: ldc_w 'STOR'
    //   32258: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   32261: ifeq -> 32269
    //   32264: goto_w -> 32313
    //   32269: new java/lang/StringBuffer
    //   32272: dup
    //   32273: aload #10
    //   32275: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   32278: invokespecial <init> : (Ljava/lang/String;)V
    //   32281: ldc_w 'You need upload permissions to zip a file:'
    //   32284: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32287: aload_1
    //   32288: ldc_w 'path'
    //   32291: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   32294: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32297: ldc_w '\\r\\n'
    //   32300: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32303: invokevirtual toString : ()Ljava/lang/String;
    //   32306: astore #10
    //   32308: goto_w -> 32425
    //   32313: new java/lang/StringBuffer
    //   32316: dup
    //   32317: aload #10
    //   32319: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   32322: invokespecial <init> : (Ljava/lang/String;)V
    //   32325: ldc_w 'Started zipping...\\r\\n'
    //   32328: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32331: invokevirtual toString : ()Ljava/lang/String;
    //   32334: astore #10
    //   32336: aload_0
    //   32337: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32340: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32343: getfield uVFS : Lcrushftp/server/VFS;
    //   32346: aload #13
    //   32348: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   32351: astore #14
    //   32353: new com/crushftp/client/VRL
    //   32356: dup
    //   32357: aload #14
    //   32359: ldc_w 'url'
    //   32362: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   32365: invokespecial <init> : (Ljava/lang/String;)V
    //   32368: invokevirtual getPath : ()Ljava/lang/String;
    //   32371: astore #15
    //   32373: new crushftp/server/ServerSessionAJAX$1
    //   32376: dup
    //   32377: aload_0
    //   32378: aload #12
    //   32380: aload #15
    //   32382: aload #11
    //   32384: invokespecial <init> : (Lcrushftp/server/ServerSessionAJAX;Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/util/Vector;)V
    //   32387: new java/lang/StringBuffer
    //   32390: dup
    //   32391: ldc_w 'Zipping:'
    //   32394: invokespecial <init> : (Ljava/lang/String;)V
    //   32397: aload #13
    //   32399: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32402: ldc_w ':'
    //   32405: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32408: aload_1
    //   32409: ldc_w 'names'
    //   32412: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   32415: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32418: invokevirtual toString : ()Ljava/lang/String;
    //   32421: invokestatic startWorker : (Ljava/lang/Runnable;Ljava/lang/String;)Z
    //   32424: pop
    //   32425: new java/lang/StringBuffer
    //   32428: dup
    //   32429: aload #8
    //   32431: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   32434: invokespecial <init> : (Ljava/lang/String;)V
    //   32437: ldc_w '<commandResult><response>'
    //   32440: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32443: aload #10
    //   32445: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32448: ldc_w '</response></commandResult>'
    //   32451: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32454: invokevirtual toString : ()Ljava/lang/String;
    //   32457: astore #8
    //   32459: aload_0
    //   32460: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32463: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32466: getfield uVFS : Lcrushftp/server/VFS;
    //   32469: invokevirtual reset : ()V
    //   32472: aload_0
    //   32473: aload #8
    //   32475: bipush #37
    //   32477: bipush #32
    //   32479: invokevirtual replace : (CC)Ljava/lang/String;
    //   32482: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   32485: ireturn
    //   32486: aload #5
    //   32488: ldc_w 'delete'
    //   32491: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   32494: ifne -> 32502
    //   32497: goto_w -> 32845
    //   32502: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   32505: astore #8
    //   32507: aload_1
    //   32508: ldc_w 'names'
    //   32511: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   32514: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   32517: bipush #62
    //   32519: bipush #95
    //   32521: invokevirtual replace : (CC)Ljava/lang/String;
    //   32524: bipush #60
    //   32526: bipush #95
    //   32528: invokevirtual replace : (CC)Ljava/lang/String;
    //   32531: ldc_w '\\r\\n'
    //   32534: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   32537: astore #9
    //   32539: ldc ''
    //   32541: astore #10
    //   32543: iconst_0
    //   32544: istore #11
    //   32546: goto_w -> 32768
    //   32551: aload #9
    //   32553: iload #11
    //   32555: aaload
    //   32556: astore #12
    //   32558: aload #12
    //   32560: aload_0
    //   32561: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32564: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32567: ldc_w 'root_dir'
    //   32570: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   32573: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   32576: ifne -> 32584
    //   32579: goto_w -> 32609
    //   32584: aload #12
    //   32586: aload_0
    //   32587: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32590: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32593: ldc_w 'root_dir'
    //   32596: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   32599: invokevirtual length : ()I
    //   32602: iconst_1
    //   32603: isub
    //   32604: invokevirtual substring : (I)Ljava/lang/String;
    //   32607: astore #12
    //   32609: aload_0
    //   32610: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32613: aload #12
    //   32615: invokevirtual cd : (Ljava/lang/String;)V
    //   32618: aload_0
    //   32619: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32622: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32625: ldc_w 'the_command'
    //   32628: ldc_w 'DELE'
    //   32631: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   32634: aload_0
    //   32635: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32638: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32641: ldc_w 'the_command_data'
    //   32644: aload_0
    //   32645: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32648: invokevirtual pwd : ()Ljava/lang/String;
    //   32651: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   32654: ldc ''
    //   32656: astore #13
    //   32658: iconst_0
    //   32659: istore #14
    //   32661: goto_w -> 32731
    //   32666: aload_0
    //   32667: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32670: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32673: iconst_1
    //   32674: aload #12
    //   32676: invokevirtual do_DELE : (ZLjava/lang/String;)Ljava/lang/String;
    //   32679: astore #13
    //   32681: aload #13
    //   32683: ldc_w '%DELE-not found%'
    //   32686: invokevirtual equals : (Ljava/lang/Object;)Z
    //   32689: ifne -> 32697
    //   32692: goto_w -> 32701
    //   32697: ldc ''
    //   32699: astore #13
    //   32701: aload #13
    //   32703: ldc_w '%DELE-error%'
    //   32706: invokevirtual indexOf : (Ljava/lang/String;)I
    //   32709: iflt -> 32717
    //   32712: goto_w -> 32722
    //   32717: goto_w -> 32743
    //   32722: ldc2_w 1000
    //   32725: invokestatic sleep : (J)V
    //   32728: iinc #14, 1
    //   32731: iload #14
    //   32733: bipush #10
    //   32735: if_icmpge -> 32743
    //   32738: goto_w -> 32666
    //   32743: new java/lang/StringBuffer
    //   32746: dup
    //   32747: aload #10
    //   32749: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   32752: invokespecial <init> : (Ljava/lang/String;)V
    //   32755: aload #13
    //   32757: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32760: invokevirtual toString : ()Ljava/lang/String;
    //   32763: astore #10
    //   32765: iinc #11, 1
    //   32768: iload #11
    //   32770: aload #9
    //   32772: arraylength
    //   32773: if_icmpge -> 32781
    //   32776: goto_w -> 32551
    //   32781: new java/lang/StringBuffer
    //   32784: dup
    //   32785: aload #8
    //   32787: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   32790: invokespecial <init> : (Ljava/lang/String;)V
    //   32793: ldc_w '<commandResult><response>'
    //   32796: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32799: aload #10
    //   32801: invokestatic G : (Ljava/lang/String;)Ljava/lang/String;
    //   32804: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32807: ldc_w '</response></commandResult>'
    //   32810: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   32813: invokevirtual toString : ()Ljava/lang/String;
    //   32816: astore #8
    //   32818: aload_0
    //   32819: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32822: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32825: getfield uVFS : Lcrushftp/server/VFS;
    //   32828: invokevirtual reset : ()V
    //   32831: aload_0
    //   32832: aload #8
    //   32834: bipush #37
    //   32836: bipush #32
    //   32838: invokevirtual replace : (CC)Ljava/lang/String;
    //   32841: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   32844: ireturn
    //   32845: aload #5
    //   32847: ldc_w 'rename'
    //   32850: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   32853: ifne -> 32861
    //   32856: goto_w -> 33476
    //   32861: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   32864: astore #8
    //   32866: aload_1
    //   32867: ldc_w 'path'
    //   32870: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   32873: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   32876: astore #9
    //   32878: aload #9
    //   32880: aload_0
    //   32881: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32884: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32887: ldc_w 'root_dir'
    //   32890: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   32893: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   32896: ifne -> 32904
    //   32899: goto_w -> 32929
    //   32904: aload #9
    //   32906: aload_0
    //   32907: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32910: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32913: ldc_w 'root_dir'
    //   32916: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   32919: invokevirtual length : ()I
    //   32922: iconst_1
    //   32923: isub
    //   32924: invokevirtual substring : (I)Ljava/lang/String;
    //   32927: astore #9
    //   32929: aload_0
    //   32930: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32933: aload #9
    //   32935: invokevirtual cd : (Ljava/lang/String;)V
    //   32938: aload_1
    //   32939: ldc_w 'name1'
    //   32942: ldc ''
    //   32944: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   32947: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   32950: astore #10
    //   32952: aload_0
    //   32953: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32956: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32959: ldc_w 'the_command'
    //   32962: ldc_w 'RNFR'
    //   32965: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   32968: aload_0
    //   32969: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32972: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32975: ldc_w 'the_command_data'
    //   32978: aload #10
    //   32980: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   32983: aload_0
    //   32984: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   32987: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   32990: invokevirtual do_RNFR : ()Ljava/lang/String;
    //   32993: astore #11
    //   32995: aload #11
    //   32997: ldc ''
    //   32999: invokevirtual equals : (Ljava/lang/Object;)Z
    //   33002: ifeq -> 33010
    //   33005: goto_w -> 33026
    //   33010: aload #11
    //   33012: ldc_w '%RNFR-bad%'
    //   33015: invokevirtual equals : (Ljava/lang/Object;)Z
    //   33018: ifne -> 33026
    //   33021: goto_w -> 33412
    //   33026: aload_0
    //   33027: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33030: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33033: getfield rnfr_file : Ljava/util/Properties;
    //   33036: ldc_w 'url'
    //   33039: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   33042: ldc_w '1'
    //   33045: iconst_1
    //   33046: invokestatic getPreviewPath : (Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
    //   33049: astore #12
    //   33051: aload_1
    //   33052: ldc_w 'name2'
    //   33055: ldc ''
    //   33057: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   33060: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   33063: astore #13
    //   33065: aload_0
    //   33066: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33069: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33072: ldc_w 'the_command'
    //   33075: ldc_w 'RNTO'
    //   33078: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   33081: aload_0
    //   33082: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33085: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33088: ldc_w 'the_command_data'
    //   33091: aload #13
    //   33093: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   33096: aload #10
    //   33098: aload #13
    //   33100: invokevirtual equals : (Ljava/lang/Object;)Z
    //   33103: ifeq -> 33111
    //   33106: goto_w -> 33412
    //   33111: new java/lang/StringBuffer
    //   33114: dup
    //   33115: aload #11
    //   33117: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   33120: invokespecial <init> : (Ljava/lang/String;)V
    //   33123: aload_0
    //   33124: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33127: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33130: aload_1
    //   33131: ldc_w 'overwrite'
    //   33134: ldc 'false'
    //   33136: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   33139: ldc 'true'
    //   33141: invokevirtual equals : (Ljava/lang/Object;)Z
    //   33144: invokevirtual do_RNTO : (Z)Ljava/lang/String;
    //   33147: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   33150: invokevirtual toString : ()Ljava/lang/String;
    //   33153: astore #11
    //   33155: aload #11
    //   33157: ldc ''
    //   33159: invokevirtual equals : (Ljava/lang/Object;)Z
    //   33162: ifne -> 33170
    //   33165: goto_w -> 33399
    //   33170: aload #12
    //   33172: ifnonnull -> 33180
    //   33175: goto_w -> 33399
    //   33180: new java/lang/StringBuffer
    //   33183: dup
    //   33184: aload #9
    //   33186: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   33189: invokespecial <init> : (Ljava/lang/String;)V
    //   33192: aload #13
    //   33194: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   33197: invokevirtual toString : ()Ljava/lang/String;
    //   33200: astore #13
    //   33202: aload #13
    //   33204: aload_0
    //   33205: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33208: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33211: ldc_w 'root_dir'
    //   33214: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   33217: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   33220: ifeq -> 33228
    //   33223: goto_w -> 33261
    //   33228: new java/lang/StringBuffer
    //   33231: dup
    //   33232: aload_0
    //   33233: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33236: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33239: ldc_w 'root_dir'
    //   33242: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   33245: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   33248: invokespecial <init> : (Ljava/lang/String;)V
    //   33251: aload #13
    //   33253: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   33256: invokevirtual toString : ()Ljava/lang/String;
    //   33259: astore #13
    //   33261: aload_0
    //   33262: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33265: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33268: getfield uVFS : Lcrushftp/server/VFS;
    //   33271: aload #13
    //   33273: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   33276: astore #14
    //   33278: aload #14
    //   33280: ldc_w 'url'
    //   33283: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   33286: ldc_w '1'
    //   33289: iconst_1
    //   33290: invokestatic getPreviewPath : (Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
    //   33293: astore #15
    //   33295: aload #15
    //   33297: ifnonnull -> 33305
    //   33300: goto_w -> 33399
    //   33305: new com/crushftp/client/File_U
    //   33308: dup
    //   33309: new java/lang/StringBuffer
    //   33312: dup
    //   33313: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   33316: pop
    //   33317: ldc_w 'previews_path'
    //   33320: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   33323: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   33326: invokespecial <init> : (Ljava/lang/String;)V
    //   33329: aload #12
    //   33331: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   33334: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   33337: iconst_1
    //   33338: invokevirtual substring : (I)Ljava/lang/String;
    //   33341: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   33344: invokevirtual toString : ()Ljava/lang/String;
    //   33347: invokespecial <init> : (Ljava/lang/String;)V
    //   33350: new com/crushftp/client/File_U
    //   33353: dup
    //   33354: new java/lang/StringBuffer
    //   33357: dup
    //   33358: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   33361: pop
    //   33362: ldc_w 'previews_path'
    //   33365: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   33368: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   33371: invokespecial <init> : (Ljava/lang/String;)V
    //   33374: aload #15
    //   33376: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   33379: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   33382: iconst_1
    //   33383: invokevirtual substring : (I)Ljava/lang/String;
    //   33386: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   33389: invokevirtual toString : ()Ljava/lang/String;
    //   33392: invokespecial <init> : (Ljava/lang/String;)V
    //   33395: invokevirtual renameTo : (Ljava/io/File;)Z
    //   33398: pop
    //   33399: aload_0
    //   33400: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33403: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33406: getfield uVFS : Lcrushftp/server/VFS;
    //   33409: invokevirtual reset : ()V
    //   33412: new java/lang/StringBuffer
    //   33415: dup
    //   33416: aload #8
    //   33418: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   33421: invokespecial <init> : (Ljava/lang/String;)V
    //   33424: ldc_w '<commandResult><response>'
    //   33427: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   33430: aload #11
    //   33432: invokestatic G : (Ljava/lang/String;)Ljava/lang/String;
    //   33435: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   33438: ldc_w '</response></commandResult>'
    //   33441: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   33444: invokevirtual toString : ()Ljava/lang/String;
    //   33447: astore #8
    //   33449: aload_0
    //   33450: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33453: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33456: getfield uVFS : Lcrushftp/server/VFS;
    //   33459: invokevirtual reset : ()V
    //   33462: aload_0
    //   33463: aload #8
    //   33465: bipush #37
    //   33467: bipush #32
    //   33469: invokevirtual replace : (CC)Ljava/lang/String;
    //   33472: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   33475: ireturn
    //   33476: aload #5
    //   33478: ldc_w 'makedir'
    //   33481: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   33484: ifne -> 33492
    //   33487: goto_w -> 33704
    //   33492: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   33495: astore #8
    //   33497: aload_1
    //   33498: ldc_w 'path'
    //   33501: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   33504: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   33507: invokevirtual trim : ()Ljava/lang/String;
    //   33510: astore #9
    //   33512: aload #9
    //   33514: bipush #58
    //   33516: bipush #95
    //   33518: invokevirtual replace : (CC)Ljava/lang/String;
    //   33521: astore #9
    //   33523: aload #9
    //   33525: aload_0
    //   33526: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33529: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33532: ldc_w 'root_dir'
    //   33535: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   33538: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   33541: ifne -> 33549
    //   33544: goto_w -> 33574
    //   33549: aload #9
    //   33551: aload_0
    //   33552: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33555: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33558: ldc_w 'root_dir'
    //   33561: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   33564: invokevirtual length : ()I
    //   33567: iconst_1
    //   33568: isub
    //   33569: invokevirtual substring : (I)Ljava/lang/String;
    //   33572: astore #9
    //   33574: aload_0
    //   33575: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33578: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33581: ldc_w 'the_command'
    //   33584: ldc_w 'MKD'
    //   33587: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   33590: aload_0
    //   33591: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33594: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33597: ldc_w 'the_command_data'
    //   33600: aload #9
    //   33602: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   33605: aload_0
    //   33606: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33609: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33612: iconst_1
    //   33613: aload #9
    //   33615: invokevirtual do_MKD : (ZLjava/lang/String;)Ljava/lang/String;
    //   33618: astore #10
    //   33620: aload_0
    //   33621: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33624: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33627: getfield uVFS : Lcrushftp/server/VFS;
    //   33630: invokevirtual reset : ()V
    //   33633: aload #10
    //   33635: ldc_w '%MKD-exists%'
    //   33638: invokevirtual indexOf : (Ljava/lang/String;)I
    //   33641: ifge -> 33649
    //   33644: goto_w -> 33653
    //   33649: ldc ''
    //   33651: astore #10
    //   33653: new java/lang/StringBuffer
    //   33656: dup
    //   33657: aload #8
    //   33659: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   33662: invokespecial <init> : (Ljava/lang/String;)V
    //   33665: ldc_w '<commandResult><response>'
    //   33668: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   33671: aload #10
    //   33673: invokestatic G : (Ljava/lang/String;)Ljava/lang/String;
    //   33676: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   33679: ldc_w '</response></commandResult>'
    //   33682: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   33685: invokevirtual toString : ()Ljava/lang/String;
    //   33688: astore #8
    //   33690: aload_0
    //   33691: aload #8
    //   33693: bipush #37
    //   33695: bipush #32
    //   33697: invokevirtual replace : (CC)Ljava/lang/String;
    //   33700: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   33703: ireturn
    //   33704: aload #5
    //   33706: ldc_w 'stat'
    //   33709: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   33712: ifne -> 33720
    //   33715: goto_w -> 34189
    //   33720: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   33723: astore #8
    //   33725: aload_1
    //   33726: ldc_w 'path'
    //   33729: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   33732: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   33735: astore #9
    //   33737: aload #9
    //   33739: aload_0
    //   33740: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33743: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33746: ldc_w 'root_dir'
    //   33749: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   33752: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   33755: ifne -> 33763
    //   33758: goto_w -> 33788
    //   33763: aload #9
    //   33765: aload_0
    //   33766: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33769: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33772: ldc_w 'root_dir'
    //   33775: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   33778: invokevirtual length : ()I
    //   33781: iconst_1
    //   33782: isub
    //   33783: invokevirtual substring : (I)Ljava/lang/String;
    //   33786: astore #9
    //   33788: aload_0
    //   33789: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33792: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33795: ldc_w 'the_command'
    //   33798: ldc_w 'STAT'
    //   33801: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   33804: aload_0
    //   33805: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33808: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33811: ldc_w 'the_command_data'
    //   33814: aload #9
    //   33816: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   33819: aload_0
    //   33820: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33823: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33826: getfield uVFS : Lcrushftp/server/VFS;
    //   33829: new java/lang/StringBuffer
    //   33832: dup
    //   33833: aload_0
    //   33834: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33837: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33840: ldc_w 'root_dir'
    //   33843: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   33846: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   33849: invokespecial <init> : (Ljava/lang/String;)V
    //   33852: aload #9
    //   33854: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   33857: invokevirtual toString : ()Ljava/lang/String;
    //   33860: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   33863: astore #10
    //   33865: new java/lang/StringBuffer
    //   33868: dup
    //   33869: invokespecial <init> : ()V
    //   33872: astore #11
    //   33874: aload_1
    //   33875: ldc_w 'calcFolder'
    //   33878: ldc ''
    //   33880: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   33883: ldc 'true'
    //   33885: invokevirtual equals : (Ljava/lang/Object;)Z
    //   33888: ifne -> 33896
    //   33891: goto_w -> 34042
    //   33896: new java/util/Vector
    //   33899: dup
    //   33900: invokespecial <init> : ()V
    //   33903: astore #12
    //   33905: lconst_0
    //   33906: lstore #13
    //   33908: aload_0
    //   33909: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33912: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33915: getfield uVFS : Lcrushftp/server/VFS;
    //   33918: aload #12
    //   33920: new java/lang/StringBuffer
    //   33923: dup
    //   33924: aload_0
    //   33925: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   33928: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   33931: ldc_w 'root_dir'
    //   33934: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   33937: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   33940: invokespecial <init> : (Ljava/lang/String;)V
    //   33943: aload #9
    //   33945: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   33948: invokevirtual toString : ()Ljava/lang/String;
    //   33951: bipush #20
    //   33953: sipush #10000
    //   33956: iconst_1
    //   33957: aconst_null
    //   33958: invokevirtual getListing : (Ljava/util/Vector;Ljava/lang/String;IIZLjava/util/Vector;)V
    //   33961: iconst_0
    //   33962: istore #15
    //   33964: goto_w -> 34003
    //   33969: aload #12
    //   33971: iload #15
    //   33973: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   33976: checkcast java/util/Properties
    //   33979: astore #16
    //   33981: lload #13
    //   33983: aload #16
    //   33985: ldc_w 'size'
    //   33988: ldc_w '0'
    //   33991: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   33994: invokestatic parseLong : (Ljava/lang/String;)J
    //   33997: ladd
    //   33998: lstore #13
    //   34000: iinc #15, 1
    //   34003: iload #15
    //   34005: aload #12
    //   34007: invokevirtual size : ()I
    //   34010: if_icmpge -> 34018
    //   34013: goto_w -> 33969
    //   34018: aload #10
    //   34020: ldc_w 'size'
    //   34023: new java/lang/StringBuffer
    //   34026: dup
    //   34027: lload #13
    //   34029: invokestatic valueOf : (J)Ljava/lang/String;
    //   34032: invokespecial <init> : (Ljava/lang/String;)V
    //   34035: invokevirtual toString : ()Ljava/lang/String;
    //   34038: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   34041: pop
    //   34042: aload_1
    //   34043: ldc_w 'format'
    //   34046: ldc ''
    //   34048: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   34051: ldc_w 'stat_dmz'
    //   34054: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   34057: ifne -> 34065
    //   34060: goto_w -> 34091
    //   34065: aload #10
    //   34067: ifnonnull -> 34075
    //   34070: goto_w -> 34086
    //   34075: aload #11
    //   34077: aload #10
    //   34079: invokestatic formatDmzStat : (Ljava/util/Properties;)Ljava/lang/String;
    //   34082: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34085: pop
    //   34086: goto_w -> 34142
    //   34091: aload #10
    //   34093: ifnonnull -> 34101
    //   34096: goto_w -> 34142
    //   34101: aload #10
    //   34103: aload_0
    //   34104: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   34107: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   34110: iconst_1
    //   34111: iconst_1
    //   34112: invokestatic checkName : (Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;ZZ)Z
    //   34115: ifne -> 34123
    //   34118: goto_w -> 34142
    //   34123: aload #10
    //   34125: aload #11
    //   34127: iconst_0
    //   34128: aload #9
    //   34130: iconst_1
    //   34131: aload_0
    //   34132: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   34135: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   34138: iconst_0
    //   34139: invokestatic generateLineEntry : (Ljava/util/Properties;Ljava/lang/StringBuffer;ZLjava/lang/String;ZLcrushftp/handlers/SessionCrush;Z)V
    //   34142: new java/lang/StringBuffer
    //   34145: dup
    //   34146: aload #8
    //   34148: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   34151: invokespecial <init> : (Ljava/lang/String;)V
    //   34154: ldc_w '<commandResult><response>'
    //   34157: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34160: aload #11
    //   34162: invokevirtual toString : ()Ljava/lang/String;
    //   34165: invokevirtual trim : ()Ljava/lang/String;
    //   34168: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34171: ldc_w '</response></commandResult>'
    //   34174: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34177: invokevirtual toString : ()Ljava/lang/String;
    //   34180: astore #8
    //   34182: aload_0
    //   34183: aload #8
    //   34185: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   34188: ireturn
    //   34189: aload #5
    //   34191: ldc_w 'exists'
    //   34194: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   34197: ifne -> 34205
    //   34200: goto_w -> 34499
    //   34205: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   34208: astore #8
    //   34210: new java/lang/StringBuffer
    //   34213: dup
    //   34214: invokespecial <init> : ()V
    //   34217: astore #9
    //   34219: aload_1
    //   34220: ldc_w 'paths'
    //   34223: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   34226: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   34229: ldc_w ';'
    //   34232: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   34235: astore #10
    //   34237: iconst_0
    //   34238: istore #11
    //   34240: goto_w -> 34439
    //   34245: aload #10
    //   34247: iload #11
    //   34249: aaload
    //   34250: astore #12
    //   34252: aload #12
    //   34254: aload_0
    //   34255: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   34258: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   34261: ldc_w 'root_dir'
    //   34264: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   34267: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   34270: ifne -> 34278
    //   34273: goto_w -> 34303
    //   34278: aload #12
    //   34280: aload_0
    //   34281: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   34284: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   34287: ldc_w 'root_dir'
    //   34290: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   34293: invokevirtual length : ()I
    //   34296: iconst_1
    //   34297: isub
    //   34298: invokevirtual substring : (I)Ljava/lang/String;
    //   34301: astore #12
    //   34303: aload_0
    //   34304: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   34307: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   34310: ldc_w 'the_command'
    //   34313: ldc_w 'STAT'
    //   34316: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   34319: aload_0
    //   34320: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   34323: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   34326: ldc_w 'the_command_data'
    //   34329: aload #12
    //   34331: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   34334: aload_0
    //   34335: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   34338: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   34341: getfield uVFS : Lcrushftp/server/VFS;
    //   34344: new java/lang/StringBuffer
    //   34347: dup
    //   34348: aload_0
    //   34349: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   34352: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   34355: ldc_w 'root_dir'
    //   34358: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   34361: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   34364: invokespecial <init> : (Ljava/lang/String;)V
    //   34367: aload #12
    //   34369: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34372: invokevirtual toString : ()Ljava/lang/String;
    //   34375: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   34378: astore #13
    //   34380: aload #9
    //   34382: aload #10
    //   34384: iload #11
    //   34386: aaload
    //   34387: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34390: ldc_w ':'
    //   34393: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34396: new java/lang/StringBuffer
    //   34399: dup
    //   34400: aload #13
    //   34402: ifnonnull -> 34410
    //   34405: goto_w -> 34416
    //   34410: iconst_1
    //   34411: goto_w -> 34417
    //   34416: iconst_0
    //   34417: invokestatic valueOf : (Z)Ljava/lang/String;
    //   34420: invokespecial <init> : (Ljava/lang/String;)V
    //   34423: invokevirtual toString : ()Ljava/lang/String;
    //   34426: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34429: ldc_w '\\r\\n'
    //   34432: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34435: pop
    //   34436: iinc #11, 1
    //   34439: iload #11
    //   34441: aload #10
    //   34443: arraylength
    //   34444: if_icmpge -> 34452
    //   34447: goto_w -> 34245
    //   34452: new java/lang/StringBuffer
    //   34455: dup
    //   34456: aload #8
    //   34458: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   34461: invokespecial <init> : (Ljava/lang/String;)V
    //   34464: ldc_w '<commandResult><response>'
    //   34467: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34470: aload #9
    //   34472: invokevirtual toString : ()Ljava/lang/String;
    //   34475: invokevirtual trim : ()Ljava/lang/String;
    //   34478: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34481: ldc_w '</response></commandResult>'
    //   34484: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34487: invokevirtual toString : ()Ljava/lang/String;
    //   34490: astore #8
    //   34492: aload_0
    //   34493: aload #8
    //   34495: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   34498: ireturn
    //   34499: aload #5
    //   34501: ldc_w 'mdtm'
    //   34504: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   34507: ifne -> 34515
    //   34510: goto_w -> 34801
    //   34515: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   34518: astore #8
    //   34520: aload_1
    //   34521: ldc_w 'path'
    //   34524: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   34527: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   34530: astore #9
    //   34532: aload #9
    //   34534: invokestatic last : (Ljava/lang/String;)Ljava/lang/String;
    //   34537: astore #10
    //   34539: iconst_0
    //   34540: istore #11
    //   34542: goto_w -> 34570
    //   34547: aload #10
    //   34549: ldc_w 'unsafe_filename_chars'
    //   34552: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   34555: iload #11
    //   34557: invokevirtual charAt : (I)C
    //   34560: bipush #95
    //   34562: invokevirtual replace : (CC)Ljava/lang/String;
    //   34565: astore #10
    //   34567: iinc #11, 1
    //   34570: iload #11
    //   34572: ldc_w 'unsafe_filename_chars'
    //   34575: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   34578: invokevirtual length : ()I
    //   34581: if_icmpge -> 34589
    //   34584: goto_w -> 34547
    //   34589: new java/lang/StringBuffer
    //   34592: dup
    //   34593: aload #9
    //   34595: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   34598: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   34601: invokespecial <init> : (Ljava/lang/String;)V
    //   34604: aload #10
    //   34606: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34609: invokevirtual toString : ()Ljava/lang/String;
    //   34612: astore #9
    //   34614: aload #9
    //   34616: aload_0
    //   34617: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   34620: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   34623: ldc_w 'root_dir'
    //   34626: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   34629: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   34632: ifne -> 34640
    //   34635: goto_w -> 34665
    //   34640: aload #9
    //   34642: aload_0
    //   34643: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   34646: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   34649: ldc_w 'root_dir'
    //   34652: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   34655: invokevirtual length : ()I
    //   34658: iconst_1
    //   34659: isub
    //   34660: invokevirtual substring : (I)Ljava/lang/String;
    //   34663: astore #9
    //   34665: aload_0
    //   34666: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   34669: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   34672: ldc_w 'the_command'
    //   34675: ldc_w 'MDTM'
    //   34678: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   34681: aload_0
    //   34682: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   34685: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   34688: ldc_w 'the_command_data'
    //   34691: new java/lang/StringBuffer
    //   34694: dup
    //   34695: aload #9
    //   34697: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   34700: invokespecial <init> : (Ljava/lang/String;)V
    //   34703: ldc_w ' '
    //   34706: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34709: aload_1
    //   34710: ldc_w 'date'
    //   34713: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   34716: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34719: invokevirtual toString : ()Ljava/lang/String;
    //   34722: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   34725: aload_0
    //   34726: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   34729: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   34732: invokevirtual do_MDTM : ()Ljava/lang/String;
    //   34735: astore #11
    //   34737: aload_0
    //   34738: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   34741: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   34744: getfield uVFS : Lcrushftp/server/VFS;
    //   34747: invokevirtual reset : ()V
    //   34750: new java/lang/StringBuffer
    //   34753: dup
    //   34754: aload #8
    //   34756: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   34759: invokespecial <init> : (Ljava/lang/String;)V
    //   34762: ldc_w '<commandResult><response>'
    //   34765: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34768: aload #11
    //   34770: invokestatic G : (Ljava/lang/String;)Ljava/lang/String;
    //   34773: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34776: ldc_w '</response></commandResult>'
    //   34779: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34782: invokevirtual toString : ()Ljava/lang/String;
    //   34785: astore #8
    //   34787: aload_0
    //   34788: aload #8
    //   34790: bipush #37
    //   34792: bipush #32
    //   34794: invokevirtual replace : (CC)Ljava/lang/String;
    //   34797: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   34800: ireturn
    //   34801: aload #5
    //   34803: ldc_w 'publish'
    //   34806: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   34809: ifeq -> 34817
    //   34812: goto_w -> 34833
    //   34817: aload #5
    //   34819: ldc_w 'publish_attach'
    //   34822: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   34825: ifne -> 34833
    //   34828: goto_w -> 36377
    //   34833: ldc ''
    //   34835: astore #8
    //   34837: aload #5
    //   34839: ldc_w 'publish_attach'
    //   34842: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   34845: ifne -> 34853
    //   34848: goto_w -> 34945
    //   34853: ldc 'enterprise_level'
    //   34855: invokestatic siIG : (Ljava/lang/String;)I
    //   34858: ifle -> 34866
    //   34861: goto_w -> 34945
    //   34866: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   34869: astore #8
    //   34871: new java/lang/StringBuffer
    //   34874: dup
    //   34875: aload #8
    //   34877: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   34880: invokespecial <init> : (Ljava/lang/String;)V
    //   34883: ldc_w '<commandResult><response>'
    //   34886: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34889: invokevirtual toString : ()Ljava/lang/String;
    //   34892: astore #8
    //   34894: new java/lang/StringBuffer
    //   34897: dup
    //   34898: aload #8
    //   34900: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   34903: invokespecial <init> : (Ljava/lang/String;)V
    //   34906: ldc_w 'The server does not have an enterprise license, so sharing from email is not allowed.\\r\\n<br/>'
    //   34909: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34912: invokevirtual toString : ()Ljava/lang/String;
    //   34915: astore #8
    //   34917: new java/lang/StringBuffer
    //   34920: dup
    //   34921: aload #8
    //   34923: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   34926: invokespecial <init> : (Ljava/lang/String;)V
    //   34929: ldc_w '</response></commandResult>'
    //   34932: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   34935: invokevirtual toString : ()Ljava/lang/String;
    //   34938: astore #8
    //   34940: goto_w -> 36370
    //   34945: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   34948: ifne -> 34956
    //   34951: goto_w -> 35213
    //   34956: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   34959: ldc_w 'crushftp.dmz.queue'
    //   34962: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   34965: checkcast java/util/Vector
    //   34968: astore #9
    //   34970: new java/util/Properties
    //   34973: dup
    //   34974: invokespecial <init> : ()V
    //   34977: astore #10
    //   34979: aload #10
    //   34981: ldc_w 'type'
    //   34984: ldc_w 'PUT:SHARE'
    //   34987: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   34990: pop
    //   34991: aload #10
    //   34993: ldc_w 'id'
    //   34996: invokestatic makeBoundary : ()Ljava/lang/String;
    //   34999: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35002: pop
    //   35003: aload #10
    //   35005: ldc 'username'
    //   35007: aload_0
    //   35008: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35011: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   35014: ldc 'user_name'
    //   35016: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   35019: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35022: pop
    //   35023: aload_0
    //   35024: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35027: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   35030: getfield uVFS : Lcrushftp/server/VFS;
    //   35033: aload_0
    //   35034: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35037: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   35040: ldc_w 'root_dir'
    //   35043: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   35046: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   35049: astore #11
    //   35051: aload_0
    //   35052: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35055: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   35058: getfield uVFS : Lcrushftp/server/VFS;
    //   35061: aload #11
    //   35063: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   35066: astore #12
    //   35068: aload #10
    //   35070: ldc_w 'crushAuth'
    //   35073: aload #12
    //   35075: ldc_w 'crushAuth'
    //   35078: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   35081: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35084: pop
    //   35085: aload_0
    //   35086: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35089: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   35092: getfield uVFS : Lcrushftp/server/VFS;
    //   35095: aload #12
    //   35097: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   35100: pop
    //   35101: aload #10
    //   35103: ldc 'user_ip'
    //   35105: aload_0
    //   35106: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35109: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   35112: ldc 'user_ip'
    //   35114: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   35117: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35120: pop
    //   35121: aload #10
    //   35123: ldc_w 'request'
    //   35126: aload_1
    //   35127: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35130: pop
    //   35131: aload #10
    //   35133: ldc 'clientid'
    //   35135: aload_0
    //   35136: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35139: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   35142: ldc 'clientid'
    //   35144: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   35147: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35150: pop
    //   35151: aload #10
    //   35153: ldc_w 'need_response'
    //   35156: ldc 'true'
    //   35158: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35161: pop
    //   35162: aload #9
    //   35164: aload #10
    //   35166: invokevirtual addElement : (Ljava/lang/Object;)V
    //   35169: aload #10
    //   35171: sipush #300
    //   35174: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   35177: astore #10
    //   35179: aload_0
    //   35180: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35183: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   35186: getfield uVFS : Lcrushftp/server/VFS;
    //   35189: aload #12
    //   35191: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   35194: pop
    //   35195: aload #10
    //   35197: ldc_w 'object_response'
    //   35200: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   35203: invokevirtual toString : ()Ljava/lang/String;
    //   35206: astore #8
    //   35208: goto_w -> 36370
    //   35213: aload #5
    //   35215: ldc_w 'publish_attach'
    //   35218: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   35221: ifne -> 35229
    //   35224: goto_w -> 35711
    //   35229: aload_1
    //   35230: ldc_w 'emailTo'
    //   35233: ldc ''
    //   35235: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35238: pop
    //   35239: aload_1
    //   35240: ldc_w 'temp_username'
    //   35243: ldc ''
    //   35245: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   35248: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   35251: astore #9
    //   35253: aload_1
    //   35254: ldc_w 'temp_password'
    //   35257: ldc ''
    //   35259: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   35262: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   35265: astore #10
    //   35267: aload #9
    //   35269: ldc ''
    //   35271: invokevirtual equals : (Ljava/lang/Object;)Z
    //   35274: ifne -> 35282
    //   35277: goto_w -> 35304
    //   35282: ldc_w 'temp_accounts_length'
    //   35285: invokestatic IG : (Ljava/lang/String;)I
    //   35288: invokestatic makeBoundary : (I)Ljava/lang/String;
    //   35291: astore #9
    //   35293: ldc_w 'temp_accounts_length'
    //   35296: invokestatic IG : (Ljava/lang/String;)I
    //   35299: invokestatic makeBoundary : (I)Ljava/lang/String;
    //   35302: astore #10
    //   35304: new java/lang/StringBuffer
    //   35307: dup
    //   35308: ldc_w 'temp_accounts_path'
    //   35311: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   35314: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   35317: invokespecial <init> : (Ljava/lang/String;)V
    //   35320: ldc_w 'storage/'
    //   35323: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   35326: aload #9
    //   35328: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   35331: aload #10
    //   35333: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   35336: ldc_w '/'
    //   35339: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   35342: invokevirtual toString : ()Ljava/lang/String;
    //   35345: astore #11
    //   35347: new com/crushftp/client/File_U
    //   35350: dup
    //   35351: aload #11
    //   35353: invokespecial <init> : (Ljava/lang/String;)V
    //   35356: invokevirtual mkdirs : ()Z
    //   35359: pop
    //   35360: aload_1
    //   35361: ldc_w 'temp_username'
    //   35364: aload #9
    //   35366: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35369: pop
    //   35370: aload_1
    //   35371: ldc_w 'temp_password'
    //   35374: aload #10
    //   35376: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35379: pop
    //   35380: aload_1
    //   35381: ldc_w 'paths'
    //   35384: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   35387: astore #12
    //   35389: aload #12
    //   35391: ldc_w '/'
    //   35394: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   35397: ifne -> 35405
    //   35400: goto_w -> 35413
    //   35405: aload #12
    //   35407: iconst_1
    //   35408: invokevirtual substring : (I)Ljava/lang/String;
    //   35411: astore #12
    //   35413: aload #12
    //   35415: ldc_w '/'
    //   35418: invokevirtual endsWith : (Ljava/lang/String;)Z
    //   35421: ifne -> 35429
    //   35424: goto_w -> 35444
    //   35429: aload #12
    //   35431: iconst_0
    //   35432: aload #12
    //   35434: invokevirtual length : ()I
    //   35437: iconst_1
    //   35438: isub
    //   35439: invokevirtual substring : (II)Ljava/lang/String;
    //   35442: astore #12
    //   35444: aload_0
    //   35445: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35448: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   35451: getfield uVFS : Lcrushftp/server/VFS;
    //   35454: invokevirtual getPermission0 : ()Ljava/util/Properties;
    //   35457: astore #13
    //   35459: aload #13
    //   35461: new java/lang/StringBuffer
    //   35464: dup
    //   35465: aload_0
    //   35466: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35469: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   35472: ldc_w 'root_dir'
    //   35475: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   35478: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   35481: invokespecial <init> : (Ljava/lang/String;)V
    //   35484: aload_1
    //   35485: ldc_w 'paths'
    //   35488: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   35491: iconst_1
    //   35492: invokevirtual substring : (I)Ljava/lang/String;
    //   35495: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   35498: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   35501: invokevirtual toString : ()Ljava/lang/String;
    //   35504: ldc_w '(read)(write)(makedir)(deletedir)(view)(delete)(resume)(share)(invisible)'
    //   35507: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35510: pop
    //   35511: new java/util/Properties
    //   35514: dup
    //   35515: invokespecial <init> : ()V
    //   35518: astore #14
    //   35520: aload #14
    //   35522: ldc_w 'url'
    //   35525: new com/crushftp/client/File_U
    //   35528: dup
    //   35529: aload #11
    //   35531: invokespecial <init> : (Ljava/lang/String;)V
    //   35534: invokevirtual toURI : ()Ljava/net/URI;
    //   35537: invokevirtual toURL : ()Ljava/net/URL;
    //   35540: invokevirtual toExternalForm : ()Ljava/lang/String;
    //   35543: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35546: pop
    //   35547: aload #14
    //   35549: ldc_w 'type'
    //   35552: ldc_w 'file'
    //   35555: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35558: pop
    //   35559: new java/util/Vector
    //   35562: dup
    //   35563: invokespecial <init> : ()V
    //   35566: astore #15
    //   35568: aload #15
    //   35570: aload #14
    //   35572: invokevirtual addElement : (Ljava/lang/Object;)V
    //   35575: aload_0
    //   35576: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35579: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   35582: getfield uVFS : Lcrushftp/server/VFS;
    //   35585: getfield homes : Ljava/util/Vector;
    //   35588: iconst_0
    //   35589: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   35592: checkcast java/util/Properties
    //   35595: astore #16
    //   35597: new java/lang/StringBuffer
    //   35600: dup
    //   35601: aload_0
    //   35602: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35605: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   35608: ldc_w 'root_dir'
    //   35611: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   35614: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   35617: invokespecial <init> : (Ljava/lang/String;)V
    //   35620: aload #12
    //   35622: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   35625: ldc_w '/'
    //   35628: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   35631: invokevirtual toString : ()Ljava/lang/String;
    //   35634: astore #17
    //   35636: new java/util/Properties
    //   35639: dup
    //   35640: invokespecial <init> : ()V
    //   35643: astore #18
    //   35645: aload #18
    //   35647: ldc_w 'virtualPath'
    //   35650: aload #17
    //   35652: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35655: pop
    //   35656: aload #18
    //   35658: ldc_w 'name'
    //   35661: aload #12
    //   35663: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35666: pop
    //   35667: aload #18
    //   35669: ldc_w 'type'
    //   35672: ldc_w 'FILE'
    //   35675: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35678: pop
    //   35679: aload #18
    //   35681: ldc_w 'vItems'
    //   35684: aload #15
    //   35686: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35689: pop
    //   35690: aload #16
    //   35692: aload #17
    //   35694: iconst_0
    //   35695: aload #17
    //   35697: invokevirtual length : ()I
    //   35700: iconst_1
    //   35701: isub
    //   35702: invokevirtual substring : (II)Ljava/lang/String;
    //   35705: aload #18
    //   35707: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   35710: pop
    //   35711: new java/util/Vector
    //   35714: dup
    //   35715: invokespecial <init> : ()V
    //   35718: astore #9
    //   35720: aconst_null
    //   35721: checkcast [Ljava/lang/String;
    //   35724: astore #10
    //   35726: aload_1
    //   35727: ldc_w 'paths'
    //   35730: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   35733: ldc_w ';'
    //   35736: invokevirtual indexOf : (Ljava/lang/String;)I
    //   35739: ifge -> 35747
    //   35742: goto_w -> 35770
    //   35747: aload_1
    //   35748: ldc_w 'paths'
    //   35751: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   35754: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   35757: ldc_w ';'
    //   35760: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   35763: astore #10
    //   35765: goto_w -> 35788
    //   35770: aload_1
    //   35771: ldc_w 'paths'
    //   35774: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   35777: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   35780: ldc_w '\\r\\n'
    //   35783: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   35786: astore #10
    //   35788: iconst_0
    //   35789: istore #11
    //   35791: goto_w -> 36169
    //   35796: aload #10
    //   35798: iload #11
    //   35800: aaload
    //   35801: invokevirtual trim : ()Ljava/lang/String;
    //   35804: astore #12
    //   35806: aload #12
    //   35808: ldc ''
    //   35810: invokevirtual equals : (Ljava/lang/Object;)Z
    //   35813: ifne -> 35821
    //   35816: goto_w -> 35826
    //   35821: goto_w -> 36166
    //   35826: aload #12
    //   35828: aload_0
    //   35829: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35832: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   35835: ldc_w 'root_dir'
    //   35838: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   35841: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   35844: ifne -> 35852
    //   35847: goto_w -> 35877
    //   35852: aload #12
    //   35854: aload_0
    //   35855: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35858: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   35861: ldc_w 'root_dir'
    //   35864: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   35867: invokevirtual length : ()I
    //   35870: iconst_1
    //   35871: isub
    //   35872: invokevirtual substring : (I)Ljava/lang/String;
    //   35875: astore #12
    //   35877: aload_0
    //   35878: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35881: aload #12
    //   35883: invokevirtual setupCurrentDir : (Ljava/lang/String;)V
    //   35886: ldc_w 'HTTP_SERVER'
    //   35889: iconst_2
    //   35890: new java/lang/StringBuffer
    //   35893: dup
    //   35894: ldc_w 'Sharing:'
    //   35897: invokespecial <init> : (Ljava/lang/String;)V
    //   35900: aload #12
    //   35902: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   35905: ldc_w '  vs.  '
    //   35908: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   35911: aload_0
    //   35912: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35915: invokevirtual pwd : ()Ljava/lang/String;
    //   35918: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   35921: invokevirtual toString : ()Ljava/lang/String;
    //   35924: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   35927: pop
    //   35928: aload_0
    //   35929: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35932: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   35935: getfield uVFS : Lcrushftp/server/VFS;
    //   35938: aload_0
    //   35939: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   35942: invokevirtual pwd : ()Ljava/lang/String;
    //   35945: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   35948: astore #13
    //   35950: ldc_w 'HTTP_SERVER'
    //   35953: iconst_2
    //   35954: new java/lang/StringBuffer
    //   35957: dup
    //   35958: ldc_w 'Sharing:'
    //   35961: invokespecial <init> : (Ljava/lang/String;)V
    //   35964: aload #13
    //   35966: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   35969: invokevirtual toString : ()Ljava/lang/String;
    //   35972: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   35975: pop
    //   35976: new com/crushftp/client/VRL
    //   35979: dup
    //   35980: aload #13
    //   35982: ldc_w 'url'
    //   35985: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   35988: invokespecial <init> : (Ljava/lang/String;)V
    //   35991: astore #14
    //   35993: aconst_null
    //   35994: astore #15
    //   35996: aload_0
    //   35997: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36000: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36003: getfield uVFS : Lcrushftp/server/VFS;
    //   36006: aload #13
    //   36008: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   36011: astore #16
    //   36013: aload #16
    //   36015: instanceof com/crushftp/client/S3CrushClient
    //   36018: ifne -> 36026
    //   36021: goto_w -> 36055
    //   36026: aload #16
    //   36028: aload #14
    //   36030: invokevirtual getUsername : ()Ljava/lang/String;
    //   36033: aload #14
    //   36035: invokevirtual getPassword : ()Ljava/lang/String;
    //   36038: aload #14
    //   36040: invokevirtual getPath : ()Ljava/lang/String;
    //   36043: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   36046: invokevirtual login : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   36049: pop
    //   36050: goto_w -> 36072
    //   36055: aload #16
    //   36057: aload #14
    //   36059: invokevirtual getUsername : ()Ljava/lang/String;
    //   36062: aload #14
    //   36064: invokevirtual getPassword : ()Ljava/lang/String;
    //   36067: aconst_null
    //   36068: invokevirtual login : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   36071: pop
    //   36072: aload #16
    //   36074: aload #14
    //   36076: invokevirtual getPath : ()Ljava/lang/String;
    //   36079: invokevirtual stat : (Ljava/lang/String;)Ljava/util/Properties;
    //   36082: astore #15
    //   36084: goto_w -> 36120
    //   36089: astore #18
    //   36091: jsr_w -> 36099
    //   36096: aload #18
    //   36098: athrow
    //   36099: astore #17
    //   36101: aload_0
    //   36102: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36105: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36108: getfield uVFS : Lcrushftp/server/VFS;
    //   36111: aload #16
    //   36113: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   36116: astore #16
    //   36118: ret #17
    //   36120: jsr_w -> 36099
    //   36125: aload #15
    //   36127: ldc_w 'privs'
    //   36130: aload #13
    //   36132: ldc_w 'privs'
    //   36135: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   36138: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   36141: pop
    //   36142: aload #15
    //   36144: ldc_w 'root_dir'
    //   36147: aload #13
    //   36149: ldc_w 'root_dir'
    //   36152: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   36155: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   36158: pop
    //   36159: aload #9
    //   36161: aload #15
    //   36163: invokevirtual addElement : (Ljava/lang/Object;)V
    //   36166: iinc #11, 1
    //   36169: iload #11
    //   36171: aload #10
    //   36173: arraylength
    //   36174: if_icmpge -> 36182
    //   36177: goto_w -> 35796
    //   36182: aload_1
    //   36183: ldc_w 'emailBody'
    //   36186: aload_1
    //   36187: ldc_w 'emailBody'
    //   36190: ldc ''
    //   36192: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   36195: ldc_w '&amp;'
    //   36198: ldc_w '&'
    //   36201: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   36204: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   36207: pop
    //   36208: aload_1
    //   36209: ldc_w 'emailBody'
    //   36212: aload_1
    //   36213: ldc_w 'emailBody'
    //   36216: ldc ''
    //   36218: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   36221: ldc_w '%26amp%3B'
    //   36224: ldc_w '&'
    //   36227: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   36230: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   36233: pop
    //   36234: aload_0
    //   36235: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36238: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36241: ldc 'user_name'
    //   36243: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   36246: astore #11
    //   36248: aload #9
    //   36250: aload_1
    //   36251: aload_0
    //   36252: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36255: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36258: getfield user : Ljava/util/Properties;
    //   36261: ldc_w 'web_customizations'
    //   36264: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   36267: checkcast java/util/Vector
    //   36270: aload #11
    //   36272: aload_0
    //   36273: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36276: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36279: getfield server_item : Ljava/util/Properties;
    //   36282: ldc_w 'linkedServer'
    //   36285: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   36288: aload_0
    //   36289: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36292: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36295: getfield user : Ljava/util/Properties;
    //   36298: aload_0
    //   36299: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36302: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36305: getfield date_time : Ljava/text/SimpleDateFormat;
    //   36308: aload_0
    //   36309: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36312: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36315: aload #5
    //   36317: ldc_w 'publish_attach'
    //   36320: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   36323: invokestatic createShare : (Ljava/util/Vector;Ljava/util/Properties;Ljava/util/Vector;Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;Ljava/text/SimpleDateFormat;Lcrushftp/handlers/SessionCrush;Z)Ljava/lang/String;
    //   36326: astore #8
    //   36328: aload_1
    //   36329: ldc_w 'keywords'
    //   36332: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   36335: ifne -> 36343
    //   36338: goto_w -> 36370
    //   36343: aload_1
    //   36344: ldc_w 'names'
    //   36347: aload_1
    //   36348: ldc_w 'paths'
    //   36351: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   36354: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   36357: pop
    //   36358: aload_1
    //   36359: aload_0
    //   36360: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36363: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36366: invokestatic processKeywordsEdit : (Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;)Ljava/lang/String;
    //   36369: pop
    //   36370: aload_0
    //   36371: aload #8
    //   36373: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   36376: ireturn
    //   36377: aload #5
    //   36379: ldc_w 'customEvent'
    //   36382: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   36385: ifne -> 36393
    //   36388: goto_w -> 37273
    //   36393: ldc ''
    //   36395: astore #8
    //   36397: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   36400: ifne -> 36408
    //   36403: goto_w -> 36645
    //   36408: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   36411: ldc_w 'crushftp.dmz.queue'
    //   36414: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   36417: checkcast java/util/Vector
    //   36420: astore #9
    //   36422: new java/util/Properties
    //   36425: dup
    //   36426: invokespecial <init> : ()V
    //   36429: astore #10
    //   36431: aload #10
    //   36433: ldc_w 'type'
    //   36436: ldc_w 'PUT:CUSTOM'
    //   36439: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   36442: pop
    //   36443: aload #10
    //   36445: ldc_w 'id'
    //   36448: invokestatic makeBoundary : ()Ljava/lang/String;
    //   36451: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   36454: pop
    //   36455: aload_0
    //   36456: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36459: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36462: getfield uVFS : Lcrushftp/server/VFS;
    //   36465: aload_0
    //   36466: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36469: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36472: ldc_w 'root_dir'
    //   36475: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   36478: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   36481: astore #11
    //   36483: aload_0
    //   36484: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36487: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36490: getfield uVFS : Lcrushftp/server/VFS;
    //   36493: aload #11
    //   36495: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   36498: astore #12
    //   36500: aload #10
    //   36502: ldc_w 'crushAuth'
    //   36505: aload #12
    //   36507: ldc_w 'crushAuth'
    //   36510: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   36513: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   36516: pop
    //   36517: aload_0
    //   36518: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36521: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36524: getfield uVFS : Lcrushftp/server/VFS;
    //   36527: aload #12
    //   36529: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   36532: pop
    //   36533: aload #10
    //   36535: ldc 'user_ip'
    //   36537: aload_0
    //   36538: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36541: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36544: ldc 'user_ip'
    //   36546: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   36549: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   36552: pop
    //   36553: aload #10
    //   36555: ldc_w 'request'
    //   36558: aload_1
    //   36559: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   36562: pop
    //   36563: aload #10
    //   36565: ldc 'clientid'
    //   36567: aload_0
    //   36568: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36571: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36574: ldc 'clientid'
    //   36576: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   36579: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   36582: pop
    //   36583: aload #10
    //   36585: ldc_w 'need_response'
    //   36588: ldc 'true'
    //   36590: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   36593: pop
    //   36594: aload #9
    //   36596: aload #10
    //   36598: invokevirtual addElement : (Ljava/lang/Object;)V
    //   36601: aload #10
    //   36603: sipush #300
    //   36606: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   36609: astore #10
    //   36611: aload_0
    //   36612: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36615: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36618: getfield uVFS : Lcrushftp/server/VFS;
    //   36621: aload #12
    //   36623: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   36626: pop
    //   36627: aload #10
    //   36629: ldc_w 'object_response'
    //   36632: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   36635: invokevirtual toString : ()Ljava/lang/String;
    //   36638: astore #8
    //   36640: goto_w -> 37252
    //   36645: aload_1
    //   36646: invokestatic urlDecodePost : (Ljava/util/Properties;)Ljava/util/Properties;
    //   36649: astore_1
    //   36650: new java/util/Vector
    //   36653: dup
    //   36654: invokespecial <init> : ()V
    //   36657: astore #9
    //   36659: aconst_null
    //   36660: checkcast [Ljava/lang/String;
    //   36663: astore #10
    //   36665: aload_1
    //   36666: ldc_w 'paths'
    //   36669: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   36672: ldc_w '|'
    //   36675: invokevirtual indexOf : (Ljava/lang/String;)I
    //   36678: ifge -> 36686
    //   36681: goto_w -> 36706
    //   36686: aload_1
    //   36687: ldc_w 'paths'
    //   36690: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   36693: ldc_w '\|'
    //   36696: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   36699: astore #10
    //   36701: goto_w -> 36765
    //   36706: aload_1
    //   36707: ldc_w 'paths'
    //   36710: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   36713: ldc_w ';'
    //   36716: invokevirtual indexOf : (Ljava/lang/String;)I
    //   36719: ifge -> 36727
    //   36722: goto_w -> 36747
    //   36727: aload_1
    //   36728: ldc_w 'paths'
    //   36731: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   36734: ldc_w ';'
    //   36737: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   36740: astore #10
    //   36742: goto_w -> 36765
    //   36747: aload_1
    //   36748: ldc_w 'paths'
    //   36751: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   36754: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   36757: ldc_w '\\r\\n'
    //   36760: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   36763: astore #10
    //   36765: aload #10
    //   36767: iconst_0
    //   36768: aaload
    //   36769: astore #11
    //   36771: iconst_0
    //   36772: istore #12
    //   36774: goto_w -> 36837
    //   36779: aload #10
    //   36781: iload #12
    //   36783: aaload
    //   36784: invokevirtual trim : ()Ljava/lang/String;
    //   36787: astore #13
    //   36789: aload #13
    //   36791: ldc ''
    //   36793: invokevirtual equals : (Ljava/lang/Object;)Z
    //   36796: ifne -> 36804
    //   36799: goto_w -> 36809
    //   36804: goto_w -> 36834
    //   36809: aload #13
    //   36811: invokevirtual length : ()I
    //   36814: aload #11
    //   36816: invokevirtual length : ()I
    //   36819: if_icmplt -> 36827
    //   36822: goto_w -> 36834
    //   36827: aload #10
    //   36829: iload #12
    //   36831: aaload
    //   36832: astore #11
    //   36834: iinc #12, 1
    //   36837: iload #12
    //   36839: aload #10
    //   36841: arraylength
    //   36842: if_icmpge -> 36850
    //   36845: goto_w -> 36779
    //   36850: aload #11
    //   36852: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   36855: astore #11
    //   36857: iconst_0
    //   36858: istore #12
    //   36860: goto_w -> 37224
    //   36865: aload #10
    //   36867: iload #12
    //   36869: aaload
    //   36870: invokevirtual trim : ()Ljava/lang/String;
    //   36873: astore #13
    //   36875: aload #13
    //   36877: ldc ''
    //   36879: invokevirtual equals : (Ljava/lang/Object;)Z
    //   36882: ifne -> 36890
    //   36885: goto_w -> 36895
    //   36890: goto_w -> 37221
    //   36895: aload #13
    //   36897: aload_0
    //   36898: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36901: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36904: ldc_w 'root_dir'
    //   36907: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   36910: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   36913: ifne -> 36921
    //   36916: goto_w -> 36946
    //   36921: aload #13
    //   36923: aload_0
    //   36924: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36927: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   36930: ldc_w 'root_dir'
    //   36933: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   36936: invokevirtual length : ()I
    //   36939: iconst_1
    //   36940: isub
    //   36941: invokevirtual substring : (I)Ljava/lang/String;
    //   36944: astore #13
    //   36946: aload_0
    //   36947: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36950: aload #13
    //   36952: invokevirtual setupCurrentDir : (Ljava/lang/String;)V
    //   36955: ldc_w 'HTTP_SERVER'
    //   36958: iconst_2
    //   36959: new java/lang/StringBuffer
    //   36962: dup
    //   36963: ldc_w 'Custom:'
    //   36966: invokespecial <init> : (Ljava/lang/String;)V
    //   36969: aload #13
    //   36971: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   36974: ldc_w '  vs.  '
    //   36977: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   36980: aload_0
    //   36981: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   36984: invokevirtual pwd : ()Ljava/lang/String;
    //   36987: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   36990: invokevirtual toString : ()Ljava/lang/String;
    //   36993: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   36996: pop
    //   36997: aload_0
    //   36998: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   37001: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   37004: getfield uVFS : Lcrushftp/server/VFS;
    //   37007: aload_0
    //   37008: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   37011: invokevirtual pwd : ()Ljava/lang/String;
    //   37014: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   37017: astore #14
    //   37019: ldc_w 'HTTP_SERVER'
    //   37022: iconst_2
    //   37023: new java/lang/StringBuffer
    //   37026: dup
    //   37027: ldc_w 'Custom:'
    //   37030: invokespecial <init> : (Ljava/lang/String;)V
    //   37033: aload #14
    //   37035: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   37038: invokevirtual toString : ()Ljava/lang/String;
    //   37041: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   37044: pop
    //   37045: aload #14
    //   37047: ldc_w 'root_dir'
    //   37050: aload #14
    //   37052: ldc_w 'root_dir'
    //   37055: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   37058: new java/lang/StringBuffer
    //   37061: dup
    //   37062: aload_0
    //   37063: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   37066: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   37069: ldc_w 'root_dir'
    //   37072: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   37075: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37078: invokespecial <init> : (Ljava/lang/String;)V
    //   37081: aload #11
    //   37083: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   37086: invokevirtual toString : ()Ljava/lang/String;
    //   37089: invokevirtual length : ()I
    //   37092: iconst_2
    //   37093: isub
    //   37094: invokevirtual substring : (I)Ljava/lang/String;
    //   37097: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   37100: pop
    //   37101: goto_w -> 37214
    //   37106: astore #15
    //   37108: ldc 'SERVER'
    //   37110: iconst_2
    //   37111: aload #15
    //   37113: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   37116: pop
    //   37117: ldc 'SERVER'
    //   37119: iconst_2
    //   37120: new java/lang/StringBuffer
    //   37123: dup
    //   37124: ldc_w 'Short_folder:'
    //   37127: invokespecial <init> : (Ljava/lang/String;)V
    //   37130: aload #11
    //   37132: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   37135: invokevirtual toString : ()Ljava/lang/String;
    //   37138: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   37141: pop
    //   37142: ldc 'SERVER'
    //   37144: iconst_2
    //   37145: new java/lang/StringBuffer
    //   37148: dup
    //   37149: ldc_w 'root_dir:'
    //   37152: invokespecial <init> : (Ljava/lang/String;)V
    //   37155: aload #14
    //   37157: ldc_w 'root_dir'
    //   37160: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   37163: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   37166: invokevirtual toString : ()Ljava/lang/String;
    //   37169: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   37172: pop
    //   37173: ldc 'SERVER'
    //   37175: iconst_2
    //   37176: new java/lang/StringBuffer
    //   37179: dup
    //   37180: ldc_w 'session root_dir:'
    //   37183: invokespecial <init> : (Ljava/lang/String;)V
    //   37186: aload_0
    //   37187: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   37190: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   37193: ldc_w 'root_dir'
    //   37196: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   37199: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   37202: invokevirtual toString : ()Ljava/lang/String;
    //   37205: invokestatic log : (Ljava/lang/String;ILjava/lang/String;)Z
    //   37208: pop
    //   37209: goto_w -> 37214
    //   37214: aload #9
    //   37216: aload #14
    //   37218: invokevirtual addElement : (Ljava/lang/Object;)V
    //   37221: iinc #12, 1
    //   37224: iload #12
    //   37226: aload #10
    //   37228: arraylength
    //   37229: if_icmpge -> 37237
    //   37232: goto_w -> 36865
    //   37237: aload #9
    //   37239: aload_1
    //   37240: aload_0
    //   37241: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   37244: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   37247: invokestatic createCustom : (Ljava/util/Vector;Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;)Ljava/lang/String;
    //   37250: astore #8
    //   37252: aload_0
    //   37253: aload #8
    //   37255: aload_1
    //   37256: ldc_w 'json'
    //   37259: ldc 'false'
    //   37261: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   37264: ldc 'true'
    //   37266: invokevirtual equals : (Ljava/lang/Object;)Z
    //   37269: invokevirtual writeResponse : (Ljava/lang/String;Z)Z
    //   37272: ireturn
    //   37273: aload #5
    //   37275: ldc_w 'cut_paste'
    //   37278: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   37281: ifeq -> 37289
    //   37284: goto_w -> 37305
    //   37289: aload #5
    //   37291: ldc_w 'copy_paste'
    //   37294: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   37297: ifne -> 37305
    //   37300: goto_w -> 37563
    //   37305: aload_0
    //   37306: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   37309: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   37312: ldc_w 'paste_ids'
    //   37315: invokevirtual get : (Ljava/lang/String;)Ljava/lang/Object;
    //   37318: ifnull -> 37326
    //   37321: goto_w -> 37346
    //   37326: aload_0
    //   37327: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   37330: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   37333: ldc_w 'paste_ids'
    //   37336: new java/util/Properties
    //   37339: dup
    //   37340: invokespecial <init> : ()V
    //   37343: invokevirtual put : (Ljava/lang/String;Ljava/lang/Object;)V
    //   37346: aload_0
    //   37347: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   37350: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   37353: ldc_w 'paste_ids'
    //   37356: invokevirtual get : (Ljava/lang/String;)Ljava/lang/Object;
    //   37359: checkcast java/util/Properties
    //   37362: astore #8
    //   37364: invokestatic makeBoundary : ()Ljava/lang/String;
    //   37367: astore #9
    //   37369: new java/lang/StringBuffer
    //   37372: dup
    //   37373: invokespecial <init> : ()V
    //   37376: ldc_w 'Starting...'
    //   37379: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   37382: astore #10
    //   37384: aload #8
    //   37386: aload #9
    //   37388: aload #10
    //   37390: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   37393: pop
    //   37394: aload_1
    //   37395: ldc_w 'names'
    //   37398: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   37401: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   37404: bipush #62
    //   37406: bipush #95
    //   37408: invokevirtual replace : (CC)Ljava/lang/String;
    //   37411: bipush #60
    //   37413: bipush #95
    //   37415: invokevirtual replace : (CC)Ljava/lang/String;
    //   37418: ldc_w '\\r\\n'
    //   37421: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   37424: astore #11
    //   37426: aload_1
    //   37427: ldc_w 'destPath'
    //   37430: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   37433: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   37436: bipush #62
    //   37438: bipush #95
    //   37440: invokevirtual replace : (CC)Ljava/lang/String;
    //   37443: bipush #60
    //   37445: bipush #95
    //   37447: invokevirtual replace : (CC)Ljava/lang/String;
    //   37450: astore #12
    //   37452: aload #5
    //   37454: astore #13
    //   37456: new crushftp/server/ServerSessionAJAX$2
    //   37459: dup
    //   37460: aload_0
    //   37461: aload #10
    //   37463: aload #11
    //   37465: aload #12
    //   37467: aload #13
    //   37469: invokespecial <init> : (Lcrushftp/server/ServerSessionAJAX;Ljava/lang/StringBuffer;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    //   37472: invokestatic startWorker : (Ljava/lang/Runnable;)Z
    //   37475: pop
    //   37476: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   37479: astore #14
    //   37481: new java/lang/StringBuffer
    //   37484: dup
    //   37485: aload #14
    //   37487: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37490: invokespecial <init> : (Ljava/lang/String;)V
    //   37493: ldc_w '<commandResult><response>'
    //   37496: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   37499: invokevirtual toString : ()Ljava/lang/String;
    //   37502: astore #14
    //   37504: new java/lang/StringBuffer
    //   37507: dup
    //   37508: aload #14
    //   37510: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37513: invokespecial <init> : (Ljava/lang/String;)V
    //   37516: aload #9
    //   37518: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   37521: invokevirtual toString : ()Ljava/lang/String;
    //   37524: astore #14
    //   37526: new java/lang/StringBuffer
    //   37529: dup
    //   37530: aload #14
    //   37532: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37535: invokespecial <init> : (Ljava/lang/String;)V
    //   37538: ldc_w '</response></commandResult>'
    //   37541: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   37544: invokevirtual toString : ()Ljava/lang/String;
    //   37547: astore #14
    //   37549: aload_0
    //   37550: aload #14
    //   37552: bipush #37
    //   37554: bipush #32
    //   37556: invokevirtual replace : (CC)Ljava/lang/String;
    //   37559: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   37562: ireturn
    //   37563: aload #5
    //   37565: ldc_w 'paste_status'
    //   37568: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   37571: ifne -> 37579
    //   37574: goto_w -> 37804
    //   37579: aload_0
    //   37580: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   37583: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   37586: ldc_w 'paste_ids'
    //   37589: invokevirtual get : (Ljava/lang/String;)Ljava/lang/Object;
    //   37592: checkcast java/util/Properties
    //   37595: astore #8
    //   37597: new java/lang/StringBuffer
    //   37600: dup
    //   37601: aload_1
    //   37602: ldc_w 'id'
    //   37605: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   37608: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37611: invokespecial <init> : (Ljava/lang/String;)V
    //   37614: invokevirtual toString : ()Ljava/lang/String;
    //   37617: astore #9
    //   37619: aload #8
    //   37621: aload #9
    //   37623: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   37626: checkcast java/lang/StringBuffer
    //   37629: astore #10
    //   37631: aload #10
    //   37633: ifnull -> 37641
    //   37636: goto_w -> 37650
    //   37641: new java/lang/StringBuffer
    //   37644: dup
    //   37645: invokespecial <init> : ()V
    //   37648: astore #10
    //   37650: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   37653: astore #11
    //   37655: aload #10
    //   37657: dup
    //   37658: astore #12
    //   37660: monitorenter
    //   37661: aload #10
    //   37663: invokevirtual toString : ()Ljava/lang/String;
    //   37666: ldc_w 'ERROR:'
    //   37669: invokevirtual indexOf : (Ljava/lang/String;)I
    //   37672: iflt -> 37680
    //   37675: goto_w -> 37699
    //   37680: aload #10
    //   37682: invokevirtual toString : ()Ljava/lang/String;
    //   37685: ldc_w 'COMPLETED:'
    //   37688: invokevirtual indexOf : (Ljava/lang/String;)I
    //   37691: ifge -> 37699
    //   37694: goto_w -> 37707
    //   37699: aload #8
    //   37701: aload #9
    //   37703: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   37706: pop
    //   37707: new java/lang/StringBuffer
    //   37710: dup
    //   37711: aload #11
    //   37713: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37716: invokespecial <init> : (Ljava/lang/String;)V
    //   37719: ldc_w '<commandResult><response>'
    //   37722: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   37725: invokevirtual toString : ()Ljava/lang/String;
    //   37728: astore #11
    //   37730: new java/lang/StringBuffer
    //   37733: dup
    //   37734: aload #11
    //   37736: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37739: invokespecial <init> : (Ljava/lang/String;)V
    //   37742: aload #10
    //   37744: invokevirtual toString : ()Ljava/lang/String;
    //   37747: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   37750: invokevirtual toString : ()Ljava/lang/String;
    //   37753: astore #11
    //   37755: new java/lang/StringBuffer
    //   37758: dup
    //   37759: aload #11
    //   37761: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37764: invokespecial <init> : (Ljava/lang/String;)V
    //   37767: ldc_w '</response></commandResult>'
    //   37770: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   37773: invokevirtual toString : ()Ljava/lang/String;
    //   37776: astore #11
    //   37778: aload #12
    //   37780: monitorexit
    //   37781: goto_w -> 37790
    //   37786: aload #12
    //   37788: monitorexit
    //   37789: athrow
    //   37790: aload_0
    //   37791: aload #11
    //   37793: bipush #37
    //   37795: bipush #32
    //   37797: invokevirtual replace : (CC)Ljava/lang/String;
    //   37800: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   37803: ireturn
    //   37804: aload #5
    //   37806: ldc_w 'paste_cancel'
    //   37809: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   37812: ifne -> 37820
    //   37815: goto_w -> 38014
    //   37820: aload_0
    //   37821: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   37824: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   37827: ldc_w 'paste_ids'
    //   37830: invokevirtual get : (Ljava/lang/String;)Ljava/lang/Object;
    //   37833: checkcast java/util/Properties
    //   37836: astore #8
    //   37838: new java/lang/StringBuffer
    //   37841: dup
    //   37842: aload_1
    //   37843: ldc_w 'id'
    //   37846: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   37849: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37852: invokespecial <init> : (Ljava/lang/String;)V
    //   37855: invokevirtual toString : ()Ljava/lang/String;
    //   37858: astore #9
    //   37860: aload #8
    //   37862: aload #9
    //   37864: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   37867: checkcast java/lang/StringBuffer
    //   37870: astore #10
    //   37872: aload #10
    //   37874: ifnull -> 37882
    //   37877: goto_w -> 37891
    //   37882: new java/lang/StringBuffer
    //   37885: dup
    //   37886: invokespecial <init> : ()V
    //   37889: astore #10
    //   37891: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   37894: astore #11
    //   37896: aload #10
    //   37898: dup
    //   37899: astore #12
    //   37901: monitorenter
    //   37902: aload #10
    //   37904: iconst_0
    //   37905: invokevirtual setLength : (I)V
    //   37908: aload #10
    //   37910: ldc_w 'CANCELLED'
    //   37913: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   37916: pop
    //   37917: new java/lang/StringBuffer
    //   37920: dup
    //   37921: aload #11
    //   37923: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37926: invokespecial <init> : (Ljava/lang/String;)V
    //   37929: ldc_w '<commandResult><response>'
    //   37932: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   37935: invokevirtual toString : ()Ljava/lang/String;
    //   37938: astore #11
    //   37940: new java/lang/StringBuffer
    //   37943: dup
    //   37944: aload #11
    //   37946: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37949: invokespecial <init> : (Ljava/lang/String;)V
    //   37952: aload #10
    //   37954: invokevirtual toString : ()Ljava/lang/String;
    //   37957: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   37960: invokevirtual toString : ()Ljava/lang/String;
    //   37963: astore #11
    //   37965: new java/lang/StringBuffer
    //   37968: dup
    //   37969: aload #11
    //   37971: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37974: invokespecial <init> : (Ljava/lang/String;)V
    //   37977: ldc_w '</response></commandResult>'
    //   37980: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   37983: invokevirtual toString : ()Ljava/lang/String;
    //   37986: astore #11
    //   37988: aload #12
    //   37990: monitorexit
    //   37991: goto_w -> 38000
    //   37996: aload #12
    //   37998: monitorexit
    //   37999: athrow
    //   38000: aload_0
    //   38001: aload #11
    //   38003: bipush #37
    //   38005: bipush #32
    //   38007: invokevirtual replace : (CC)Ljava/lang/String;
    //   38010: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   38013: ireturn
    //   38014: aload #5
    //   38016: ldc_w 'editKeywords'
    //   38019: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   38022: ifne -> 38030
    //   38025: goto_w -> 38269
    //   38030: ldc ''
    //   38032: astore #8
    //   38034: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   38037: ifne -> 38045
    //   38040: goto_w -> 38242
    //   38045: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   38048: ldc_w 'crushftp.dmz.queue'
    //   38051: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   38054: checkcast java/util/Vector
    //   38057: astore #9
    //   38059: new java/util/Properties
    //   38062: dup
    //   38063: invokespecial <init> : ()V
    //   38066: astore #10
    //   38068: aload #10
    //   38070: ldc_w 'type'
    //   38073: ldc_w 'PUT:EDIT_KEYWORDS'
    //   38076: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   38079: pop
    //   38080: aload #10
    //   38082: ldc_w 'id'
    //   38085: invokestatic makeBoundary : ()Ljava/lang/String;
    //   38088: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   38091: pop
    //   38092: aload_0
    //   38093: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38096: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   38099: getfield uVFS : Lcrushftp/server/VFS;
    //   38102: aload_0
    //   38103: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38106: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   38109: ldc_w 'root_dir'
    //   38112: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   38115: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   38118: astore #11
    //   38120: aload_0
    //   38121: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38124: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   38127: getfield uVFS : Lcrushftp/server/VFS;
    //   38130: aload #11
    //   38132: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   38135: astore #12
    //   38137: aload #10
    //   38139: ldc_w 'crushAuth'
    //   38142: aload #12
    //   38144: ldc_w 'crushAuth'
    //   38147: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   38150: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   38153: pop
    //   38154: aload_0
    //   38155: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38158: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   38161: getfield uVFS : Lcrushftp/server/VFS;
    //   38164: aload #12
    //   38166: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   38169: pop
    //   38170: aload #10
    //   38172: ldc_w 'request'
    //   38175: aload_1
    //   38176: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   38179: pop
    //   38180: aload #10
    //   38182: ldc_w 'need_response'
    //   38185: ldc 'true'
    //   38187: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   38190: pop
    //   38191: aload #9
    //   38193: aload #10
    //   38195: invokevirtual addElement : (Ljava/lang/Object;)V
    //   38198: aload #10
    //   38200: sipush #300
    //   38203: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   38206: astore #10
    //   38208: aload_0
    //   38209: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38212: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   38215: getfield uVFS : Lcrushftp/server/VFS;
    //   38218: aload #12
    //   38220: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   38223: pop
    //   38224: aload #10
    //   38226: ldc_w 'object_response'
    //   38229: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   38232: invokevirtual toString : ()Ljava/lang/String;
    //   38235: astore #8
    //   38237: goto_w -> 38255
    //   38242: aload_1
    //   38243: aload_0
    //   38244: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38247: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   38250: invokestatic processKeywordsEdit : (Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;)Ljava/lang/String;
    //   38253: astore #8
    //   38255: aload_0
    //   38256: aload #8
    //   38258: bipush #37
    //   38260: bipush #32
    //   38262: invokevirtual replace : (CC)Ljava/lang/String;
    //   38265: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   38268: ireturn
    //   38269: aload #5
    //   38271: ldc_w 'getKeywords'
    //   38274: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   38277: ifne -> 38285
    //   38280: goto_w -> 38729
    //   38285: aload_1
    //   38286: ldc_w 'path'
    //   38289: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   38292: invokevirtual trim : ()Ljava/lang/String;
    //   38295: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   38298: invokevirtual trim : ()Ljava/lang/String;
    //   38301: astore #8
    //   38303: aload #8
    //   38305: aload_0
    //   38306: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38309: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   38312: ldc_w 'root_dir'
    //   38315: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   38318: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   38321: ifne -> 38329
    //   38324: goto_w -> 38354
    //   38329: aload #8
    //   38331: aload_0
    //   38332: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38335: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   38338: ldc_w 'root_dir'
    //   38341: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   38344: invokevirtual length : ()I
    //   38347: iconst_1
    //   38348: isub
    //   38349: invokevirtual substring : (I)Ljava/lang/String;
    //   38352: astore #8
    //   38354: aload_0
    //   38355: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38358: aload #8
    //   38360: invokevirtual setupCurrentDir : (Ljava/lang/String;)V
    //   38363: aload_0
    //   38364: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38367: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   38370: getfield uVFS : Lcrushftp/server/VFS;
    //   38373: aload_0
    //   38374: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38377: invokevirtual pwd : ()Ljava/lang/String;
    //   38380: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   38383: astore #9
    //   38385: aload #9
    //   38387: ldc_w 'url'
    //   38390: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   38393: ldc_w '1'
    //   38396: iconst_1
    //   38397: invokestatic getPreviewPath : (Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
    //   38400: astore #8
    //   38402: new java/lang/StringBuffer
    //   38405: dup
    //   38406: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   38409: pop
    //   38410: ldc_w 'previews_path'
    //   38413: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   38416: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   38419: invokespecial <init> : (Ljava/lang/String;)V
    //   38422: aload #8
    //   38424: iconst_1
    //   38425: invokevirtual substring : (I)Ljava/lang/String;
    //   38428: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   38431: invokevirtual toString : ()Ljava/lang/String;
    //   38434: astore #10
    //   38436: new com/crushftp/client/File_S
    //   38439: dup
    //   38440: aload #10
    //   38442: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   38445: invokespecial <init> : (Ljava/lang/String;)V
    //   38448: invokevirtual exists : ()Z
    //   38451: ifeq -> 38459
    //   38454: goto_w -> 38475
    //   38459: new com/crushftp/client/File_S
    //   38462: dup
    //   38463: aload #10
    //   38465: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   38468: invokespecial <init> : (Ljava/lang/String;)V
    //   38471: invokevirtual mkdirs : ()Z
    //   38474: pop
    //   38475: new java/io/ByteArrayOutputStream
    //   38478: dup
    //   38479: invokespecial <init> : ()V
    //   38482: astore #11
    //   38484: new com/crushftp/client/File_S
    //   38487: dup
    //   38488: new java/lang/StringBuffer
    //   38491: dup
    //   38492: aload #10
    //   38494: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   38497: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   38500: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   38503: invokespecial <init> : (Ljava/lang/String;)V
    //   38506: ldc_w 'index.txt'
    //   38509: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   38512: invokevirtual toString : ()Ljava/lang/String;
    //   38515: invokespecial <init> : (Ljava/lang/String;)V
    //   38518: invokevirtual exists : ()Z
    //   38521: ifne -> 38529
    //   38524: goto_w -> 38578
    //   38529: new java/io/FileInputStream
    //   38532: dup
    //   38533: new com/crushftp/client/File_S
    //   38536: dup
    //   38537: new java/lang/StringBuffer
    //   38540: dup
    //   38541: aload #10
    //   38543: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   38546: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   38549: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   38552: invokespecial <init> : (Ljava/lang/String;)V
    //   38555: ldc_w 'index.txt'
    //   38558: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   38561: invokevirtual toString : ()Ljava/lang/String;
    //   38564: invokespecial <init> : (Ljava/lang/String;)V
    //   38567: invokespecial <init> : (Ljava/io/File;)V
    //   38570: aload #11
    //   38572: iconst_0
    //   38573: iconst_1
    //   38574: iconst_1
    //   38575: invokestatic streamCopier : (Ljava/io/InputStream;Ljava/io/OutputStream;ZZZ)V
    //   38578: aload_0
    //   38579: ldc_w 'HTTP/1.1 200 OK'
    //   38582: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   38585: aload_0
    //   38586: ldc_w 'Cache-Control: no-store'
    //   38589: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   38592: aload_0
    //   38593: ldc_w 'Content-Type: text/plain'
    //   38596: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   38599: aload_0
    //   38600: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38603: invokevirtual write_standard_headers : ()V
    //   38606: new java/lang/String
    //   38609: dup
    //   38610: aload #11
    //   38612: invokevirtual toByteArray : ()[B
    //   38615: ldc_w 'utf8'
    //   38618: invokespecial <init> : ([BLjava/lang/String;)V
    //   38621: invokestatic xss_strip : (Ljava/lang/String;)Ljava/lang/String;
    //   38624: ldc_w 'utf8'
    //   38627: invokevirtual getBytes : (Ljava/lang/String;)[B
    //   38630: astore #12
    //   38632: aload_0
    //   38633: new java/lang/StringBuffer
    //   38636: dup
    //   38637: ldc_w 'Content-Length: '
    //   38640: invokespecial <init> : (Ljava/lang/String;)V
    //   38643: aload #12
    //   38645: arraylength
    //   38646: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   38649: invokevirtual toString : ()Ljava/lang/String;
    //   38652: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   38655: aload_0
    //   38656: new java/lang/StringBuffer
    //   38659: dup
    //   38660: ldc_w 'Content-Disposition: attachment; filename="'
    //   38663: invokespecial <init> : (Ljava/lang/String;)V
    //   38666: aload #9
    //   38668: ldc_w 'name'
    //   38671: ldc_w 'index'
    //   38674: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   38677: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   38680: ldc_w '_keywords.txt"'
    //   38683: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   38686: invokevirtual toString : ()Ljava/lang/String;
    //   38689: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   38692: aload_0
    //   38693: ldc_w 'X-UA-Compatible: chrome=1'
    //   38696: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   38699: aload_0
    //   38700: ldc ''
    //   38702: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   38705: aload_0
    //   38706: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38709: getfield original_os : Ljava/io/OutputStream;
    //   38712: aload #12
    //   38714: invokevirtual write : ([B)V
    //   38717: aload_0
    //   38718: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38721: getfield original_os : Ljava/io/OutputStream;
    //   38724: invokevirtual flush : ()V
    //   38727: iconst_1
    //   38728: ireturn
    //   38729: aload #5
    //   38731: ldc_w 'search'
    //   38734: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   38737: ifne -> 38745
    //   38740: goto_w -> 39222
    //   38745: ldc ''
    //   38747: astore #8
    //   38749: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   38752: ifne -> 38760
    //   38755: goto_w -> 39175
    //   38760: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   38763: ldc_w 'crushftp.dmz.queue'
    //   38766: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   38769: checkcast java/util/Vector
    //   38772: astore #9
    //   38774: new java/util/Properties
    //   38777: dup
    //   38778: invokespecial <init> : ()V
    //   38781: astore #10
    //   38783: aload #10
    //   38785: ldc_w 'type'
    //   38788: ldc_w 'GET:SEARCH'
    //   38791: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   38794: pop
    //   38795: aload #10
    //   38797: ldc_w 'id'
    //   38800: invokestatic makeBoundary : ()Ljava/lang/String;
    //   38803: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   38806: pop
    //   38807: aload_0
    //   38808: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38811: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   38814: getfield uVFS : Lcrushftp/server/VFS;
    //   38817: aload_0
    //   38818: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38821: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   38824: ldc_w 'root_dir'
    //   38827: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   38830: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   38833: astore #11
    //   38835: aload_0
    //   38836: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38839: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   38842: getfield uVFS : Lcrushftp/server/VFS;
    //   38845: aload #11
    //   38847: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   38850: astore #12
    //   38852: aload #10
    //   38854: ldc_w 'crushAuth'
    //   38857: aload #12
    //   38859: ldc_w 'crushAuth'
    //   38862: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   38865: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   38868: pop
    //   38869: aload_0
    //   38870: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38873: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   38876: getfield uVFS : Lcrushftp/server/VFS;
    //   38879: aload #12
    //   38881: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   38884: pop
    //   38885: aload #10
    //   38887: ldc_w 'request'
    //   38890: aload_1
    //   38891: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   38894: pop
    //   38895: aload #10
    //   38897: ldc_w 'need_response'
    //   38900: ldc 'true'
    //   38902: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   38905: pop
    //   38906: aload #9
    //   38908: aload #10
    //   38910: invokevirtual addElement : (Ljava/lang/Object;)V
    //   38913: aload #10
    //   38915: sipush #900
    //   38918: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   38921: astore #10
    //   38923: aload_0
    //   38924: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   38927: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   38930: getfield uVFS : Lcrushftp/server/VFS;
    //   38933: aload #12
    //   38935: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   38938: pop
    //   38939: aload #10
    //   38941: ldc_w 'object_response'
    //   38944: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   38947: checkcast java/lang/String
    //   38950: astore #8
    //   38952: aload #8
    //   38954: ifnull -> 38962
    //   38957: goto_w -> 38966
    //   38962: ldc ''
    //   38964: astore #8
    //   38966: aload #8
    //   38968: ldc ''
    //   38970: invokevirtual equals : (Ljava/lang/Object;)Z
    //   38973: ifne -> 38981
    //   38976: goto_w -> 39170
    //   38981: ldc_w '{\\r\\n'
    //   38984: astore #8
    //   38986: new java/lang/StringBuffer
    //   38989: dup
    //   38990: aload #8
    //   38992: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   38995: invokespecial <init> : (Ljava/lang/String;)V
    //   38998: ldc_w '\\t"privs" : "",\\r\\n'
    //   39001: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39004: invokevirtual toString : ()Ljava/lang/String;
    //   39007: astore #8
    //   39009: new java/lang/StringBuffer
    //   39012: dup
    //   39013: aload #8
    //   39015: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   39018: invokespecial <init> : (Ljava/lang/String;)V
    //   39021: ldc_w '\\t"path" : "",\\r\\n'
    //   39024: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39027: invokevirtual toString : ()Ljava/lang/String;
    //   39030: astore #8
    //   39032: new java/lang/StringBuffer
    //   39035: dup
    //   39036: aload #8
    //   39038: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   39041: invokespecial <init> : (Ljava/lang/String;)V
    //   39044: ldc_w '\\t"defaultStrings" : "",\\r\\n'
    //   39047: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39050: invokevirtual toString : ()Ljava/lang/String;
    //   39053: astore #8
    //   39055: new java/lang/StringBuffer
    //   39058: dup
    //   39059: aload #8
    //   39061: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   39064: invokespecial <init> : (Ljava/lang/String;)V
    //   39067: ldc_w '\\t"site" : "",\\r\\n'
    //   39070: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39073: invokevirtual toString : ()Ljava/lang/String;
    //   39076: astore #8
    //   39078: new java/lang/StringBuffer
    //   39081: dup
    //   39082: aload #8
    //   39084: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   39087: invokespecial <init> : (Ljava/lang/String;)V
    //   39090: ldc_w '\\t"quota" : "",\\r\\n'
    //   39093: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39096: invokevirtual toString : ()Ljava/lang/String;
    //   39099: astore #8
    //   39101: new java/lang/StringBuffer
    //   39104: dup
    //   39105: aload #8
    //   39107: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   39110: invokespecial <init> : (Ljava/lang/String;)V
    //   39113: ldc_w '\\t"quota_bytes" : "",\\r\\n'
    //   39116: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39119: invokevirtual toString : ()Ljava/lang/String;
    //   39122: astore #8
    //   39124: new java/lang/StringBuffer
    //   39127: dup
    //   39128: aload #8
    //   39130: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   39133: invokespecial <init> : (Ljava/lang/String;)V
    //   39136: ldc_w '\\t"listing" : []\\r\\n'
    //   39139: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39142: invokevirtual toString : ()Ljava/lang/String;
    //   39145: astore #8
    //   39147: new java/lang/StringBuffer
    //   39150: dup
    //   39151: aload #8
    //   39153: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   39156: invokespecial <init> : (Ljava/lang/String;)V
    //   39159: ldc_w '}\\r\\n'
    //   39162: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39165: invokevirtual toString : ()Ljava/lang/String;
    //   39168: astore #8
    //   39170: goto_w -> 39188
    //   39175: aload_1
    //   39176: aload_0
    //   39177: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   39180: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   39183: invokestatic search : (Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;)Ljava/lang/String;
    //   39186: astore #8
    //   39188: aload_0
    //   39189: aload #8
    //   39191: iconst_0
    //   39192: sipush #200
    //   39195: iconst_1
    //   39196: iconst_1
    //   39197: iconst_1
    //   39198: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   39201: istore #9
    //   39203: aload_0
    //   39204: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   39207: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   39210: ldc_w 'search_status'
    //   39213: ldc_w '0/1'
    //   39216: invokevirtual put : (Ljava/lang/String;Ljava/lang/Object;)V
    //   39219: iload #9
    //   39221: ireturn
    //   39222: aload #5
    //   39224: ldc_w 'getSearchStatus'
    //   39227: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   39230: ifne -> 39238
    //   39233: goto_w -> 39543
    //   39238: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   39241: astore #8
    //   39243: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   39246: ifne -> 39254
    //   39249: goto_w -> 39475
    //   39254: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   39257: ldc_w 'crushftp.dmz.queue'
    //   39260: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   39263: checkcast java/util/Vector
    //   39266: astore #9
    //   39268: new java/util/Properties
    //   39271: dup
    //   39272: invokespecial <init> : ()V
    //   39275: astore #10
    //   39277: aload #10
    //   39279: ldc_w 'type'
    //   39282: ldc_w 'GET:SEARCH_STATUS'
    //   39285: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   39288: pop
    //   39289: aload #10
    //   39291: ldc_w 'id'
    //   39294: invokestatic makeBoundary : ()Ljava/lang/String;
    //   39297: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   39300: pop
    //   39301: aload_0
    //   39302: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   39305: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   39308: getfield uVFS : Lcrushftp/server/VFS;
    //   39311: aload_0
    //   39312: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   39315: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   39318: ldc_w 'root_dir'
    //   39321: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   39324: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   39327: astore #11
    //   39329: aload_0
    //   39330: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   39333: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   39336: getfield uVFS : Lcrushftp/server/VFS;
    //   39339: aload #11
    //   39341: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   39344: astore #12
    //   39346: aload #10
    //   39348: ldc_w 'crushAuth'
    //   39351: aload #12
    //   39353: ldc_w 'crushAuth'
    //   39356: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   39359: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   39362: pop
    //   39363: aload_0
    //   39364: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   39367: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   39370: getfield uVFS : Lcrushftp/server/VFS;
    //   39373: aload #12
    //   39375: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   39378: pop
    //   39379: aload #10
    //   39381: ldc_w 'need_response'
    //   39384: ldc 'true'
    //   39386: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   39389: pop
    //   39390: aload #9
    //   39392: aload #10
    //   39394: invokevirtual addElement : (Ljava/lang/Object;)V
    //   39397: aload #10
    //   39399: sipush #300
    //   39402: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   39405: astore #10
    //   39407: aload_0
    //   39408: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   39411: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   39414: getfield uVFS : Lcrushftp/server/VFS;
    //   39417: aload #12
    //   39419: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   39422: pop
    //   39423: aload #10
    //   39425: ldc_w 'object_response'
    //   39428: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   39431: invokevirtual toString : ()Ljava/lang/String;
    //   39434: astore #13
    //   39436: new java/lang/StringBuffer
    //   39439: dup
    //   39440: aload #8
    //   39442: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   39445: invokespecial <init> : (Ljava/lang/String;)V
    //   39448: ldc_w '<commandResult><response>'
    //   39451: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39454: aload #13
    //   39456: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39459: ldc_w '</response></commandResult>'
    //   39462: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39465: invokevirtual toString : ()Ljava/lang/String;
    //   39468: astore #8
    //   39470: goto_w -> 39536
    //   39475: new java/lang/StringBuffer
    //   39478: dup
    //   39479: aload #8
    //   39481: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   39484: invokespecial <init> : (Ljava/lang/String;)V
    //   39487: ldc_w '<commandResult><response>'
    //   39490: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39493: aload_0
    //   39494: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   39497: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   39500: ldc_w 'search_status'
    //   39503: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   39506: invokevirtual trim : ()Ljava/lang/String;
    //   39509: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39512: ldc_w '</response></commandResult>'
    //   39515: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39518: invokevirtual toString : ()Ljava/lang/String;
    //   39521: astore #8
    //   39523: aload_0
    //   39524: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   39527: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   39530: getfield uVFS : Lcrushftp/server/VFS;
    //   39533: invokevirtual reset : ()V
    //   39536: aload_0
    //   39537: aload #8
    //   39539: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   39542: ireturn
    //   39543: aload #5
    //   39545: ldc_w 'getTunnels'
    //   39548: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   39551: ifne -> 39559
    //   39554: goto_w -> 39985
    //   39559: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   39562: astore #8
    //   39564: new java/lang/StringBuffer
    //   39567: dup
    //   39568: aload_0
    //   39569: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   39572: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   39575: getfield user : Ljava/util/Properties;
    //   39578: ldc_w 'tunnels'
    //   39581: ldc ''
    //   39583: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   39586: invokevirtual trim : ()Ljava/lang/String;
    //   39589: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   39592: invokespecial <init> : (Ljava/lang/String;)V
    //   39595: ldc_w ','
    //   39598: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39601: invokevirtual toString : ()Ljava/lang/String;
    //   39604: astore #9
    //   39606: ldc_w 'tunnels'
    //   39609: invokestatic VG : (Ljava/lang/String;)Ljava/util/Vector;
    //   39612: invokevirtual clone : ()Ljava/lang/Object;
    //   39615: checkcast java/util/Vector
    //   39618: astore #10
    //   39620: aload #10
    //   39622: ldc_w 'tunnels_dmz'
    //   39625: invokestatic VG : (Ljava/lang/String;)Ljava/util/Vector;
    //   39628: invokevirtual addAll : (Ljava/util/Collection;)Z
    //   39631: pop
    //   39632: new java/io/ByteArrayOutputStream
    //   39635: dup
    //   39636: invokespecial <init> : ()V
    //   39639: astore #11
    //   39641: aload_0
    //   39642: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   39645: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   39648: ldc_w 'speed_limit_upload'
    //   39651: invokevirtual IG : (Ljava/lang/String;)I
    //   39654: istore #12
    //   39656: iload #12
    //   39658: ifgt -> 39666
    //   39661: goto_w -> 39696
    //   39666: iload #12
    //   39668: ldc_w 'max_server_upload_speed'
    //   39671: invokestatic IG : (Ljava/lang/String;)I
    //   39674: if_icmpgt -> 39682
    //   39677: goto_w -> 39696
    //   39682: ldc_w 'max_server_upload_speed'
    //   39685: invokestatic IG : (Ljava/lang/String;)I
    //   39688: ifle -> 39696
    //   39691: goto_w -> 39706
    //   39696: iload #12
    //   39698: ifeq -> 39706
    //   39701: goto_w -> 39714
    //   39706: ldc_w 'max_server_upload_speed'
    //   39709: invokestatic IG : (Ljava/lang/String;)I
    //   39712: istore #12
    //   39714: iconst_0
    //   39715: istore #13
    //   39717: goto_w -> 39892
    //   39722: new java/io/ByteArrayOutputStream
    //   39725: dup
    //   39726: invokespecial <init> : ()V
    //   39729: astore #14
    //   39731: aload #10
    //   39733: iload #13
    //   39735: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   39738: checkcast java/util/Properties
    //   39741: astore #15
    //   39743: aload #9
    //   39745: new java/lang/StringBuffer
    //   39748: dup
    //   39749: aload #15
    //   39751: ldc_w 'id'
    //   39754: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   39757: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   39760: invokespecial <init> : (Ljava/lang/String;)V
    //   39763: ldc_w ','
    //   39766: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39769: invokevirtual toString : ()Ljava/lang/String;
    //   39772: invokevirtual indexOf : (Ljava/lang/String;)I
    //   39775: ifge -> 39783
    //   39778: goto_w -> 39889
    //   39783: aload #15
    //   39785: ldc_w 'tunnelType'
    //   39788: ldc_w 'HTTP'
    //   39791: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   39794: ldc_w 'SSH'
    //   39797: invokevirtual equals : (Ljava/lang/Object;)Z
    //   39800: ifeq -> 39808
    //   39803: goto_w -> 39889
    //   39808: aload #15
    //   39810: ldc_w 'max_speed'
    //   39813: new java/lang/StringBuffer
    //   39816: dup
    //   39817: iload #12
    //   39819: invokestatic valueOf : (I)Ljava/lang/String;
    //   39822: invokespecial <init> : (Ljava/lang/String;)V
    //   39825: invokevirtual toString : ()Ljava/lang/String;
    //   39828: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   39831: pop
    //   39832: aload #15
    //   39834: aload #14
    //   39836: ldc ''
    //   39838: invokevirtual store : (Ljava/io/OutputStream;Ljava/lang/String;)V
    //   39841: new java/lang/String
    //   39844: dup
    //   39845: aload #14
    //   39847: invokevirtual toByteArray : ()[B
    //   39850: ldc_w 'UTF8'
    //   39853: invokespecial <init> : ([BLjava/lang/String;)V
    //   39856: astore #16
    //   39858: aload #16
    //   39860: invokestatic url_encode : (Ljava/lang/String;)Ljava/lang/String;
    //   39863: astore #16
    //   39865: aload #11
    //   39867: aload #16
    //   39869: ldc_w 'UTF8'
    //   39872: invokevirtual getBytes : (Ljava/lang/String;)[B
    //   39875: invokevirtual write : ([B)V
    //   39878: aload #11
    //   39880: ldc_w ';;;'
    //   39883: invokevirtual getBytes : ()[B
    //   39886: invokevirtual write : ([B)V
    //   39889: iinc #13, 1
    //   39892: iload #13
    //   39894: aload #10
    //   39896: invokevirtual size : ()I
    //   39899: if_icmpge -> 39907
    //   39902: goto_w -> 39722
    //   39907: new java/lang/String
    //   39910: dup
    //   39911: aload #11
    //   39913: invokevirtual toByteArray : ()[B
    //   39916: ldc_w 'UTF8'
    //   39919: invokespecial <init> : ([BLjava/lang/String;)V
    //   39922: bipush #37
    //   39924: bipush #126
    //   39926: invokevirtual replace : (CC)Ljava/lang/String;
    //   39929: astore #13
    //   39931: new java/lang/StringBuffer
    //   39934: dup
    //   39935: aload #8
    //   39937: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   39940: invokespecial <init> : (Ljava/lang/String;)V
    //   39943: ldc_w '<commandResult><response>'
    //   39946: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39949: aload #13
    //   39951: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39954: ldc_w '</response></commandResult>'
    //   39957: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   39960: invokevirtual toString : ()Ljava/lang/String;
    //   39963: astore #8
    //   39965: aload_0
    //   39966: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   39969: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   39972: getfield uVFS : Lcrushftp/server/VFS;
    //   39975: invokevirtual reset : ()V
    //   39978: aload_0
    //   39979: aload #8
    //   39981: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   39984: ireturn
    //   39985: aload #5
    //   39987: ldc_w 'downloadAsZip'
    //   39990: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   39993: ifne -> 40001
    //   39996: goto_w -> 42081
    //   40001: aload_0
    //   40002: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   40005: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   40008: ldc_w 'the_command'
    //   40011: ldc_w 'RETR'
    //   40014: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   40017: aload_0
    //   40018: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   40021: iconst_1
    //   40022: putfield done : Z
    //   40025: aload_0
    //   40026: ldc_w 'HTTP/1.1 200 OK'
    //   40029: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   40032: bipush #30
    //   40034: istore #8
    //   40036: aload_0
    //   40037: new java/lang/StringBuffer
    //   40040: dup
    //   40041: ldc_w 'Cache-Control: post-check='
    //   40044: invokespecial <init> : (Ljava/lang/String;)V
    //   40047: iload #8
    //   40049: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   40052: ldc_w ',pre-check='
    //   40055: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   40058: iload #8
    //   40060: bipush #10
    //   40062: imul
    //   40063: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   40066: invokevirtual toString : ()Ljava/lang/String;
    //   40069: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   40072: aload_0
    //   40073: ldc_w 'Content-Type: application/zip'
    //   40076: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   40079: aload_0
    //   40080: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   40083: invokevirtual write_standard_headers : ()V
    //   40086: aload_1
    //   40087: ldc_w 'paths'
    //   40090: ldc ''
    //   40092: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   40095: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   40098: astore #9
    //   40100: aload #9
    //   40102: ldc_w ':'
    //   40105: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   40108: ifne -> 40116
    //   40111: goto_w -> 40124
    //   40116: aload #9
    //   40118: iconst_1
    //   40119: invokevirtual substring : (I)Ljava/lang/String;
    //   40122: astore #9
    //   40124: aload #9
    //   40126: ldc_w ':'
    //   40129: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   40132: astore #10
    //   40134: aload_1
    //   40135: ldc_w 'path'
    //   40138: ldc_w '/'
    //   40141: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   40144: astore #11
    //   40146: aload_1
    //   40147: ldc_w 'path_shortening'
    //   40150: ldc 'true'
    //   40152: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   40155: ldc 'true'
    //   40157: invokevirtual equals : (Ljava/lang/Object;)Z
    //   40160: ifne -> 40168
    //   40163: goto_w -> 40381
    //   40168: ldc ''
    //   40170: astore #12
    //   40172: iconst_0
    //   40173: istore #13
    //   40175: goto_w -> 40220
    //   40180: aload #10
    //   40182: iload #13
    //   40184: aaload
    //   40185: astore #14
    //   40187: aload #14
    //   40189: ldc_w '\/'
    //   40192: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   40195: arraylength
    //   40196: aload #12
    //   40198: ldc_w '\/'
    //   40201: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   40204: arraylength
    //   40205: if_icmpgt -> 40213
    //   40208: goto_w -> 40217
    //   40213: aload #14
    //   40215: astore #12
    //   40217: iinc #13, 1
    //   40220: iload #13
    //   40222: aload #10
    //   40224: arraylength
    //   40225: if_icmpge -> 40233
    //   40228: goto_w -> 40180
    //   40233: goto_w -> 40342
    //   40238: aload #12
    //   40240: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   40243: astore #12
    //   40245: iconst_1
    //   40246: istore #13
    //   40248: iconst_0
    //   40249: istore #14
    //   40251: goto_w -> 40304
    //   40256: aload #10
    //   40258: iload #14
    //   40260: aaload
    //   40261: astore #15
    //   40263: aload #15
    //   40265: ldc ''
    //   40267: invokevirtual equals : (Ljava/lang/Object;)Z
    //   40270: ifne -> 40278
    //   40273: goto_w -> 40283
    //   40278: goto_w -> 40301
    //   40283: aload #15
    //   40285: aload #12
    //   40287: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   40290: ifeq -> 40298
    //   40293: goto_w -> 40301
    //   40298: iconst_0
    //   40299: istore #13
    //   40301: iinc #14, 1
    //   40304: iload #14
    //   40306: aload #10
    //   40308: arraylength
    //   40309: if_icmplt -> 40317
    //   40312: goto_w -> 40327
    //   40317: iload #13
    //   40319: ifeq -> 40327
    //   40322: goto_w -> 40256
    //   40327: iload #13
    //   40329: ifne -> 40337
    //   40332: goto_w -> 40342
    //   40337: goto_w -> 40357
    //   40342: aload #12
    //   40344: ldc ''
    //   40346: invokevirtual equals : (Ljava/lang/Object;)Z
    //   40349: ifne -> 40357
    //   40352: goto_w -> 40238
    //   40357: aload #12
    //   40359: astore #11
    //   40361: aload #11
    //   40363: ldc ''
    //   40365: invokevirtual equals : (Ljava/lang/Object;)Z
    //   40368: ifne -> 40376
    //   40371: goto_w -> 40381
    //   40376: ldc_w '/'
    //   40379: astore #11
    //   40381: ldc_w 'archive.zip'
    //   40384: astore #12
    //   40386: aload #10
    //   40388: arraylength
    //   40389: iconst_1
    //   40390: if_icmpeq -> 40398
    //   40393: goto_w -> 40423
    //   40398: new java/lang/StringBuffer
    //   40401: dup
    //   40402: aload #10
    //   40404: iconst_0
    //   40405: aaload
    //   40406: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   40409: invokespecial <init> : (Ljava/lang/String;)V
    //   40412: ldc_w '.zip'
    //   40415: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   40418: invokevirtual toString : ()Ljava/lang/String;
    //   40421: astore #12
    //   40423: aload #12
    //   40425: ldc_w '/'
    //   40428: invokevirtual indexOf : (Ljava/lang/String;)I
    //   40431: ifge -> 40439
    //   40434: goto_w -> 40502
    //   40439: aload #10
    //   40441: iconst_0
    //   40442: aaload
    //   40443: invokestatic last : (Ljava/lang/String;)Ljava/lang/String;
    //   40446: astore #12
    //   40448: aload #12
    //   40450: ldc_w '/'
    //   40453: invokevirtual endsWith : (Ljava/lang/String;)Z
    //   40456: ifne -> 40464
    //   40459: goto_w -> 40479
    //   40464: aload #12
    //   40466: iconst_0
    //   40467: aload #12
    //   40469: invokevirtual length : ()I
    //   40472: iconst_1
    //   40473: isub
    //   40474: invokevirtual substring : (II)Ljava/lang/String;
    //   40477: astore #12
    //   40479: new java/lang/StringBuffer
    //   40482: dup
    //   40483: aload #12
    //   40485: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   40488: invokespecial <init> : (Ljava/lang/String;)V
    //   40491: ldc_w '.zip'
    //   40494: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   40497: invokevirtual toString : ()Ljava/lang/String;
    //   40500: astore #12
    //   40502: aload_1
    //   40503: ldc_w 'zipName'
    //   40506: ldc ''
    //   40508: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   40511: invokevirtual length : ()I
    //   40514: ifgt -> 40522
    //   40517: goto_w -> 40533
    //   40522: aload_1
    //   40523: ldc_w 'zipName'
    //   40526: ldc ''
    //   40528: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   40531: astore #12
    //   40533: aload #12
    //   40535: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   40538: ldc_w '\\r'
    //   40541: ldc_w '_'
    //   40544: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   40547: astore #12
    //   40549: aload_0
    //   40550: new java/lang/StringBuffer
    //   40553: dup
    //   40554: ldc_w 'Content-Disposition: attachment; filename="'
    //   40557: invokespecial <init> : (Ljava/lang/String;)V
    //   40560: aload_0
    //   40561: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   40564: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   40567: ldc_w 'header_user-agent'
    //   40570: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   40573: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   40576: ldc_w 'MSIE'
    //   40579: invokevirtual indexOf : (Ljava/lang/String;)I
    //   40582: iflt -> 40590
    //   40585: goto_w -> 40620
    //   40590: aload_0
    //   40591: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   40594: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   40597: ldc_w 'header_user-agent'
    //   40600: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   40603: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   40606: ldc_w 'TRIDENT'
    //   40609: invokevirtual indexOf : (Ljava/lang/String;)I
    //   40612: ifge -> 40620
    //   40615: goto_w -> 40630
    //   40620: aload #12
    //   40622: invokestatic url_encode : (Ljava/lang/String;)Ljava/lang/String;
    //   40625: goto_w -> 40632
    //   40630: aload #12
    //   40632: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   40635: ldc_w '"'
    //   40638: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   40641: invokevirtual toString : ()Ljava/lang/String;
    //   40644: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   40647: aload_0
    //   40648: ldc_w 'X-UA-Compatible: chrome=1'
    //   40651: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   40654: aload_0
    //   40655: ldc_w 'Connection: close'
    //   40658: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   40661: aload_0
    //   40662: ldc ''
    //   40664: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   40667: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   40670: ifne -> 40678
    //   40673: goto_w -> 40976
    //   40678: aload #10
    //   40680: aload #10
    //   40682: arraylength
    //   40683: iconst_1
    //   40684: isub
    //   40685: aaload
    //   40686: astore #13
    //   40688: aload #13
    //   40690: aload_0
    //   40691: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   40694: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   40697: ldc_w 'root_dir'
    //   40700: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   40703: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   40706: ifeq -> 40714
    //   40709: goto_w -> 40751
    //   40714: new java/lang/StringBuffer
    //   40717: dup
    //   40718: aload_0
    //   40719: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   40722: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   40725: ldc_w 'root_dir'
    //   40728: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   40731: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   40734: invokespecial <init> : (Ljava/lang/String;)V
    //   40737: aload #13
    //   40739: iconst_1
    //   40740: invokevirtual substring : (I)Ljava/lang/String;
    //   40743: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   40746: invokevirtual toString : ()Ljava/lang/String;
    //   40749: astore #13
    //   40751: aload_0
    //   40752: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   40755: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   40758: getfield uVFS : Lcrushftp/server/VFS;
    //   40761: aload #13
    //   40763: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   40766: astore #14
    //   40768: aload_0
    //   40769: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   40772: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   40775: getfield uVFS : Lcrushftp/server/VFS;
    //   40778: aload #14
    //   40780: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   40783: astore #15
    //   40785: aload #15
    //   40787: checkcast com/crushftp/client/HTTPClient
    //   40790: aload #11
    //   40792: aload #9
    //   40794: aload_1
    //   40795: ldc_w 'path_shortening'
    //   40798: ldc 'true'
    //   40800: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   40803: ldc 'true'
    //   40805: invokevirtual equals : (Ljava/lang/Object;)Z
    //   40808: invokevirtual downloadAsZip : (Ljava/lang/String;Ljava/lang/String;Z)Ljava/io/InputStream;
    //   40811: astore #16
    //   40813: ldc_w 32768
    //   40816: newarray byte
    //   40818: astore #17
    //   40820: iconst_0
    //   40821: istore #18
    //   40823: goto_w -> 40872
    //   40828: aload #16
    //   40830: aload #17
    //   40832: invokevirtual read : ([B)I
    //   40835: istore #18
    //   40837: iload #18
    //   40839: ifgt -> 40847
    //   40842: goto_w -> 40872
    //   40847: aload_0
    //   40848: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   40851: getfield original_os : Ljava/io/OutputStream;
    //   40854: aload #17
    //   40856: iconst_0
    //   40857: iload #18
    //   40859: invokevirtual write : ([BII)V
    //   40862: aload_0
    //   40863: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   40866: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   40869: invokevirtual active_transfer : ()V
    //   40872: iload #18
    //   40874: iflt -> 40882
    //   40877: goto_w -> 40828
    //   40882: aload_0
    //   40883: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   40886: getfield original_os : Ljava/io/OutputStream;
    //   40889: invokevirtual flush : ()V
    //   40892: goto_w -> 40926
    //   40897: astore #20
    //   40899: jsr_w -> 40907
    //   40904: aload #20
    //   40906: athrow
    //   40907: astore #19
    //   40909: aload #16
    //   40911: invokevirtual close : ()V
    //   40914: aload_0
    //   40915: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   40918: getfield original_os : Ljava/io/OutputStream;
    //   40921: invokevirtual close : ()V
    //   40924: ret #19
    //   40926: jsr_w -> 40907
    //   40931: goto_w -> 40953
    //   40936: astore #16
    //   40938: ldc_w 'HTTP_SERVER'
    //   40941: iconst_1
    //   40942: aload #16
    //   40944: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   40947: pop
    //   40948: goto_w -> 40953
    //   40953: aload #15
    //   40955: invokevirtual close : ()V
    //   40958: aload_0
    //   40959: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   40962: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   40965: getfield uVFS : Lcrushftp/server/VFS;
    //   40968: aload #15
    //   40970: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   40973: pop
    //   40974: iconst_1
    //   40975: ireturn
    //   40976: aload #11
    //   40978: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   40981: aload_0
    //   40982: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   40985: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   40988: ldc_w 'root_dir'
    //   40991: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   40994: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   40997: ifeq -> 41005
    //   41000: goto_w -> 41042
    //   41005: new java/lang/StringBuffer
    //   41008: dup
    //   41009: aload_0
    //   41010: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41013: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   41016: ldc_w 'root_dir'
    //   41019: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   41022: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   41025: invokespecial <init> : (Ljava/lang/String;)V
    //   41028: aload #11
    //   41030: iconst_1
    //   41031: invokevirtual substring : (I)Ljava/lang/String;
    //   41034: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   41037: invokevirtual toString : ()Ljava/lang/String;
    //   41040: astore #11
    //   41042: aload_0
    //   41043: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41046: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   41049: getfield uVFS : Lcrushftp/server/VFS;
    //   41052: ldc_w '/'
    //   41055: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   41058: astore #13
    //   41060: aload #13
    //   41062: ifnull -> 41070
    //   41065: goto_w -> 41079
    //   41070: new java/util/Properties
    //   41073: dup
    //   41074: invokespecial <init> : ()V
    //   41077: astore #13
    //   41079: new java/util/Properties
    //   41082: dup
    //   41083: invokespecial <init> : ()V
    //   41086: astore #14
    //   41088: aload_1
    //   41089: ldc_w 'filters'
    //   41092: ldc ''
    //   41094: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   41097: invokevirtual trim : ()Ljava/lang/String;
    //   41100: invokevirtual length : ()I
    //   41103: ifgt -> 41111
    //   41106: goto_w -> 41195
    //   41111: aload_1
    //   41112: ldc_w 'filters'
    //   41115: ldc ''
    //   41117: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   41120: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   41123: ldc_w '\\r\\n'
    //   41126: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   41129: astore #15
    //   41131: iconst_0
    //   41132: istore #16
    //   41134: goto_w -> 41182
    //   41139: aload #15
    //   41141: iload #16
    //   41143: aaload
    //   41144: ldc_w ':'
    //   41147: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   41150: iconst_0
    //   41151: aaload
    //   41152: astore #17
    //   41154: aload #15
    //   41156: iload #16
    //   41158: aaload
    //   41159: ldc_w ':'
    //   41162: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   41165: iconst_1
    //   41166: aaload
    //   41167: astore #18
    //   41169: aload #14
    //   41171: aload #17
    //   41173: aload #18
    //   41175: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   41178: pop
    //   41179: iinc #16, 1
    //   41182: iload #16
    //   41184: aload #15
    //   41186: arraylength
    //   41187: if_icmpge -> 41195
    //   41190: goto_w -> 41139
    //   41195: iconst_0
    //   41196: istore #15
    //   41198: new java/util/Vector
    //   41201: dup
    //   41202: invokespecial <init> : ()V
    //   41205: astore #16
    //   41207: goto_w -> 41567
    //   41212: aload #10
    //   41214: iload #15
    //   41216: aaload
    //   41217: invokevirtual length : ()I
    //   41220: ifgt -> 41228
    //   41223: goto_w -> 41543
    //   41228: aload #10
    //   41230: iload #15
    //   41232: aload #10
    //   41234: iload #15
    //   41236: aaload
    //   41237: invokestatic dots : (Ljava/lang/String;)Ljava/lang/String;
    //   41240: aastore
    //   41241: aload #10
    //   41243: iload #15
    //   41245: aaload
    //   41246: astore #17
    //   41248: aload #17
    //   41250: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   41253: aload_0
    //   41254: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41257: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   41260: ldc_w 'root_dir'
    //   41263: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   41266: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   41269: ifeq -> 41277
    //   41272: goto_w -> 41314
    //   41277: new java/lang/StringBuffer
    //   41280: dup
    //   41281: aload_0
    //   41282: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41285: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   41288: ldc_w 'root_dir'
    //   41291: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   41294: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   41297: invokespecial <init> : (Ljava/lang/String;)V
    //   41300: aload #17
    //   41302: iconst_1
    //   41303: invokevirtual substring : (I)Ljava/lang/String;
    //   41306: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   41309: invokevirtual toString : ()Ljava/lang/String;
    //   41312: astore #17
    //   41314: aload_0
    //   41315: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41318: aload #17
    //   41320: invokevirtual cd : (Ljava/lang/String;)V
    //   41323: aload_0
    //   41324: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41327: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   41330: getfield uVFS : Lcrushftp/server/VFS;
    //   41333: aload_0
    //   41334: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41337: invokevirtual pwd : ()Ljava/lang/String;
    //   41340: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   41343: astore #18
    //   41345: aload #18
    //   41347: ifnonnull -> 41355
    //   41350: goto_w -> 41543
    //   41355: aload_0
    //   41356: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41359: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   41362: aload_0
    //   41363: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41366: invokevirtual pwd : ()Ljava/lang/String;
    //   41369: ldc_w 'RETR'
    //   41372: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   41375: ifne -> 41383
    //   41378: goto_w -> 41543
    //   41383: aload #14
    //   41385: invokevirtual size : ()I
    //   41388: ifle -> 41396
    //   41391: goto_w -> 41466
    //   41396: new com/crushftp/client/VRL
    //   41399: dup
    //   41400: aload #18
    //   41402: ldc_w 'url'
    //   41405: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   41408: invokespecial <init> : (Ljava/lang/String;)V
    //   41411: invokevirtual getProtocol : ()Ljava/lang/String;
    //   41414: ldc_w 'file'
    //   41417: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   41420: ifeq -> 41428
    //   41423: goto_w -> 41460
    //   41428: new com/crushftp/client/VRL
    //   41431: dup
    //   41432: aload #18
    //   41434: ldc_w 'url'
    //   41437: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   41440: invokespecial <init> : (Ljava/lang/String;)V
    //   41443: invokevirtual getProtocol : ()Ljava/lang/String;
    //   41446: ldc_w 'smb'
    //   41449: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   41452: ifne -> 41460
    //   41455: goto_w -> 41466
    //   41460: iconst_0
    //   41461: goto_w -> 41467
    //   41466: iconst_1
    //   41467: istore #19
    //   41469: aload #18
    //   41471: ldc_w 'type'
    //   41474: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   41477: ldc_w 'FILE'
    //   41480: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   41483: ifne -> 41491
    //   41486: goto_w -> 41511
    //   41491: aload_0
    //   41492: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41495: getfield retr : Lcrushftp/server/RETR_handler;
    //   41498: getfield zipFiles : Ljava/util/Vector;
    //   41501: aload #18
    //   41503: invokevirtual addElement : (Ljava/lang/Object;)V
    //   41506: goto_w -> 41543
    //   41511: aload_0
    //   41512: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41515: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   41518: getfield uVFS : Lcrushftp/server/VFS;
    //   41521: aload_0
    //   41522: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41525: getfield retr : Lcrushftp/server/RETR_handler;
    //   41528: aload_0
    //   41529: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41532: invokevirtual pwd : ()Ljava/lang/String;
    //   41535: iconst_0
    //   41536: iload #19
    //   41538: aload #16
    //   41540: invokestatic startMultiThreadZipper : (Lcrushftp/server/VFS;Lcrushftp/server/RETR_handler;Ljava/lang/String;IZLjava/util/Vector;)V
    //   41543: aload #16
    //   41545: invokevirtual size : ()I
    //   41548: bipush #10
    //   41550: if_icmpge -> 41558
    //   41553: goto_w -> 41564
    //   41558: ldc2_w 100
    //   41561: invokestatic sleep : (J)V
    //   41564: iinc #15, 1
    //   41567: iload #15
    //   41569: aload #10
    //   41571: arraylength
    //   41572: if_icmpge -> 41580
    //   41575: goto_w -> 41212
    //   41580: aload_0
    //   41581: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41584: getfield retr : Lcrushftp/server/RETR_handler;
    //   41587: getfield zipFiles : Ljava/util/Vector;
    //   41590: invokevirtual size : ()I
    //   41593: iconst_1
    //   41594: isub
    //   41595: istore #17
    //   41597: goto_w -> 41810
    //   41602: aload_0
    //   41603: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41606: getfield retr : Lcrushftp/server/RETR_handler;
    //   41609: getfield zipFiles : Ljava/util/Vector;
    //   41612: iload #17
    //   41614: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   41617: checkcast java/util/Properties
    //   41620: astore #18
    //   41622: aload #18
    //   41624: ldc_w 'root_dir'
    //   41627: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   41630: astore #19
    //   41632: aload #19
    //   41634: aload_0
    //   41635: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41638: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   41641: ldc_w 'root_dir'
    //   41644: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   41647: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   41650: ifne -> 41658
    //   41653: goto_w -> 41683
    //   41658: aload #19
    //   41660: aload_0
    //   41661: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41664: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   41667: ldc_w 'root_dir'
    //   41670: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   41673: invokevirtual length : ()I
    //   41676: iconst_1
    //   41677: isub
    //   41678: invokevirtual substring : (I)Ljava/lang/String;
    //   41681: astore #19
    //   41683: aload #14
    //   41685: new java/lang/StringBuffer
    //   41688: dup
    //   41689: aload #19
    //   41691: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   41694: invokespecial <init> : (Ljava/lang/String;)V
    //   41697: aload #18
    //   41699: ldc_w 'name'
    //   41702: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   41705: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   41708: invokevirtual toString : ()Ljava/lang/String;
    //   41711: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   41714: astore #20
    //   41716: aload #20
    //   41718: ifnonnull -> 41726
    //   41721: goto_w -> 41807
    //   41726: aload #20
    //   41728: invokestatic parseLong : (Ljava/lang/String;)J
    //   41731: aload #18
    //   41733: ldc_w 'size'
    //   41736: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   41739: invokestatic parseLong : (Ljava/lang/String;)J
    //   41742: lcmp
    //   41743: ifeq -> 41751
    //   41746: goto_w -> 41771
    //   41751: aload_0
    //   41752: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41755: getfield retr : Lcrushftp/server/RETR_handler;
    //   41758: getfield zipFiles : Ljava/util/Vector;
    //   41761: iload #17
    //   41763: invokevirtual removeElementAt : (I)V
    //   41766: goto_w -> 41807
    //   41771: aload #20
    //   41773: invokestatic parseLong : (Ljava/lang/String;)J
    //   41776: aload #18
    //   41778: ldc_w 'size'
    //   41781: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   41784: invokestatic parseLong : (Ljava/lang/String;)J
    //   41787: lcmp
    //   41788: iflt -> 41796
    //   41791: goto_w -> 41807
    //   41796: aload #18
    //   41798: ldc_w 'rest'
    //   41801: aload #20
    //   41803: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   41806: pop
    //   41807: iinc #17, -1
    //   41810: iload #17
    //   41812: ifge -> 41820
    //   41815: goto_w -> 41833
    //   41820: aload #14
    //   41822: invokevirtual size : ()I
    //   41825: ifle -> 41833
    //   41828: goto_w -> 41602
    //   41833: new com/crushftp/client/VRL
    //   41836: dup
    //   41837: aload #13
    //   41839: ldc_w 'url'
    //   41842: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   41845: invokespecial <init> : (Ljava/lang/String;)V
    //   41848: astore #17
    //   41850: aload_0
    //   41851: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41854: aload #11
    //   41856: invokevirtual cd : (Ljava/lang/String;)V
    //   41859: aload_0
    //   41860: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41863: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   41866: ldc_w 'file_transfer_mode'
    //   41869: ldc_w 'BINARY'
    //   41872: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   41875: aload_0
    //   41876: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41879: getfield retr : Lcrushftp/server/RETR_handler;
    //   41882: aload_0
    //   41883: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41886: getfield original_os : Ljava/io/OutputStream;
    //   41889: putfield data_os : Ljava/io/OutputStream;
    //   41892: aload_0
    //   41893: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41896: getfield retr : Lcrushftp/server/RETR_handler;
    //   41899: iconst_1
    //   41900: putfield httpDownload : Z
    //   41903: aload_0
    //   41904: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41907: getfield retr : Lcrushftp/server/RETR_handler;
    //   41910: iconst_1
    //   41911: putfield zipping : Z
    //   41914: aload_0
    //   41915: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41918: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   41921: ldc_w 'no_zip_compression'
    //   41924: aload_1
    //   41925: ldc_w 'no_zip_compression'
    //   41928: ldc 'false'
    //   41930: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   41933: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   41936: aload_0
    //   41937: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41940: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   41943: ldc_w 'zip64'
    //   41946: aload_1
    //   41947: ldc_w 'zip64'
    //   41950: ldc 'false'
    //   41952: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   41955: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   41958: aload_0
    //   41959: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41962: invokevirtual pwd : ()Ljava/lang/String;
    //   41965: astore #18
    //   41967: new java/util/Properties
    //   41970: dup
    //   41971: invokespecial <init> : ()V
    //   41974: astore #19
    //   41976: aload #19
    //   41978: ldc_w 'the_dir'
    //   41981: aload #18
    //   41983: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   41986: pop
    //   41987: aload_0
    //   41988: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   41991: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   41994: ldc_w 'transfer_path'
    //   41997: aload #19
    //   41999: invokevirtual runPlugin : (Ljava/lang/String;Ljava/util/Properties;)Ljava/util/Properties;
    //   42002: pop
    //   42003: aload #19
    //   42005: ldc_w 'the_dir'
    //   42008: aload #18
    //   42010: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   42013: astore #18
    //   42015: aload_0
    //   42016: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42019: getfield retr : Lcrushftp/server/RETR_handler;
    //   42022: aload #18
    //   42024: aload_0
    //   42025: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42028: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42031: ldc_w 'start_resume_loc'
    //   42034: invokevirtual uiLG : (Ljava/lang/String;)J
    //   42037: ldc2_w -1
    //   42040: aload_0
    //   42041: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42044: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42047: aload #13
    //   42049: iconst_0
    //   42050: ldc ''
    //   42052: aload #17
    //   42054: aconst_null
    //   42055: invokevirtual init_vars : (Ljava/lang/String;JJLcrushftp/handlers/SessionCrush;Ljava/util/Properties;ZLjava/lang/String;Lcom/crushftp/client/VRL;Ljava/net/Socket;)V
    //   42058: aload_0
    //   42059: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42062: getfield retr : Lcrushftp/server/RETR_handler;
    //   42065: iconst_1
    //   42066: putfield runOnce : Z
    //   42069: aload_0
    //   42070: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42073: getfield retr : Lcrushftp/server/RETR_handler;
    //   42076: invokevirtual run : ()V
    //   42079: iconst_1
    //   42080: ireturn
    //   42081: aload #5
    //   42083: ldc_w 'getXMLListing'
    //   42086: invokevirtual equals : (Ljava/lang/Object;)Z
    //   42089: ifne -> 42097
    //   42092: goto_w -> 42306
    //   42097: aload_1
    //   42098: ldc_w 'path'
    //   42101: ldc ''
    //   42103: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   42106: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   42109: astore #8
    //   42111: aload #8
    //   42113: invokestatic dots : (Ljava/lang/String;)Ljava/lang/String;
    //   42116: astore #8
    //   42118: aload #8
    //   42120: ldc_w '/'
    //   42123: invokevirtual equals : (Ljava/lang/Object;)Z
    //   42126: ifne -> 42134
    //   42129: goto_w -> 42149
    //   42134: aload_0
    //   42135: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42138: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42141: ldc_w 'root_dir'
    //   42144: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   42147: astore #8
    //   42149: aload #8
    //   42151: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   42154: ldc_w '/'
    //   42157: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   42160: ifne -> 42168
    //   42163: goto_w -> 42237
    //   42168: aload #8
    //   42170: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   42173: aload_0
    //   42174: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42177: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42180: ldc_w 'root_dir'
    //   42183: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   42186: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   42189: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   42192: ifeq -> 42200
    //   42195: goto_w -> 42237
    //   42200: new java/lang/StringBuffer
    //   42203: dup
    //   42204: aload_0
    //   42205: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42208: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42211: ldc_w 'root_dir'
    //   42214: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   42217: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   42220: invokespecial <init> : (Ljava/lang/String;)V
    //   42223: aload #8
    //   42225: iconst_1
    //   42226: invokevirtual substring : (I)Ljava/lang/String;
    //   42229: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   42232: invokevirtual toString : ()Ljava/lang/String;
    //   42235: astore #8
    //   42237: aload_0
    //   42238: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42241: aload #8
    //   42243: invokevirtual cd : (Ljava/lang/String;)V
    //   42246: aload_0
    //   42247: aload_0
    //   42248: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42251: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42254: ldc 'user_name'
    //   42256: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   42259: aload_1
    //   42260: aload #8
    //   42262: iconst_0
    //   42263: aload_0
    //   42264: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42267: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42270: getfield uVFS : Lcrushftp/server/VFS;
    //   42273: invokevirtual getXmlListingResponse : (Ljava/lang/String;Ljava/util/Properties;Ljava/lang/String;ZLcrushftp/server/VFS;)Ljava/lang/String;
    //   42276: astore #9
    //   42278: aload_0
    //   42279: aload #9
    //   42281: iconst_0
    //   42282: sipush #200
    //   42285: iconst_0
    //   42286: aload_1
    //   42287: ldc_w 'format'
    //   42290: ldc ''
    //   42292: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   42295: ldc_w 'JSONOBJ'
    //   42298: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   42301: iconst_1
    //   42302: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   42305: ireturn
    //   42306: aload #5
    //   42308: ldc_w 'getHistory'
    //   42311: invokevirtual equals : (Ljava/lang/Object;)Z
    //   42314: ifne -> 42322
    //   42317: goto_w -> 42621
    //   42322: ldc ''
    //   42324: astore #8
    //   42326: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   42329: ifne -> 42337
    //   42332: goto_w -> 42594
    //   42337: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   42340: ldc_w 'crushftp.dmz.queue'
    //   42343: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   42346: checkcast java/util/Vector
    //   42349: astore #9
    //   42351: new java/util/Properties
    //   42354: dup
    //   42355: invokespecial <init> : ()V
    //   42358: astore #10
    //   42360: aload #10
    //   42362: ldc_w 'type'
    //   42365: ldc_w 'PUT:GETHISTORY'
    //   42368: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42371: pop
    //   42372: aload #10
    //   42374: ldc_w 'id'
    //   42377: invokestatic makeBoundary : ()Ljava/lang/String;
    //   42380: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42383: pop
    //   42384: aload #10
    //   42386: ldc 'username'
    //   42388: aload_0
    //   42389: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42392: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42395: ldc 'user_name'
    //   42397: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   42400: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42403: pop
    //   42404: aload_0
    //   42405: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42408: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42411: getfield uVFS : Lcrushftp/server/VFS;
    //   42414: aload_0
    //   42415: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42418: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42421: ldc_w 'root_dir'
    //   42424: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   42427: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   42430: astore #11
    //   42432: aload_0
    //   42433: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42436: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42439: getfield uVFS : Lcrushftp/server/VFS;
    //   42442: aload #11
    //   42444: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   42447: astore #12
    //   42449: aload #10
    //   42451: ldc_w 'crushAuth'
    //   42454: aload #12
    //   42456: ldc_w 'crushAuth'
    //   42459: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   42462: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42465: pop
    //   42466: aload_0
    //   42467: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42470: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42473: getfield uVFS : Lcrushftp/server/VFS;
    //   42476: aload #12
    //   42478: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   42481: pop
    //   42482: aload #10
    //   42484: ldc 'user_ip'
    //   42486: aload_0
    //   42487: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42490: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42493: ldc 'user_ip'
    //   42495: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   42498: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42501: pop
    //   42502: aload #10
    //   42504: ldc_w 'request'
    //   42507: aload_1
    //   42508: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42511: pop
    //   42512: aload #10
    //   42514: ldc 'clientid'
    //   42516: aload_0
    //   42517: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42520: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42523: ldc 'clientid'
    //   42525: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   42528: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42531: pop
    //   42532: aload #10
    //   42534: ldc_w 'need_response'
    //   42537: ldc 'true'
    //   42539: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42542: pop
    //   42543: aload #9
    //   42545: aload #10
    //   42547: invokevirtual addElement : (Ljava/lang/Object;)V
    //   42550: aload #10
    //   42552: sipush #300
    //   42555: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   42558: astore #10
    //   42560: aload_0
    //   42561: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42564: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42567: getfield uVFS : Lcrushftp/server/VFS;
    //   42570: aload #12
    //   42572: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   42575: pop
    //   42576: aload #10
    //   42578: ldc_w 'object_response'
    //   42581: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   42584: invokevirtual toString : ()Ljava/lang/String;
    //   42587: astore #8
    //   42589: goto_w -> 42607
    //   42594: aload_1
    //   42595: aload_0
    //   42596: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42599: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42602: invokestatic getHistory : (Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;)Ljava/lang/String;
    //   42605: astore #8
    //   42607: aload_0
    //   42608: aload #8
    //   42610: iconst_0
    //   42611: sipush #200
    //   42614: iconst_1
    //   42615: iconst_1
    //   42616: iconst_1
    //   42617: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   42620: ireturn
    //   42621: aload #5
    //   42623: ldc_w 'manageShares'
    //   42626: invokevirtual equals : (Ljava/lang/Object;)Z
    //   42629: ifne -> 42637
    //   42632: goto_w -> 42928
    //   42637: ldc ''
    //   42639: astore #8
    //   42641: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   42644: ifne -> 42652
    //   42647: goto_w -> 42909
    //   42652: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   42655: ldc_w 'crushftp.dmz.queue'
    //   42658: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   42661: checkcast java/util/Vector
    //   42664: astore #9
    //   42666: new java/util/Properties
    //   42669: dup
    //   42670: invokespecial <init> : ()V
    //   42673: astore #10
    //   42675: aload #10
    //   42677: ldc_w 'type'
    //   42680: ldc_w 'PUT:MANAGESHARES'
    //   42683: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42686: pop
    //   42687: aload #10
    //   42689: ldc_w 'id'
    //   42692: invokestatic makeBoundary : ()Ljava/lang/String;
    //   42695: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42698: pop
    //   42699: aload #10
    //   42701: ldc 'username'
    //   42703: aload_0
    //   42704: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42707: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42710: ldc 'user_name'
    //   42712: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   42715: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42718: pop
    //   42719: aload_0
    //   42720: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42723: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42726: getfield uVFS : Lcrushftp/server/VFS;
    //   42729: aload_0
    //   42730: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42733: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42736: ldc_w 'root_dir'
    //   42739: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   42742: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   42745: astore #11
    //   42747: aload_0
    //   42748: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42751: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42754: getfield uVFS : Lcrushftp/server/VFS;
    //   42757: aload #11
    //   42759: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   42762: astore #12
    //   42764: aload #10
    //   42766: ldc_w 'crushAuth'
    //   42769: aload #12
    //   42771: ldc_w 'crushAuth'
    //   42774: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   42777: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42780: pop
    //   42781: aload_0
    //   42782: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42785: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42788: getfield uVFS : Lcrushftp/server/VFS;
    //   42791: aload #12
    //   42793: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   42796: pop
    //   42797: aload #10
    //   42799: ldc 'user_ip'
    //   42801: aload_0
    //   42802: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42805: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42808: ldc 'user_ip'
    //   42810: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   42813: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42816: pop
    //   42817: aload #10
    //   42819: ldc_w 'request'
    //   42822: aload_1
    //   42823: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42826: pop
    //   42827: aload #10
    //   42829: ldc 'clientid'
    //   42831: aload_0
    //   42832: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42835: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42838: ldc 'clientid'
    //   42840: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   42843: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42846: pop
    //   42847: aload #10
    //   42849: ldc_w 'need_response'
    //   42852: ldc 'true'
    //   42854: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42857: pop
    //   42858: aload #9
    //   42860: aload #10
    //   42862: invokevirtual addElement : (Ljava/lang/Object;)V
    //   42865: aload #10
    //   42867: sipush #300
    //   42870: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   42873: astore #10
    //   42875: aload_0
    //   42876: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42879: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42882: getfield uVFS : Lcrushftp/server/VFS;
    //   42885: aload #12
    //   42887: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   42890: pop
    //   42891: aload #10
    //   42893: ldc_w 'object_response'
    //   42896: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   42899: invokevirtual toString : ()Ljava/lang/String;
    //   42902: astore #8
    //   42904: goto_w -> 42921
    //   42909: aload_0
    //   42910: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   42913: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   42916: invokestatic manageShares : (Lcrushftp/handlers/SessionCrush;)Ljava/lang/String;
    //   42919: astore #8
    //   42921: aload_0
    //   42922: aload #8
    //   42924: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   42927: ireturn
    //   42928: aload #5
    //   42930: ldc_w 'deleteTempAccount'
    //   42933: invokevirtual equals : (Ljava/lang/Object;)Z
    //   42936: ifne -> 42944
    //   42939: goto_w -> 43236
    //   42944: ldc ''
    //   42946: astore #8
    //   42948: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   42951: ifne -> 42959
    //   42954: goto_w -> 43216
    //   42959: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   42962: ldc_w 'crushftp.dmz.queue'
    //   42965: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   42968: checkcast java/util/Vector
    //   42971: astore #9
    //   42973: new java/util/Properties
    //   42976: dup
    //   42977: invokespecial <init> : ()V
    //   42980: astore #10
    //   42982: aload #10
    //   42984: ldc_w 'type'
    //   42987: ldc_w 'PUT:DELETESHARE'
    //   42990: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42993: pop
    //   42994: aload #10
    //   42996: ldc_w 'id'
    //   42999: invokestatic makeBoundary : ()Ljava/lang/String;
    //   43002: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   43005: pop
    //   43006: aload #10
    //   43008: ldc 'username'
    //   43010: aload_0
    //   43011: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43014: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43017: ldc 'user_name'
    //   43019: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   43022: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   43025: pop
    //   43026: aload_0
    //   43027: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43030: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43033: getfield uVFS : Lcrushftp/server/VFS;
    //   43036: aload_0
    //   43037: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43040: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43043: ldc_w 'root_dir'
    //   43046: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   43049: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   43052: astore #11
    //   43054: aload_0
    //   43055: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43058: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43061: getfield uVFS : Lcrushftp/server/VFS;
    //   43064: aload #11
    //   43066: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   43069: astore #12
    //   43071: aload #10
    //   43073: ldc_w 'crushAuth'
    //   43076: aload #12
    //   43078: ldc_w 'crushAuth'
    //   43081: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   43084: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   43087: pop
    //   43088: aload_0
    //   43089: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43092: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43095: getfield uVFS : Lcrushftp/server/VFS;
    //   43098: aload #12
    //   43100: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   43103: pop
    //   43104: aload #10
    //   43106: ldc 'user_ip'
    //   43108: aload_0
    //   43109: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43112: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43115: ldc 'user_ip'
    //   43117: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   43120: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   43123: pop
    //   43124: aload #10
    //   43126: ldc_w 'request'
    //   43129: aload_1
    //   43130: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   43133: pop
    //   43134: aload #10
    //   43136: ldc 'clientid'
    //   43138: aload_0
    //   43139: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43142: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43145: ldc 'clientid'
    //   43147: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   43150: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   43153: pop
    //   43154: aload #10
    //   43156: ldc_w 'need_response'
    //   43159: ldc 'true'
    //   43161: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   43164: pop
    //   43165: aload #9
    //   43167: aload #10
    //   43169: invokevirtual addElement : (Ljava/lang/Object;)V
    //   43172: aload #10
    //   43174: sipush #300
    //   43177: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   43180: astore #10
    //   43182: aload_0
    //   43183: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43186: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43189: getfield uVFS : Lcrushftp/server/VFS;
    //   43192: aload #12
    //   43194: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   43197: pop
    //   43198: aload #10
    //   43200: ldc_w 'object_response'
    //   43203: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   43206: invokevirtual toString : ()Ljava/lang/String;
    //   43209: astore #8
    //   43211: goto_w -> 43229
    //   43216: aload_1
    //   43217: aload_0
    //   43218: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43221: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43224: invokestatic deleteShare : (Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;)Ljava/lang/String;
    //   43227: astore #8
    //   43229: aload_0
    //   43230: aload #8
    //   43232: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   43235: ireturn
    //   43236: aload #5
    //   43238: ldc_w 'editTempAccount'
    //   43241: invokevirtual equals : (Ljava/lang/Object;)Z
    //   43244: ifne -> 43252
    //   43247: goto_w -> 43544
    //   43252: ldc ''
    //   43254: astore #8
    //   43256: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   43259: ifne -> 43267
    //   43262: goto_w -> 43524
    //   43267: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   43270: ldc_w 'crushftp.dmz.queue'
    //   43273: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   43276: checkcast java/util/Vector
    //   43279: astore #9
    //   43281: new java/util/Properties
    //   43284: dup
    //   43285: invokespecial <init> : ()V
    //   43288: astore #10
    //   43290: aload #10
    //   43292: ldc_w 'type'
    //   43295: ldc_w 'PUT:EDITSHARE'
    //   43298: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   43301: pop
    //   43302: aload #10
    //   43304: ldc_w 'id'
    //   43307: invokestatic makeBoundary : ()Ljava/lang/String;
    //   43310: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   43313: pop
    //   43314: aload #10
    //   43316: ldc 'username'
    //   43318: aload_0
    //   43319: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43322: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43325: ldc 'user_name'
    //   43327: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   43330: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   43333: pop
    //   43334: aload_0
    //   43335: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43338: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43341: getfield uVFS : Lcrushftp/server/VFS;
    //   43344: aload_0
    //   43345: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43348: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43351: ldc_w 'root_dir'
    //   43354: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   43357: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   43360: astore #11
    //   43362: aload_0
    //   43363: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43366: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43369: getfield uVFS : Lcrushftp/server/VFS;
    //   43372: aload #11
    //   43374: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   43377: astore #12
    //   43379: aload #10
    //   43381: ldc_w 'crushAuth'
    //   43384: aload #12
    //   43386: ldc_w 'crushAuth'
    //   43389: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   43392: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   43395: pop
    //   43396: aload_0
    //   43397: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43400: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43403: getfield uVFS : Lcrushftp/server/VFS;
    //   43406: aload #12
    //   43408: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   43411: pop
    //   43412: aload #10
    //   43414: ldc 'user_ip'
    //   43416: aload_0
    //   43417: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43420: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43423: ldc 'user_ip'
    //   43425: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   43428: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   43431: pop
    //   43432: aload #10
    //   43434: ldc_w 'request'
    //   43437: aload_1
    //   43438: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   43441: pop
    //   43442: aload #10
    //   43444: ldc 'clientid'
    //   43446: aload_0
    //   43447: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43450: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43453: ldc 'clientid'
    //   43455: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   43458: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   43461: pop
    //   43462: aload #10
    //   43464: ldc_w 'need_response'
    //   43467: ldc 'true'
    //   43469: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   43472: pop
    //   43473: aload #9
    //   43475: aload #10
    //   43477: invokevirtual addElement : (Ljava/lang/Object;)V
    //   43480: aload #10
    //   43482: sipush #300
    //   43485: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   43488: astore #10
    //   43490: aload_0
    //   43491: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43494: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43497: getfield uVFS : Lcrushftp/server/VFS;
    //   43500: aload #12
    //   43502: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   43505: pop
    //   43506: aload #10
    //   43508: ldc_w 'object_response'
    //   43511: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   43514: invokevirtual toString : ()Ljava/lang/String;
    //   43517: astore #8
    //   43519: goto_w -> 43537
    //   43524: aload_1
    //   43525: aload_0
    //   43526: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43529: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43532: invokestatic editShare : (Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;)Ljava/lang/String;
    //   43535: astore #8
    //   43537: aload_0
    //   43538: aload #8
    //   43540: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   43543: ireturn
    //   43544: aload #5
    //   43546: ldc_w 'getCustomForm'
    //   43549: invokevirtual equals : (Ljava/lang/Object;)Z
    //   43552: ifne -> 43560
    //   43555: goto_w -> 44265
    //   43560: ldc ''
    //   43562: astore #8
    //   43564: aload_0
    //   43565: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43568: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43571: aload_1
    //   43572: ldc_w 'form'
    //   43575: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   43578: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   43581: astore #9
    //   43583: aload #9
    //   43585: ldc_w ':'
    //   43588: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43591: iflt -> 43599
    //   43594: goto_w -> 43643
    //   43599: aload #9
    //   43601: ldc_w 'messageForm'
    //   43604: invokevirtual equals : (Ljava/lang/Object;)Z
    //   43607: ifeq -> 43615
    //   43610: goto_w -> 43643
    //   43615: new java/lang/StringBuffer
    //   43618: dup
    //   43619: aload #9
    //   43621: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   43624: invokespecial <init> : (Ljava/lang/String;)V
    //   43627: ldc_w ':'
    //   43630: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   43633: aload #9
    //   43635: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   43638: invokevirtual toString : ()Ljava/lang/String;
    //   43641: astore #9
    //   43643: aload_0
    //   43644: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43647: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43650: aload_1
    //   43651: ldc_w 'form'
    //   43654: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   43657: ldc ''
    //   43659: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   43662: ldc ''
    //   43664: invokevirtual equals : (Ljava/lang/Object;)Z
    //   43667: ifeq -> 43675
    //   43670: goto_w -> 43696
    //   43675: aload_0
    //   43676: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43679: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43682: aload_1
    //   43683: ldc_w 'form'
    //   43686: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   43689: ldc ''
    //   43691: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   43694: astore #9
    //   43696: aload #9
    //   43698: ifnonnull -> 43706
    //   43701: goto_w -> 44258
    //   43706: aload #9
    //   43708: invokevirtual length : ()I
    //   43711: ifgt -> 43719
    //   43714: goto_w -> 44258
    //   43719: aload #9
    //   43721: ldc_w ':'
    //   43724: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43727: ifgt -> 43735
    //   43730: goto_w -> 44258
    //   43735: aload #9
    //   43737: ldc_w ':'
    //   43740: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43743: aload #9
    //   43745: ldc_w ':'
    //   43748: invokevirtual lastIndexOf : (Ljava/lang/String;)I
    //   43751: if_icmpeq -> 43759
    //   43754: goto_w -> 43784
    //   43759: aload #9
    //   43761: aload #9
    //   43763: ldc_w ':'
    //   43766: invokevirtual lastIndexOf : (Ljava/lang/String;)I
    //   43769: iconst_1
    //   43770: iadd
    //   43771: invokevirtual substring : (I)Ljava/lang/String;
    //   43774: invokevirtual trim : ()Ljava/lang/String;
    //   43777: astore #9
    //   43779: goto_w -> 43822
    //   43784: aload #9
    //   43786: aload #9
    //   43788: ldc_w ':'
    //   43791: aload #9
    //   43793: ldc_w ':'
    //   43796: invokevirtual lastIndexOf : (Ljava/lang/String;)I
    //   43799: iconst_1
    //   43800: isub
    //   43801: invokevirtual lastIndexOf : (Ljava/lang/String;I)I
    //   43804: iconst_1
    //   43805: iadd
    //   43806: aload #9
    //   43808: ldc_w ':'
    //   43811: invokevirtual lastIndexOf : (Ljava/lang/String;)I
    //   43814: invokevirtual substring : (II)Ljava/lang/String;
    //   43817: invokevirtual trim : ()Ljava/lang/String;
    //   43820: astore #9
    //   43822: getstatic crushftp/server/ServerStatus.server_settings : Ljava/util/Properties;
    //   43825: ldc_w 'CustomForms'
    //   43828: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   43831: checkcast java/util/Vector
    //   43834: astore #10
    //   43836: iconst_0
    //   43837: istore #11
    //   43839: goto_w -> 44221
    //   43844: aload #10
    //   43846: iload #11
    //   43848: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   43851: checkcast java/util/Properties
    //   43854: astore #12
    //   43856: aload #12
    //   43858: invokestatic CLONE : (Ljava/lang/Object;)Ljava/lang/Object;
    //   43861: checkcast java/util/Properties
    //   43864: astore #12
    //   43866: aload #12
    //   43868: ldc_w 'always'
    //   43871: new java/lang/StringBuffer
    //   43874: dup
    //   43875: aload_0
    //   43876: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   43879: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   43882: aload_1
    //   43883: ldc_w 'form'
    //   43886: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   43889: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   43892: ldc_w ':once'
    //   43895: invokevirtual endsWith : (Ljava/lang/String;)Z
    //   43898: ifne -> 43906
    //   43901: goto_w -> 43912
    //   43906: iconst_0
    //   43907: goto_w -> 43913
    //   43912: iconst_1
    //   43913: invokestatic valueOf : (Z)Ljava/lang/String;
    //   43916: invokespecial <init> : (Ljava/lang/String;)V
    //   43919: invokevirtual toString : ()Ljava/lang/String;
    //   43922: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   43925: pop
    //   43926: aload #12
    //   43928: ldc_w 'name'
    //   43931: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   43934: aload #9
    //   43936: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   43939: ifne -> 43947
    //   43942: goto_w -> 44218
    //   43947: aload #12
    //   43949: ldc_w 'entries'
    //   43952: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   43955: checkcast java/util/Vector
    //   43958: astore #13
    //   43960: iconst_0
    //   43961: istore #14
    //   43963: goto_w -> 44163
    //   43968: aload #13
    //   43970: iload #14
    //   43972: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   43975: checkcast java/util/Properties
    //   43978: astore #15
    //   43980: aload #15
    //   43982: ldc_w 'item_type'
    //   43985: aload #15
    //   43987: ldc_w 'type'
    //   43990: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   43993: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   43996: pop
    //   43997: aload_0
    //   43998: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44001: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44004: aload #15
    //   44006: ldc_w 'name'
    //   44009: ldc_w 'label'
    //   44012: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   44015: invokevirtual trim : ()Ljava/lang/String;
    //   44018: invokevirtual containsKey : (Ljava/lang/String;)Z
    //   44021: ifne -> 44029
    //   44024: goto_w -> 44062
    //   44029: aload #15
    //   44031: ldc_w 'value'
    //   44034: aload_0
    //   44035: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44038: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44041: aload #15
    //   44043: ldc_w 'name'
    //   44046: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   44049: invokevirtual trim : ()Ljava/lang/String;
    //   44052: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   44055: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   44058: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   44061: pop
    //   44062: aload #15
    //   44064: ldc_w 'value'
    //   44067: aload #15
    //   44069: ldc_w 'value'
    //   44072: ldc ''
    //   44074: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   44077: aload_0
    //   44078: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44081: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44084: getfield user : Ljava/util/Properties;
    //   44087: aload_0
    //   44088: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44091: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44094: getfield user_info : Ljava/util/Properties;
    //   44097: aload_0
    //   44098: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44101: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44104: invokestatic change_vars_to_values_static : (Ljava/lang/String;Ljava/util/Properties;Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;)Ljava/lang/String;
    //   44107: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   44110: pop
    //   44111: aload #15
    //   44113: ldc_w 'label'
    //   44116: aload #15
    //   44118: ldc_w 'label'
    //   44121: ldc ''
    //   44123: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   44126: aload_0
    //   44127: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44130: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44133: getfield user : Ljava/util/Properties;
    //   44136: aload_0
    //   44137: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44140: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44143: getfield user_info : Ljava/util/Properties;
    //   44146: aload_0
    //   44147: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44150: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44153: invokestatic change_vars_to_values_static : (Ljava/lang/String;Ljava/util/Properties;Ljava/util/Properties;Lcrushftp/handlers/SessionCrush;)Ljava/lang/String;
    //   44156: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   44159: pop
    //   44160: iinc #14, 1
    //   44163: iload #14
    //   44165: aload #13
    //   44167: invokevirtual size : ()I
    //   44170: if_icmpge -> 44178
    //   44173: goto_w -> 43968
    //   44178: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   44181: getfield common_code : Lcrushftp/handlers/Common;
    //   44184: pop
    //   44185: aload #12
    //   44187: ldc_w 'customForm'
    //   44190: aconst_null
    //   44191: invokestatic getXMLString : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   44194: astore #8
    //   44196: goto_w -> 44218
    //   44201: astore #14
    //   44203: ldc_w 'HTTP_SERVER'
    //   44206: iconst_1
    //   44207: aload #14
    //   44209: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   44212: pop
    //   44213: goto_w -> 44218
    //   44218: iinc #11, 1
    //   44221: iload #11
    //   44223: aload #10
    //   44225: invokevirtual size : ()I
    //   44228: if_icmpge -> 44236
    //   44231: goto_w -> 43844
    //   44236: goto_w -> 44258
    //   44241: astore #10
    //   44243: ldc_w 'HTTP_SERVER'
    //   44246: iconst_1
    //   44247: aload #10
    //   44249: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   44252: pop
    //   44253: goto_w -> 44258
    //   44258: aload_0
    //   44259: aload #8
    //   44261: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   44264: ireturn
    //   44265: aload #5
    //   44267: ldc_w 'getUserInfo'
    //   44270: invokevirtual equals : (Ljava/lang/Object;)Z
    //   44273: ifne -> 44281
    //   44276: goto_w -> 46564
    //   44281: new java/util/Properties
    //   44284: dup
    //   44285: invokespecial <init> : ()V
    //   44288: astore #8
    //   44290: aload_0
    //   44291: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44294: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44297: ldc_w 'extraCustomizations'
    //   44300: invokevirtual get : (Ljava/lang/String;)Ljava/lang/Object;
    //   44303: checkcast java/util/Properties
    //   44306: astore #9
    //   44308: aload #9
    //   44310: ifnonnull -> 44318
    //   44313: goto_w -> 44325
    //   44318: aload #8
    //   44320: aload #9
    //   44322: invokevirtual putAll : (Ljava/util/Map;)V
    //   44325: aconst_null
    //   44326: astore #9
    //   44328: aload_0
    //   44329: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44332: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44335: getfield user : Ljava/util/Properties;
    //   44338: ldc_w 'extraCustomizations'
    //   44341: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   44344: checkcast java/util/Properties
    //   44347: astore #9
    //   44349: aload #9
    //   44351: ifnonnull -> 44359
    //   44354: goto_w -> 44366
    //   44359: aload #8
    //   44361: aload #9
    //   44363: invokevirtual putAll : (Ljava/util/Map;)V
    //   44366: aconst_null
    //   44367: astore #10
    //   44369: aload_0
    //   44370: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44373: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44376: getfield user : Ljava/util/Properties;
    //   44379: ldc_w 'web_customizations'
    //   44382: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   44385: checkcast java/util/Vector
    //   44388: astore #10
    //   44390: aload #10
    //   44392: ifnull -> 44400
    //   44395: goto_w -> 44434
    //   44400: getstatic crushftp/handlers/UserTools.ut : Lcrushftp/handlers/UserTools;
    //   44403: aload_0
    //   44404: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44407: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44410: ldc_w 'listen_ip_port'
    //   44413: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   44416: ldc_w 'default'
    //   44419: iconst_0
    //   44420: invokevirtual getUser : (Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Properties;
    //   44423: ldc_w 'web_customizations'
    //   44426: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   44429: checkcast java/util/Vector
    //   44432: astore #10
    //   44434: aload #10
    //   44436: ifnull -> 44444
    //   44439: goto_w -> 44453
    //   44444: new java/util/Vector
    //   44447: dup
    //   44448: invokespecial <init> : ()V
    //   44451: astore #10
    //   44453: aload #10
    //   44455: invokestatic CLONE : (Ljava/lang/Object;)Ljava/lang/Object;
    //   44458: checkcast java/util/Vector
    //   44461: astore #10
    //   44463: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   44466: ifne -> 44474
    //   44469: goto_w -> 44706
    //   44474: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   44477: ldc_w 'crushftp.dmz.queue'
    //   44480: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   44483: checkcast java/util/Vector
    //   44486: astore #11
    //   44488: new java/util/Properties
    //   44491: dup
    //   44492: invokespecial <init> : ()V
    //   44495: astore #12
    //   44497: aload #12
    //   44499: ldc_w 'type'
    //   44502: ldc_w 'GET:HANDLE_CUSTOMIZATIONS'
    //   44505: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   44508: pop
    //   44509: aload #12
    //   44511: ldc_w 'id'
    //   44514: invokestatic makeBoundary : ()Ljava/lang/String;
    //   44517: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   44520: pop
    //   44521: aload_0
    //   44522: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44525: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44528: getfield uVFS : Lcrushftp/server/VFS;
    //   44531: aload_0
    //   44532: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44535: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44538: ldc_w 'root_dir'
    //   44541: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   44544: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   44547: astore #13
    //   44549: aload_0
    //   44550: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44553: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44556: getfield uVFS : Lcrushftp/server/VFS;
    //   44559: aload #13
    //   44561: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   44564: astore #14
    //   44566: aload #12
    //   44568: ldc_w 'crushAuth'
    //   44571: aload #14
    //   44573: ldc_w 'crushAuth'
    //   44576: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   44579: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   44582: pop
    //   44583: aload_0
    //   44584: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44587: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44590: getfield uVFS : Lcrushftp/server/VFS;
    //   44593: aload #14
    //   44595: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   44598: pop
    //   44599: aload #12
    //   44601: ldc_w 'customizations'
    //   44604: aload #10
    //   44606: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   44609: pop
    //   44610: aload #12
    //   44612: ldc_w 'need_response'
    //   44615: ldc 'true'
    //   44617: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   44620: pop
    //   44621: aload #11
    //   44623: aload #12
    //   44625: invokevirtual addElement : (Ljava/lang/Object;)V
    //   44628: aload #12
    //   44630: sipush #300
    //   44633: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   44636: astore #12
    //   44638: aload_0
    //   44639: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44642: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44645: getfield uVFS : Lcrushftp/server/VFS;
    //   44648: aload #14
    //   44650: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   44653: pop
    //   44654: aload #12
    //   44656: ldc_w 'object_response'
    //   44659: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   44662: astore #15
    //   44664: aload #15
    //   44666: instanceof java/util/Vector
    //   44669: ifne -> 44677
    //   44672: goto_w -> 44689
    //   44677: aload #15
    //   44679: checkcast java/util/Vector
    //   44682: astore #10
    //   44684: goto_w -> 44701
    //   44689: aload #10
    //   44691: aload_0
    //   44692: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44695: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44698: invokestatic handleCustomizations : (Ljava/util/Vector;Lcrushftp/handlers/SessionCrush;)V
    //   44701: goto_w -> 44718
    //   44706: aload #10
    //   44708: aload_0
    //   44709: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44712: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44715: invokestatic handleCustomizations : (Ljava/util/Vector;Lcrushftp/handlers/SessionCrush;)V
    //   44718: invokestatic getProperties : ()Ljava/util/Properties;
    //   44721: ldc_w 'crushftp.httpCustomizations.global'
    //   44724: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   44727: ifnonnull -> 44735
    //   44730: goto_w -> 44831
    //   44735: invokestatic getProperties : ()Ljava/util/Properties;
    //   44738: ldc_w 'crushftp.httpCustomizations.global'
    //   44741: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   44744: checkcast java/util/Properties
    //   44747: astore #11
    //   44749: aload #11
    //   44751: invokevirtual keys : ()Ljava/util/Enumeration;
    //   44754: astore #12
    //   44756: goto_w -> 44816
    //   44761: aload #12
    //   44763: invokeinterface nextElement : ()Ljava/lang/Object;
    //   44768: invokevirtual toString : ()Ljava/lang/String;
    //   44771: astore #13
    //   44773: new java/util/Properties
    //   44776: dup
    //   44777: invokespecial <init> : ()V
    //   44780: astore #14
    //   44782: aload #14
    //   44784: ldc_w 'key'
    //   44787: aload #13
    //   44789: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   44792: pop
    //   44793: aload #14
    //   44795: ldc_w 'value'
    //   44798: aload #11
    //   44800: aload #13
    //   44802: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   44805: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   44808: pop
    //   44809: aload #10
    //   44811: aload #14
    //   44813: invokevirtual addElement : (Ljava/lang/Object;)V
    //   44816: aload #12
    //   44818: invokeinterface hasMoreElements : ()Z
    //   44823: ifeq -> 44831
    //   44826: goto_w -> 44761
    //   44831: invokestatic getProperties : ()Ljava/util/Properties;
    //   44834: ldc_w 'crushftp.httpCustomizations.user'
    //   44837: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   44840: ifnonnull -> 44848
    //   44843: goto_w -> 44979
    //   44848: invokestatic getProperties : ()Ljava/util/Properties;
    //   44851: ldc_w 'crushftp.httpCustomizations.user'
    //   44854: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   44857: checkcast java/util/Properties
    //   44860: astore #11
    //   44862: aload #11
    //   44864: aload_0
    //   44865: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44868: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44871: ldc 'user_name'
    //   44873: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   44876: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   44879: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   44882: checkcast java/util/Properties
    //   44885: astore #12
    //   44887: aload #12
    //   44889: ifnonnull -> 44897
    //   44892: goto_w -> 44979
    //   44897: aload #12
    //   44899: invokevirtual keys : ()Ljava/util/Enumeration;
    //   44902: astore #13
    //   44904: goto_w -> 44964
    //   44909: aload #13
    //   44911: invokeinterface nextElement : ()Ljava/lang/Object;
    //   44916: invokevirtual toString : ()Ljava/lang/String;
    //   44919: astore #14
    //   44921: new java/util/Properties
    //   44924: dup
    //   44925: invokespecial <init> : ()V
    //   44928: astore #15
    //   44930: aload #15
    //   44932: ldc_w 'key'
    //   44935: aload #14
    //   44937: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   44940: pop
    //   44941: aload #15
    //   44943: ldc_w 'value'
    //   44946: aload #12
    //   44948: aload #14
    //   44950: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   44953: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   44956: pop
    //   44957: aload #10
    //   44959: aload #15
    //   44961: invokevirtual addElement : (Ljava/lang/Object;)V
    //   44964: aload #13
    //   44966: invokeinterface hasMoreElements : ()Z
    //   44971: ifeq -> 44979
    //   44974: goto_w -> 44909
    //   44979: aload_0
    //   44980: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   44983: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   44986: ldc_w 'wi_customizations'
    //   44989: invokevirtual get : (Ljava/lang/String;)Ljava/lang/Object;
    //   44992: ifnonnull -> 45000
    //   44995: goto_w -> 45100
    //   45000: aload_0
    //   45001: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   45004: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   45007: ldc_w 'wi_customizations'
    //   45010: invokevirtual get : (Ljava/lang/String;)Ljava/lang/Object;
    //   45013: checkcast java/util/Properties
    //   45016: astore #11
    //   45018: aload #11
    //   45020: invokevirtual keys : ()Ljava/util/Enumeration;
    //   45023: astore #12
    //   45025: goto_w -> 45085
    //   45030: aload #12
    //   45032: invokeinterface nextElement : ()Ljava/lang/Object;
    //   45037: invokevirtual toString : ()Ljava/lang/String;
    //   45040: astore #13
    //   45042: new java/util/Properties
    //   45045: dup
    //   45046: invokespecial <init> : ()V
    //   45049: astore #14
    //   45051: aload #14
    //   45053: ldc_w 'key'
    //   45056: aload #13
    //   45058: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45061: pop
    //   45062: aload #14
    //   45064: ldc_w 'value'
    //   45067: aload #11
    //   45069: aload #13
    //   45071: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   45074: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45077: pop
    //   45078: aload #10
    //   45080: aload #14
    //   45082: invokevirtual addElement : (Ljava/lang/Object;)V
    //   45085: aload #12
    //   45087: invokeinterface hasMoreElements : ()Z
    //   45092: ifeq -> 45100
    //   45095: goto_w -> 45030
    //   45100: aload_0
    //   45101: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   45104: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   45107: ldc_w 'metas'
    //   45110: invokevirtual get : (Ljava/lang/String;)Ljava/lang/Object;
    //   45113: ifnonnull -> 45121
    //   45116: goto_w -> 45224
    //   45121: aload_0
    //   45122: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   45125: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   45128: ldc_w 'metas'
    //   45131: invokevirtual get : (Ljava/lang/String;)Ljava/lang/Object;
    //   45134: checkcast java/util/Properties
    //   45137: astore #11
    //   45139: aload #11
    //   45141: invokevirtual keys : ()Ljava/util/Enumeration;
    //   45144: astore #12
    //   45146: goto_w -> 45209
    //   45151: aload #12
    //   45153: invokeinterface nextElement : ()Ljava/lang/Object;
    //   45158: invokevirtual toString : ()Ljava/lang/String;
    //   45161: astore #13
    //   45163: aload #8
    //   45165: aload #13
    //   45167: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   45170: ifeq -> 45178
    //   45173: goto_w -> 45209
    //   45178: aload #8
    //   45180: new java/lang/StringBuffer
    //   45183: dup
    //   45184: ldc_w 'META_'
    //   45187: invokespecial <init> : (Ljava/lang/String;)V
    //   45190: aload #13
    //   45192: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   45195: invokevirtual toString : ()Ljava/lang/String;
    //   45198: aload #11
    //   45200: aload #13
    //   45202: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   45205: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45208: pop
    //   45209: aload #12
    //   45211: invokeinterface hasMoreElements : ()Z
    //   45216: ifeq -> 45224
    //   45219: goto_w -> 45151
    //   45224: aload #8
    //   45226: ldc_w 'customizations'
    //   45229: aload #10
    //   45231: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45234: pop
    //   45235: goto_w -> 45257
    //   45240: astore #11
    //   45242: ldc_w 'HTTP_SERVER'
    //   45245: iconst_1
    //   45246: aload #11
    //   45248: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   45251: pop
    //   45252: goto_w -> 45257
    //   45257: aload_0
    //   45258: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   45261: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   45264: getfield user : Ljava/util/Properties;
    //   45267: ldc_w 'web_buttons'
    //   45270: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   45273: checkcast java/util/Vector
    //   45276: astore #11
    //   45278: aload #11
    //   45280: ifnull -> 45288
    //   45283: goto_w -> 45322
    //   45288: getstatic crushftp/handlers/UserTools.ut : Lcrushftp/handlers/UserTools;
    //   45291: aload_0
    //   45292: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   45295: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   45298: ldc_w 'listen_ip_port'
    //   45301: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   45304: ldc_w 'default'
    //   45307: iconst_0
    //   45308: invokevirtual getUser : (Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Properties;
    //   45311: ldc_w 'buttons'
    //   45314: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   45317: checkcast java/util/Vector
    //   45320: astore #11
    //   45322: aload #11
    //   45324: ifnull -> 45332
    //   45327: goto_w -> 45341
    //   45332: new java/util/Vector
    //   45335: dup
    //   45336: invokespecial <init> : ()V
    //   45339: astore #11
    //   45341: aload #11
    //   45343: invokevirtual clone : ()Ljava/lang/Object;
    //   45346: checkcast java/util/Vector
    //   45349: astore #11
    //   45351: aload_0
    //   45352: aload #11
    //   45354: invokevirtual addMissingButtons : (Ljava/util/Vector;)V
    //   45357: aload #11
    //   45359: invokestatic fixButtons : (Ljava/util/Vector;)V
    //   45362: aload_0
    //   45363: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   45366: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   45369: ldc_w 'hide_download'
    //   45372: invokevirtual BG : (Ljava/lang/String;)Z
    //   45375: ifne -> 45383
    //   45378: goto_w -> 45454
    //   45383: aload #11
    //   45385: invokevirtual size : ()I
    //   45388: iconst_1
    //   45389: isub
    //   45390: istore #12
    //   45392: goto_w -> 45444
    //   45397: aload #11
    //   45399: iload #12
    //   45401: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   45404: checkcast java/util/Properties
    //   45407: astore #13
    //   45409: aload #13
    //   45411: ldc_w 'key'
    //   45414: ldc ''
    //   45416: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   45419: ldc_w '(download)'
    //   45422: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   45425: ifne -> 45433
    //   45428: goto_w -> 45441
    //   45433: aload #11
    //   45435: iload #12
    //   45437: invokevirtual remove : (I)Ljava/lang/Object;
    //   45440: pop
    //   45441: iinc #12, -1
    //   45444: iload #12
    //   45446: iflt -> 45454
    //   45449: goto_w -> 45397
    //   45454: aload #8
    //   45456: ldc_w 'buttons'
    //   45459: aload #11
    //   45461: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45464: pop
    //   45465: goto_w -> 45487
    //   45470: astore #11
    //   45472: ldc_w 'HTTP_SERVER'
    //   45475: iconst_1
    //   45476: aload #11
    //   45478: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   45481: pop
    //   45482: goto_w -> 45487
    //   45487: aload_0
    //   45488: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   45491: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   45494: getfield user : Ljava/util/Properties;
    //   45497: invokevirtual keys : ()Ljava/util/Enumeration;
    //   45500: astore #11
    //   45502: goto_w -> 45596
    //   45507: aload #11
    //   45509: invokeinterface nextElement : ()Ljava/lang/Object;
    //   45514: invokevirtual toString : ()Ljava/lang/String;
    //   45517: astore #12
    //   45519: aload #12
    //   45521: ldc_w 'x_'
    //   45524: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   45527: ifne -> 45535
    //   45530: goto_w -> 45596
    //   45535: new java/util/Properties
    //   45538: dup
    //   45539: invokespecial <init> : ()V
    //   45542: astore #13
    //   45544: aload #13
    //   45546: ldc_w 'key'
    //   45549: aload #12
    //   45551: iconst_2
    //   45552: invokevirtual substring : (I)Ljava/lang/String;
    //   45555: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   45558: invokevirtual trim : ()Ljava/lang/String;
    //   45561: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45564: pop
    //   45565: aload #13
    //   45567: ldc_w 'value'
    //   45570: aload_0
    //   45571: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   45574: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   45577: getfield user : Ljava/util/Properties;
    //   45580: aload #12
    //   45582: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   45585: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45588: pop
    //   45589: aload #10
    //   45591: aload #13
    //   45593: invokevirtual addElement : (Ljava/lang/Object;)V
    //   45596: aload #11
    //   45598: invokeinterface hasMoreElements : ()Z
    //   45603: ifeq -> 45611
    //   45606: goto_w -> 45507
    //   45611: goto_w -> 45633
    //   45616: astore #11
    //   45618: ldc_w 'HTTP_SERVER'
    //   45621: iconst_1
    //   45622: aload #11
    //   45624: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   45627: pop
    //   45628: goto_w -> 45633
    //   45633: aload #8
    //   45635: ldc_w 'user_priv_options'
    //   45638: aload #4
    //   45640: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45643: pop
    //   45644: aload #8
    //   45646: ldc_w 'crushftp_version'
    //   45649: getstatic crushftp/server/ServerStatus.version_info_str : Ljava/lang/String;
    //   45652: iconst_0
    //   45653: getstatic crushftp/server/ServerStatus.version_info_str : Ljava/lang/String;
    //   45656: ldc_w '.'
    //   45659: invokevirtual indexOf : (Ljava/lang/String;)I
    //   45662: invokevirtual substring : (II)Ljava/lang/String;
    //   45665: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45668: pop
    //   45669: aload #8
    //   45671: ldc_w 'crushftp_enterprise'
    //   45674: ldc 'enterprise_level'
    //   45676: invokestatic siSG : (Ljava/lang/String;)Ljava/lang/String;
    //   45679: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45682: pop
    //   45683: aload #8
    //   45685: ldc_w 'unique_upload_id'
    //   45688: iconst_3
    //   45689: invokestatic makeBoundary : (I)Ljava/lang/String;
    //   45692: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45695: pop
    //   45696: aload #8
    //   45698: ldc_w 'display_alt_logo'
    //   45701: ldc_w 'display_alt_logo'
    //   45704: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   45707: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45710: pop
    //   45711: aload_0
    //   45712: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   45715: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   45718: getfield user : Ljava/util/Properties;
    //   45721: invokestatic build_password_rules : (Ljava/util/Properties;)Ljava/util/Properties;
    //   45724: astore #11
    //   45726: aload #8
    //   45728: ldc_w 'random_password_length'
    //   45731: aload #11
    //   45733: ldc_w 'random_password_length'
    //   45736: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   45739: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45742: pop
    //   45743: aload #8
    //   45745: ldc_w 'min_password_length'
    //   45748: aload #11
    //   45750: ldc_w 'min_password_length'
    //   45753: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   45756: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45759: pop
    //   45760: aload #8
    //   45762: ldc_w 'min_password_numbers'
    //   45765: aload #11
    //   45767: ldc_w 'min_password_numbers'
    //   45770: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   45773: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45776: pop
    //   45777: aload #8
    //   45779: ldc_w 'min_password_lowers'
    //   45782: aload #11
    //   45784: ldc_w 'min_password_lowers'
    //   45787: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   45790: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45793: pop
    //   45794: aload #8
    //   45796: ldc_w 'min_password_uppers'
    //   45799: aload #11
    //   45801: ldc_w 'min_password_uppers'
    //   45804: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   45807: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45810: pop
    //   45811: aload #8
    //   45813: ldc_w 'min_password_specials'
    //   45816: aload #11
    //   45818: ldc_w 'min_password_specials'
    //   45821: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   45824: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45827: pop
    //   45828: aload #8
    //   45830: ldc_w 'temp_accounts_length'
    //   45833: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   45836: pop
    //   45837: ldc_w 'temp_accounts_length'
    //   45840: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   45843: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45846: pop
    //   45847: aload #8
    //   45849: ldc_w 'temp_upload_ext'
    //   45852: aload_0
    //   45853: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   45856: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   45859: ldc_w 'temp_upload_ext'
    //   45862: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   45865: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45868: pop
    //   45869: ldc 'enterprise_level'
    //   45871: invokestatic siIG : (Ljava/lang/String;)I
    //   45874: ifgt -> 45882
    //   45877: goto_w -> 45904
    //   45882: aload #8
    //   45884: ldc_w 'alt_http_domains'
    //   45887: aload_0
    //   45888: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   45891: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   45894: ldc_w 'alt_http_domains'
    //   45897: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   45900: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45903: pop
    //   45904: aload #8
    //   45906: ldc_w 'account_expire'
    //   45909: aload_0
    //   45910: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   45913: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   45916: ldc_w 'account_expire'
    //   45919: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   45922: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45925: pop
    //   45926: aload #8
    //   45928: ldc_w 'timezone_offset'
    //   45931: aload_0
    //   45932: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   45935: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   45938: getfield user : Ljava/util/Properties;
    //   45941: ldc_w 'timezone_offset'
    //   45944: ldc_w '0'
    //   45947: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   45950: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45953: pop
    //   45954: aload #8
    //   45956: ldc_w 'root_dir_name'
    //   45959: aload_0
    //   45960: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   45963: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   45966: ldc_w 'root_dir'
    //   45969: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   45972: bipush #47
    //   45974: bipush #32
    //   45976: invokevirtual replace : (CC)Ljava/lang/String;
    //   45979: invokevirtual trim : ()Ljava/lang/String;
    //   45982: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45985: pop
    //   45986: ldc_w 'v9_beta'
    //   45989: invokestatic BG : (Ljava/lang/String;)Z
    //   45992: ifne -> 46000
    //   45995: goto_w -> 46011
    //   46000: aload #8
    //   46002: ldc_w 'v9_beta'
    //   46005: ldc 'true'
    //   46007: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   46010: pop
    //   46011: aload_1
    //   46012: ldc_w 'path'
    //   46015: aload_1
    //   46016: ldc_w 'path'
    //   46019: ldc_w '/'
    //   46022: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46025: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   46028: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   46031: pop
    //   46032: aload_1
    //   46033: ldc_w 'path'
    //   46036: ldc_w '/'
    //   46039: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46042: astore #12
    //   46044: aload #12
    //   46046: ldc ''
    //   46048: invokevirtual equals : (Ljava/lang/Object;)Z
    //   46051: ifne -> 46059
    //   46054: goto_w -> 46064
    //   46059: ldc_w '/'
    //   46062: astore #12
    //   46064: aload #12
    //   46066: aload_0
    //   46067: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   46070: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   46073: ldc_w 'root_dir'
    //   46076: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   46079: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   46082: ifeq -> 46090
    //   46085: goto_w -> 46127
    //   46090: new java/lang/StringBuffer
    //   46093: dup
    //   46094: aload_0
    //   46095: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   46098: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   46101: ldc_w 'root_dir'
    //   46104: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   46107: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   46110: invokespecial <init> : (Ljava/lang/String;)V
    //   46113: aload #12
    //   46115: iconst_1
    //   46116: invokevirtual substring : (I)Ljava/lang/String;
    //   46119: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   46122: invokevirtual toString : ()Ljava/lang/String;
    //   46125: astore #12
    //   46127: aload_0
    //   46128: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   46131: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   46134: getfield uVFS : Lcrushftp/server/VFS;
    //   46137: aload #12
    //   46139: iconst_0
    //   46140: invokevirtual get_item : (Ljava/lang/String;I)Ljava/util/Properties;
    //   46143: astore #13
    //   46145: aload #13
    //   46147: ifnonnull -> 46155
    //   46150: goto_w -> 46353
    //   46155: aload_1
    //   46156: ldc_w 'path'
    //   46159: ldc_w '/'
    //   46162: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46165: ldc_w '/'
    //   46168: invokevirtual equals : (Ljava/lang/Object;)Z
    //   46171: ifeq -> 46179
    //   46174: goto_w -> 46316
    //   46179: aload_1
    //   46180: ldc_w 'path'
    //   46183: ldc_w '/'
    //   46186: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46189: ldc ''
    //   46191: invokevirtual equals : (Ljava/lang/Object;)Z
    //   46194: ifeq -> 46202
    //   46197: goto_w -> 46316
    //   46202: aload_1
    //   46203: ldc_w 'path'
    //   46206: ldc_w '/'
    //   46209: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46212: ldc_w '/ftp/'
    //   46215: invokevirtual equals : (Ljava/lang/Object;)Z
    //   46218: ifeq -> 46226
    //   46221: goto_w -> 46316
    //   46226: aload_0
    //   46227: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   46230: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   46233: getfield uVFS : Lcrushftp/server/VFS;
    //   46236: aload #13
    //   46238: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   46241: astore #14
    //   46243: aload #14
    //   46245: new java/lang/StringBuffer
    //   46248: dup
    //   46249: ldc_w 'CWD '
    //   46252: invokespecial <init> : (Ljava/lang/String;)V
    //   46255: aload_1
    //   46256: ldc_w 'path'
    //   46259: ldc_w '/'
    //   46262: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46265: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   46268: invokevirtual toString : ()Ljava/lang/String;
    //   46271: invokevirtual doCommand : (Ljava/lang/String;)Ljava/lang/String;
    //   46274: pop
    //   46275: goto_w -> 46311
    //   46280: astore #16
    //   46282: jsr_w -> 46290
    //   46287: aload #16
    //   46289: athrow
    //   46290: astore #15
    //   46292: aload_0
    //   46293: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   46296: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   46299: getfield uVFS : Lcrushftp/server/VFS;
    //   46302: aload #14
    //   46304: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   46307: astore #14
    //   46309: ret #15
    //   46311: jsr_w -> 46290
    //   46316: ldc_w 'allow_impulse'
    //   46319: invokestatic BG : (Ljava/lang/String;)Z
    //   46322: ifne -> 46330
    //   46325: goto_w -> 46341
    //   46330: aload_0
    //   46331: ldc_w 'IMPULSEINFO'
    //   46334: aload #13
    //   46336: aload #12
    //   46338: invokevirtual getUserInfo : (Ljava/lang/String;Ljava/util/Properties;Ljava/lang/String;)V
    //   46341: goto_w -> 46353
    //   46346: astore #14
    //   46348: goto_w -> 46353
    //   46353: aload #8
    //   46355: ldc 'user_name'
    //   46357: aload_0
    //   46358: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   46361: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   46364: ldc 'user_name'
    //   46366: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   46369: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   46372: pop
    //   46373: aload #8
    //   46375: ldc 'username'
    //   46377: aload_0
    //   46378: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   46381: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   46384: ldc 'user_name'
    //   46386: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   46389: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   46392: pop
    //   46393: aload #8
    //   46395: ldc_w 'email'
    //   46398: aload_0
    //   46399: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   46402: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   46405: getfield user : Ljava/util/Properties;
    //   46408: ldc_w 'email'
    //   46411: ldc ''
    //   46413: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46416: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   46419: pop
    //   46420: aload #8
    //   46422: ldc_w 'first_name'
    //   46425: aload_0
    //   46426: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   46429: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   46432: getfield user : Ljava/util/Properties;
    //   46435: ldc_w 'first_name'
    //   46438: ldc ''
    //   46440: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46443: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   46446: pop
    //   46447: aload #8
    //   46449: ldc_w 'last_name'
    //   46452: aload_0
    //   46453: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   46456: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   46459: getfield user : Ljava/util/Properties;
    //   46462: ldc_w 'last_name'
    //   46465: ldc ''
    //   46467: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46470: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   46473: pop
    //   46474: ldc ''
    //   46476: astore #14
    //   46478: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   46481: getfield common_code : Lcrushftp/handlers/Common;
    //   46484: pop
    //   46485: aload #8
    //   46487: ldc_w 'userInfo'
    //   46490: aconst_null
    //   46491: invokestatic getXMLString : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46494: astore #14
    //   46496: goto_w -> 46518
    //   46501: astore #15
    //   46503: ldc_w 'HTTP_SERVER'
    //   46506: iconst_1
    //   46507: aload #15
    //   46509: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   46512: pop
    //   46513: goto_w -> 46518
    //   46518: aload #14
    //   46520: ldc_w '>/WebInterface/'
    //   46523: new java/lang/StringBuffer
    //   46526: dup
    //   46527: ldc_w '>'
    //   46530: invokespecial <init> : (Ljava/lang/String;)V
    //   46533: aload_0
    //   46534: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   46537: getfield proxy : Ljava/lang/String;
    //   46540: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   46543: ldc_w 'WebInterface/'
    //   46546: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   46549: invokevirtual toString : ()Ljava/lang/String;
    //   46552: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46555: astore #14
    //   46557: aload_0
    //   46558: aload #14
    //   46560: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   46563: ireturn
    //   46564: aload #5
    //   46566: ldc_w 'changePassword'
    //   46569: invokevirtual equals : (Ljava/lang/Object;)Z
    //   46572: ifne -> 46580
    //   46575: goto_w -> 46863
    //   46580: ldc ''
    //   46582: astore #8
    //   46584: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   46587: ifne -> 46595
    //   46590: goto_w -> 46841
    //   46595: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   46598: ldc_w 'crushftp.dmz.queue'
    //   46601: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   46604: checkcast java/util/Vector
    //   46607: astore #9
    //   46609: new java/util/Properties
    //   46612: dup
    //   46613: invokespecial <init> : ()V
    //   46616: astore #10
    //   46618: aload #10
    //   46620: ldc_w 'type'
    //   46623: ldc_w 'PUT:CHANGE_PASSWORD'
    //   46626: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   46629: pop
    //   46630: aload #10
    //   46632: ldc_w 'id'
    //   46635: invokestatic makeBoundary : ()Ljava/lang/String;
    //   46638: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   46641: pop
    //   46642: aload_0
    //   46643: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   46646: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   46649: getfield uVFS : Lcrushftp/server/VFS;
    //   46652: aload_0
    //   46653: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   46656: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   46659: ldc_w 'root_dir'
    //   46662: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   46665: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   46668: astore #11
    //   46670: aload_0
    //   46671: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   46674: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   46677: getfield uVFS : Lcrushftp/server/VFS;
    //   46680: aload #11
    //   46682: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   46685: astore #12
    //   46687: aload #10
    //   46689: ldc_w 'crushAuth'
    //   46692: aload #12
    //   46694: ldc_w 'crushAuth'
    //   46697: invokevirtual getConfig : (Ljava/lang/String;)Ljava/lang/Object;
    //   46700: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   46703: pop
    //   46704: aload_0
    //   46705: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   46708: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   46711: getfield uVFS : Lcrushftp/server/VFS;
    //   46714: aload #12
    //   46716: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   46719: pop
    //   46720: goto_w -> 46741
    //   46725: astore #11
    //   46727: ldc 'SERVER'
    //   46729: iconst_1
    //   46730: aload #11
    //   46732: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   46735: pop
    //   46736: goto_w -> 46741
    //   46741: aload #10
    //   46743: ldc_w 'request'
    //   46746: aload_1
    //   46747: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   46750: pop
    //   46751: aload #10
    //   46753: ldc 'username'
    //   46755: aload_0
    //   46756: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   46759: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   46762: ldc 'user_name'
    //   46764: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   46767: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   46770: pop
    //   46771: aload #10
    //   46773: ldc 'current_password'
    //   46775: aload_1
    //   46776: ldc 'current_password'
    //   46778: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   46781: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   46784: pop
    //   46785: aload #10
    //   46787: ldc_w 'site'
    //   46790: aload #4
    //   46792: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   46795: pop
    //   46796: aload #10
    //   46798: ldc_w 'need_response'
    //   46801: ldc 'true'
    //   46803: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   46806: pop
    //   46807: aload #9
    //   46809: aload #10
    //   46811: invokevirtual addElement : (Ljava/lang/Object;)V
    //   46814: aload #10
    //   46816: bipush #30
    //   46818: invokestatic waitResponse : (Ljava/util/Properties;I)Ljava/util/Properties;
    //   46821: astore #10
    //   46823: aload #10
    //   46825: ldc_w 'object_response'
    //   46828: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   46831: invokevirtual toString : ()Ljava/lang/String;
    //   46834: astore #8
    //   46836: goto_w -> 46856
    //   46841: aload_1
    //   46842: aload #4
    //   46844: aload_0
    //   46845: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   46848: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   46851: invokestatic changePassword : (Ljava/util/Properties;Ljava/lang/String;Lcrushftp/handlers/SessionCrush;)Ljava/lang/String;
    //   46854: astore #8
    //   46856: aload_0
    //   46857: aload #8
    //   46859: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   46862: ireturn
    //   46863: aload_1
    //   46864: ldc_w 'the_action'
    //   46867: ldc ''
    //   46869: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46872: ldc_w 'FTPPROXY'
    //   46875: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   46878: ifne -> 46886
    //   46881: goto_w -> 47793
    //   46886: aload #4
    //   46888: ldc_w '(SITE_WEBFTPPROXY)'
    //   46891: invokevirtual indexOf : (Ljava/lang/String;)I
    //   46894: ifge -> 46902
    //   46897: goto_w -> 47788
    //   46902: aload_1
    //   46903: ldc_w 'ip'
    //   46906: ldc ''
    //   46908: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46911: astore #8
    //   46913: aload_1
    //   46914: ldc_w 'user'
    //   46917: ldc ''
    //   46919: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46922: ldc_w '---PERCENT---'
    //   46925: ldc_w '%'
    //   46928: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46931: astore #9
    //   46933: aload_1
    //   46934: ldc_w 'pass'
    //   46937: ldc ''
    //   46939: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46942: ldc_w '---PERCENT---'
    //   46945: ldc_w '%'
    //   46948: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46951: astore #10
    //   46953: aload #9
    //   46955: ldc_w '---PLUS---'
    //   46958: ldc_w '+'
    //   46961: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46964: astore #9
    //   46966: aload #10
    //   46968: ldc_w '---PLUS---'
    //   46971: ldc_w '+'
    //   46974: invokestatic replace_str : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46977: astore #10
    //   46979: aload_1
    //   46980: ldc_w 'path'
    //   46983: ldc ''
    //   46985: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   46988: astore #11
    //   46990: aload_1
    //   46991: ldc_w 'port'
    //   46994: ldc_w '21'
    //   46997: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   47000: astore #12
    //   47002: aload_1
    //   47003: ldc_w 'protocol'
    //   47006: ldc_w 'ftp'
    //   47009: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   47012: invokevirtual toLowerCase : ()Ljava/lang/String;
    //   47015: astore #13
    //   47017: aload #11
    //   47019: ldc_w '/'
    //   47022: invokevirtual endsWith : (Ljava/lang/String;)Z
    //   47025: ifeq -> 47033
    //   47028: goto_w -> 47056
    //   47033: new java/lang/StringBuffer
    //   47036: dup
    //   47037: aload #11
    //   47039: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   47042: invokespecial <init> : (Ljava/lang/String;)V
    //   47045: ldc_w '/'
    //   47048: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   47051: invokevirtual toString : ()Ljava/lang/String;
    //   47054: astore #11
    //   47056: aload #11
    //   47058: ldc_w '/'
    //   47061: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   47064: ifeq -> 47072
    //   47067: goto_w -> 47092
    //   47072: new java/lang/StringBuffer
    //   47075: dup
    //   47076: ldc_w '/'
    //   47079: invokespecial <init> : (Ljava/lang/String;)V
    //   47082: aload #11
    //   47084: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   47087: invokevirtual toString : ()Ljava/lang/String;
    //   47090: astore #11
    //   47092: ldc_w 'proxyRules'
    //   47095: invokestatic VG : (Ljava/lang/String;)Ljava/util/Vector;
    //   47098: astore #14
    //   47100: aload #4
    //   47102: ldc_w '(SITE_ADHOCWEBFTPPROXY)'
    //   47105: invokevirtual indexOf : (Ljava/lang/String;)I
    //   47108: ifge -> 47116
    //   47111: goto_w -> 47122
    //   47116: iconst_1
    //   47117: goto_w -> 47123
    //   47122: iconst_0
    //   47123: istore #15
    //   47125: iconst_0
    //   47126: istore #16
    //   47128: iconst_0
    //   47129: istore #17
    //   47131: goto_w -> 47426
    //   47136: aload #14
    //   47138: iload #17
    //   47140: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   47143: checkcast java/util/Properties
    //   47146: astore #18
    //   47148: aload #18
    //   47150: ldc_w 'host'
    //   47153: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   47156: aload #8
    //   47158: iconst_0
    //   47159: iconst_0
    //   47160: invokestatic do_search : (Ljava/lang/String;Ljava/lang/String;ZI)Z
    //   47163: ifne -> 47171
    //   47166: goto_w -> 47423
    //   47171: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   47174: aload #18
    //   47176: ldc_w 'criteria1'
    //   47179: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   47182: aload_0
    //   47183: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   47186: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   47189: invokevirtual change_vars_to_values : (Ljava/lang/String;Lcrushftp/handlers/SessionCrush;)Ljava/lang/String;
    //   47192: astore #19
    //   47194: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   47197: aload #18
    //   47199: ldc_w 'criteria2'
    //   47202: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   47205: aload_0
    //   47206: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   47209: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   47212: invokevirtual change_vars_to_values : (Ljava/lang/String;Lcrushftp/handlers/SessionCrush;)Ljava/lang/String;
    //   47215: astore #20
    //   47217: aload #19
    //   47219: aload #20
    //   47221: iconst_0
    //   47222: iconst_0
    //   47223: invokestatic do_search : (Ljava/lang/String;Ljava/lang/String;ZI)Z
    //   47226: ifeq -> 47234
    //   47229: goto_w -> 47251
    //   47234: aload #20
    //   47236: aload #19
    //   47238: iconst_0
    //   47239: iconst_0
    //   47240: invokestatic do_search : (Ljava/lang/String;Ljava/lang/String;ZI)Z
    //   47243: ifne -> 47251
    //   47246: goto_w -> 47281
    //   47251: aload #18
    //   47253: ldc_w 'condition'
    //   47256: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   47259: ldc_w '='
    //   47262: invokevirtual equals : (Ljava/lang/Object;)Z
    //   47265: ifne -> 47273
    //   47268: goto_w -> 47281
    //   47273: iconst_1
    //   47274: istore #15
    //   47276: goto_w -> 47441
    //   47281: aload #19
    //   47283: aload #20
    //   47285: iconst_0
    //   47286: iconst_0
    //   47287: invokestatic do_search : (Ljava/lang/String;Ljava/lang/String;ZI)Z
    //   47290: ifeq -> 47298
    //   47293: goto_w -> 47345
    //   47298: aload #20
    //   47300: aload #19
    //   47302: iconst_0
    //   47303: iconst_0
    //   47304: invokestatic do_search : (Ljava/lang/String;Ljava/lang/String;ZI)Z
    //   47307: ifeq -> 47315
    //   47310: goto_w -> 47345
    //   47315: aload #18
    //   47317: ldc_w 'condition'
    //   47320: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   47323: ldc_w '!='
    //   47326: invokevirtual equals : (Ljava/lang/Object;)Z
    //   47329: ifne -> 47337
    //   47332: goto_w -> 47345
    //   47337: iconst_1
    //   47338: istore #15
    //   47340: goto_w -> 47441
    //   47345: aload #19
    //   47347: ldc_w '1'
    //   47350: invokevirtual equals : (Ljava/lang/Object;)Z
    //   47353: ifne -> 47361
    //   47356: goto_w -> 47423
    //   47361: aload #20
    //   47363: ldc_w '2'
    //   47366: invokevirtual equals : (Ljava/lang/Object;)Z
    //   47369: ifne -> 47377
    //   47372: goto_w -> 47423
    //   47377: aload #18
    //   47379: ldc_w 'condition'
    //   47382: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   47385: ldc_w '='
    //   47388: invokevirtual equals : (Ljava/lang/Object;)Z
    //   47391: ifne -> 47399
    //   47394: goto_w -> 47423
    //   47399: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   47402: ldc_w 'proxy_blacklist'
    //   47405: aload_0
    //   47406: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   47409: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   47412: invokevirtual runAlerts : (Ljava/lang/String;Lcrushftp/handlers/SessionCrush;)V
    //   47415: iconst_1
    //   47416: istore #16
    //   47418: goto_w -> 47441
    //   47423: iinc #17, 1
    //   47426: iload #17
    //   47428: aload #14
    //   47430: invokevirtual size : ()I
    //   47433: if_icmpge -> 47441
    //   47436: goto_w -> 47136
    //   47441: iload #15
    //   47443: ifne -> 47451
    //   47446: goto_w -> 47756
    //   47451: iload #16
    //   47453: ifeq -> 47461
    //   47456: goto_w -> 47756
    //   47461: aload_0
    //   47462: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   47465: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   47468: getfield uVFS : Lcrushftp/server/VFS;
    //   47471: getfield homes : Ljava/util/Vector;
    //   47474: iconst_0
    //   47475: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   47478: checkcast java/util/Properties
    //   47481: astore #17
    //   47483: new java/util/Vector
    //   47486: dup
    //   47487: invokespecial <init> : ()V
    //   47490: astore #18
    //   47492: new java/util/Properties
    //   47495: dup
    //   47496: invokespecial <init> : ()V
    //   47499: astore #19
    //   47501: aload #19
    //   47503: ldc_w 'url'
    //   47506: new java/lang/StringBuffer
    //   47509: dup
    //   47510: aload #13
    //   47512: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   47515: invokespecial <init> : (Ljava/lang/String;)V
    //   47518: ldc_w '://'
    //   47521: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   47524: aload #9
    //   47526: invokestatic url_encode : (Ljava/lang/String;)Ljava/lang/String;
    //   47529: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   47532: ldc_w ':'
    //   47535: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   47538: aload #10
    //   47540: invokestatic url_encode : (Ljava/lang/String;)Ljava/lang/String;
    //   47543: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   47546: ldc_w '@'
    //   47549: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   47552: aload #8
    //   47554: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   47557: ldc_w ':'
    //   47560: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   47563: aload #12
    //   47565: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   47568: aload #11
    //   47570: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   47573: invokevirtual toString : ()Ljava/lang/String;
    //   47576: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   47579: pop
    //   47580: aload #19
    //   47582: ldc_w 'type'
    //   47585: ldc_w 'DIR'
    //   47588: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   47591: pop
    //   47592: aload #19
    //   47594: ldc_w 'no_stat'
    //   47597: ldc 'true'
    //   47599: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   47602: pop
    //   47603: aload #18
    //   47605: aload #19
    //   47607: invokevirtual addElement : (Ljava/lang/Object;)V
    //   47610: new java/util/Properties
    //   47613: dup
    //   47614: invokespecial <init> : ()V
    //   47617: astore #20
    //   47619: aload #20
    //   47621: ldc_w 'virtualPath'
    //   47624: ldc_w '/ftp'
    //   47627: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   47630: pop
    //   47631: aload #20
    //   47633: ldc_w 'name'
    //   47636: ldc_w 'ftp'
    //   47639: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   47642: pop
    //   47643: aload #20
    //   47645: ldc_w 'type'
    //   47648: ldc_w 'FILE'
    //   47651: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   47654: pop
    //   47655: aload #20
    //   47657: ldc_w 'vItems'
    //   47660: aload #18
    //   47662: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   47665: pop
    //   47666: aload #17
    //   47668: ldc_w '/ftp'
    //   47671: aload #20
    //   47673: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   47676: pop
    //   47677: aload_0
    //   47678: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   47681: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   47684: getfield uVFS : Lcrushftp/server/VFS;
    //   47687: invokevirtual reset : ()V
    //   47690: aload_0
    //   47691: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   47694: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   47697: new java/lang/StringBuffer
    //   47700: dup
    //   47701: ldc_w 'Proxy created to URL:ftp://'
    //   47704: invokespecial <init> : (Ljava/lang/String;)V
    //   47707: aload #9
    //   47709: invokestatic url_encode : (Ljava/lang/String;)Ljava/lang/String;
    //   47712: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   47715: ldc_w ':********************@'
    //   47718: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   47721: aload #8
    //   47723: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   47726: aload #11
    //   47728: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   47731: invokevirtual toString : ()Ljava/lang/String;
    //   47734: ldc_w 'POST'
    //   47737: aload_3
    //   47738: invokevirtual add_log_formatted : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    //   47741: aload_0
    //   47742: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   47745: ldc_w '/ftp/'
    //   47748: invokevirtual sendRedirect : (Ljava/lang/String;)V
    //   47751: goto_w -> 47766
    //   47756: aload_0
    //   47757: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   47760: ldc_w '/'
    //   47763: invokevirtual sendRedirect : (Ljava/lang/String;)V
    //   47766: aload_0
    //   47767: ldc_w 'Connection: close'
    //   47770: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   47773: aload_0
    //   47774: ldc_w 'Content-Length: 0'
    //   47777: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   47780: aload_0
    //   47781: ldc ''
    //   47783: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   47786: iconst_1
    //   47787: ireturn
    //   47788: goto_w -> 53956
    //   47793: aload_1
    //   47794: ldc_w 'command'
    //   47797: ldc ''
    //   47799: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   47802: ldc_w 'agentRegister'
    //   47805: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   47808: ifne -> 47816
    //   47811: goto_w -> 48116
    //   47816: ldc_w 'registeredAgents'
    //   47819: invokestatic siVG : (Ljava/lang/String;)Ljava/util/Vector;
    //   47822: astore #8
    //   47824: aload #8
    //   47826: ifnull -> 47834
    //   47829: goto_w -> 47843
    //   47834: new java/util/Vector
    //   47837: dup
    //   47838: invokespecial <init> : ()V
    //   47841: astore #8
    //   47843: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   47846: getfield server_info : Ljava/util/Properties;
    //   47849: ldc_w 'registeredAgents'
    //   47852: aload #8
    //   47854: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   47857: pop
    //   47858: iconst_0
    //   47859: istore #9
    //   47861: aload #8
    //   47863: dup
    //   47864: astore #10
    //   47866: monitorenter
    //   47867: iconst_0
    //   47868: istore #11
    //   47870: goto_w -> 47944
    //   47875: aload #8
    //   47877: iload #11
    //   47879: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   47882: checkcast java/util/Properties
    //   47885: astore #12
    //   47887: aload #12
    //   47889: ldc_w 'name'
    //   47892: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   47895: aload_1
    //   47896: ldc_w 'name'
    //   47899: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   47902: invokevirtual equals : (Ljava/lang/Object;)Z
    //   47905: ifne -> 47913
    //   47908: goto_w -> 47941
    //   47913: iconst_1
    //   47914: istore #9
    //   47916: aload #12
    //   47918: ldc_w 'active'
    //   47921: new java/lang/StringBuffer
    //   47924: dup
    //   47925: invokestatic currentTimeMillis : ()J
    //   47928: invokestatic valueOf : (J)Ljava/lang/String;
    //   47931: invokespecial <init> : (Ljava/lang/String;)V
    //   47934: invokevirtual toString : ()Ljava/lang/String;
    //   47937: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   47940: pop
    //   47941: iinc #11, 1
    //   47944: iload #11
    //   47946: aload #8
    //   47948: invokevirtual size : ()I
    //   47951: if_icmplt -> 47959
    //   47954: goto_w -> 47969
    //   47959: iload #9
    //   47961: ifne -> 47969
    //   47964: goto_w -> 47875
    //   47969: iload #9
    //   47971: ifeq -> 47979
    //   47974: goto_w -> 48068
    //   47979: new java/util/Properties
    //   47982: dup
    //   47983: invokespecial <init> : ()V
    //   47986: astore #11
    //   47988: aload #11
    //   47990: ldc_w 'name'
    //   47993: aload_1
    //   47994: ldc_w 'name'
    //   47997: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   48000: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   48003: pop
    //   48004: aload #11
    //   48006: ldc_w 'queue'
    //   48009: new java/util/Vector
    //   48012: dup
    //   48013: invokespecial <init> : ()V
    //   48016: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   48019: pop
    //   48020: aload #11
    //   48022: ldc_w 'responses'
    //   48025: new java/util/Properties
    //   48028: dup
    //   48029: invokespecial <init> : ()V
    //   48032: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   48035: pop
    //   48036: aload #11
    //   48038: ldc_w 'active'
    //   48041: new java/lang/StringBuffer
    //   48044: dup
    //   48045: invokestatic currentTimeMillis : ()J
    //   48048: invokestatic valueOf : (J)Ljava/lang/String;
    //   48051: invokespecial <init> : (Ljava/lang/String;)V
    //   48054: invokevirtual toString : ()Ljava/lang/String;
    //   48057: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   48060: pop
    //   48061: aload #8
    //   48063: aload #11
    //   48065: invokevirtual addElement : (Ljava/lang/Object;)V
    //   48068: aload #10
    //   48070: monitorexit
    //   48071: goto_w -> 48080
    //   48076: aload #10
    //   48078: monitorexit
    //   48079: athrow
    //   48080: aload_0
    //   48081: ldc_w 'HTTP/1.1 200 OK'
    //   48084: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   48087: aload_0
    //   48088: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   48091: invokevirtual write_standard_headers : ()V
    //   48094: aload_0
    //   48095: ldc_w 'Connection: close'
    //   48098: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   48101: aload_0
    //   48102: ldc_w 'Content-Length: 0'
    //   48105: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   48108: aload_0
    //   48109: ldc ''
    //   48111: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   48114: iconst_1
    //   48115: ireturn
    //   48116: aload_1
    //   48117: ldc_w 'command'
    //   48120: ldc ''
    //   48122: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   48125: ldc_w 'agentQueue'
    //   48128: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   48131: ifne -> 48139
    //   48134: goto_w -> 48445
    //   48139: ldc_w 'registeredAgents'
    //   48142: invokestatic siVG : (Ljava/lang/String;)Ljava/util/Vector;
    //   48145: astore #8
    //   48147: aload #8
    //   48149: ifnull -> 48157
    //   48152: goto_w -> 48166
    //   48157: new java/util/Vector
    //   48160: dup
    //   48161: invokespecial <init> : ()V
    //   48164: astore #8
    //   48166: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   48169: getfield server_info : Ljava/util/Properties;
    //   48172: ldc_w 'registeredAgents'
    //   48175: aload #8
    //   48177: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   48180: pop
    //   48181: new java/util/Properties
    //   48184: dup
    //   48185: invokespecial <init> : ()V
    //   48188: astore #9
    //   48190: aload #8
    //   48192: dup
    //   48193: astore #10
    //   48195: monitorenter
    //   48196: iconst_0
    //   48197: istore #11
    //   48199: goto_w -> 48307
    //   48204: aload #8
    //   48206: iload #11
    //   48208: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   48211: checkcast java/util/Properties
    //   48214: astore #12
    //   48216: aload #12
    //   48218: ldc_w 'name'
    //   48221: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   48224: aload_1
    //   48225: ldc_w 'name'
    //   48228: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   48231: invokevirtual equals : (Ljava/lang/Object;)Z
    //   48234: ifne -> 48242
    //   48237: goto_w -> 48304
    //   48242: aload #12
    //   48244: ldc_w 'active'
    //   48247: new java/lang/StringBuffer
    //   48250: dup
    //   48251: invokestatic currentTimeMillis : ()J
    //   48254: invokestatic valueOf : (J)Ljava/lang/String;
    //   48257: invokespecial <init> : (Ljava/lang/String;)V
    //   48260: invokevirtual toString : ()Ljava/lang/String;
    //   48263: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   48266: pop
    //   48267: aload #12
    //   48269: ldc_w 'queue'
    //   48272: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   48275: checkcast java/util/Vector
    //   48278: astore #13
    //   48280: aload #13
    //   48282: invokevirtual size : ()I
    //   48285: ifgt -> 48293
    //   48288: goto_w -> 48304
    //   48293: aload #13
    //   48295: iconst_0
    //   48296: invokevirtual remove : (I)Ljava/lang/Object;
    //   48299: checkcast java/util/Properties
    //   48302: astore #9
    //   48304: iinc #11, 1
    //   48307: iload #11
    //   48309: aload #8
    //   48311: invokevirtual size : ()I
    //   48314: if_icmpge -> 48322
    //   48317: goto_w -> 48204
    //   48322: aload #10
    //   48324: monitorexit
    //   48325: goto_w -> 48334
    //   48330: aload #10
    //   48332: monitorexit
    //   48333: athrow
    //   48334: new java/io/ByteArrayOutputStream
    //   48337: dup
    //   48338: invokespecial <init> : ()V
    //   48341: astore #10
    //   48343: new java/io/ObjectOutputStream
    //   48346: dup
    //   48347: aload #10
    //   48349: invokespecial <init> : (Ljava/io/OutputStream;)V
    //   48352: astore #11
    //   48354: aload #11
    //   48356: aload #9
    //   48358: invokevirtual writeObject : (Ljava/lang/Object;)V
    //   48361: aload #11
    //   48363: invokevirtual close : ()V
    //   48366: aload #10
    //   48368: invokevirtual toByteArray : ()[B
    //   48371: invokestatic encodeBytes : ([B)Ljava/lang/String;
    //   48374: astore #12
    //   48376: aload_0
    //   48377: ldc_w 'HTTP/1.1 200 OK'
    //   48380: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   48383: aload_0
    //   48384: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   48387: invokevirtual write_standard_headers : ()V
    //   48390: aload_0
    //   48391: ldc_w 'Connection: close'
    //   48394: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   48397: aload_0
    //   48398: new java/lang/StringBuffer
    //   48401: dup
    //   48402: ldc_w 'Content-Length: '
    //   48405: invokespecial <init> : (Ljava/lang/String;)V
    //   48408: aload #12
    //   48410: invokevirtual length : ()I
    //   48413: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   48416: invokevirtual toString : ()Ljava/lang/String;
    //   48419: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   48422: aload_0
    //   48423: ldc ''
    //   48425: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   48428: aload_0
    //   48429: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   48432: getfield original_os : Ljava/io/OutputStream;
    //   48435: aload #12
    //   48437: invokevirtual getBytes : ()[B
    //   48440: invokevirtual write : ([B)V
    //   48443: iconst_1
    //   48444: ireturn
    //   48445: aload_1
    //   48446: ldc_w 'command'
    //   48449: ldc ''
    //   48451: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   48454: ldc_w 'agentResponse'
    //   48457: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   48460: ifne -> 48468
    //   48463: goto_w -> 48813
    //   48468: ldc_w 'registeredAgents'
    //   48471: invokestatic siVG : (Ljava/lang/String;)Ljava/util/Vector;
    //   48474: astore #8
    //   48476: aload #8
    //   48478: ifnull -> 48486
    //   48481: goto_w -> 48495
    //   48486: new java/util/Vector
    //   48489: dup
    //   48490: invokespecial <init> : ()V
    //   48493: astore #8
    //   48495: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   48498: getfield server_info : Ljava/util/Properties;
    //   48501: ldc_w 'registeredAgents'
    //   48504: aload #8
    //   48506: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   48509: pop
    //   48510: new java/util/Properties
    //   48513: dup
    //   48514: invokespecial <init> : ()V
    //   48517: astore #9
    //   48519: aload #8
    //   48521: dup
    //   48522: astore #10
    //   48524: monitorenter
    //   48525: iconst_0
    //   48526: istore #11
    //   48528: goto_w -> 48675
    //   48533: aload #8
    //   48535: iload #11
    //   48537: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   48540: checkcast java/util/Properties
    //   48543: astore #12
    //   48545: aload #12
    //   48547: ldc_w 'name'
    //   48550: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   48553: aload_1
    //   48554: ldc_w 'name'
    //   48557: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   48560: invokevirtual equals : (Ljava/lang/Object;)Z
    //   48563: ifne -> 48571
    //   48566: goto_w -> 48672
    //   48571: aload #12
    //   48573: ldc_w 'active'
    //   48576: new java/lang/StringBuffer
    //   48579: dup
    //   48580: invokestatic currentTimeMillis : ()J
    //   48583: invokestatic valueOf : (J)Ljava/lang/String;
    //   48586: invokespecial <init> : (Ljava/lang/String;)V
    //   48589: invokevirtual toString : ()Ljava/lang/String;
    //   48592: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   48595: pop
    //   48596: new java/io/ByteArrayInputStream
    //   48599: dup
    //   48600: aload_1
    //   48601: ldc_w 'response'
    //   48604: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   48607: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   48610: invokestatic decode : (Ljava/lang/String;)[B
    //   48613: invokespecial <init> : ([B)V
    //   48616: invokestatic readXMLObject : (Ljava/io/InputStream;)Ljava/lang/Object;
    //   48619: checkcast java/util/Properties
    //   48622: astore #13
    //   48624: aload #12
    //   48626: ldc_w 'responses'
    //   48629: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   48632: checkcast java/util/Properties
    //   48635: astore #14
    //   48637: aload #14
    //   48639: aload_1
    //   48640: ldc_w 'response_id'
    //   48643: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   48646: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   48649: checkcast java/util/Properties
    //   48652: astore #15
    //   48654: aload #15
    //   48656: aload #13
    //   48658: invokevirtual putAll : (Ljava/util/Map;)V
    //   48661: aload #15
    //   48663: ldc_w 'response_received'
    //   48666: ldc 'true'
    //   48668: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   48671: pop
    //   48672: iinc #11, 1
    //   48675: iload #11
    //   48677: aload #8
    //   48679: invokevirtual size : ()I
    //   48682: if_icmpge -> 48690
    //   48685: goto_w -> 48533
    //   48690: aload #10
    //   48692: monitorexit
    //   48693: goto_w -> 48702
    //   48698: aload #10
    //   48700: monitorexit
    //   48701: athrow
    //   48702: new java/io/ByteArrayOutputStream
    //   48705: dup
    //   48706: invokespecial <init> : ()V
    //   48709: astore #10
    //   48711: new java/io/ObjectOutputStream
    //   48714: dup
    //   48715: aload #10
    //   48717: invokespecial <init> : (Ljava/io/OutputStream;)V
    //   48720: astore #11
    //   48722: aload #11
    //   48724: aload #9
    //   48726: invokevirtual writeObject : (Ljava/lang/Object;)V
    //   48729: aload #11
    //   48731: invokevirtual close : ()V
    //   48734: aload #10
    //   48736: invokevirtual toByteArray : ()[B
    //   48739: invokestatic encodeBytes : ([B)Ljava/lang/String;
    //   48742: astore #12
    //   48744: aload_0
    //   48745: ldc_w 'HTTP/1.1 200 OK'
    //   48748: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   48751: aload_0
    //   48752: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   48755: invokevirtual write_standard_headers : ()V
    //   48758: aload_0
    //   48759: ldc_w 'Connection: close'
    //   48762: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   48765: aload_0
    //   48766: new java/lang/StringBuffer
    //   48769: dup
    //   48770: ldc_w 'Content-Length: '
    //   48773: invokespecial <init> : (Ljava/lang/String;)V
    //   48776: aload #12
    //   48778: invokevirtual length : ()I
    //   48781: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   48784: invokevirtual toString : ()Ljava/lang/String;
    //   48787: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   48790: aload_0
    //   48791: ldc ''
    //   48793: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   48796: aload_0
    //   48797: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   48800: getfield original_os : Ljava/io/OutputStream;
    //   48803: aload #12
    //   48805: invokevirtual getBytes : ()[B
    //   48808: invokevirtual write : ([B)V
    //   48811: iconst_1
    //   48812: ireturn
    //   48813: aload #4
    //   48815: ldc_w '(CONNECT)'
    //   48818: invokevirtual indexOf : (Ljava/lang/String;)I
    //   48821: ifge -> 48829
    //   48824: goto_w -> 49053
    //   48829: aload_1
    //   48830: ldc_w 'command'
    //   48833: ldc ''
    //   48835: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   48838: ldc_w 'agentList'
    //   48841: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   48844: ifne -> 48852
    //   48847: goto_w -> 49053
    //   48852: new java/util/Vector
    //   48855: dup
    //   48856: invokespecial <init> : ()V
    //   48859: astore #8
    //   48861: ldc_w 'registeredAgents'
    //   48864: invokestatic siVG : (Ljava/lang/String;)Ljava/util/Vector;
    //   48867: astore #9
    //   48869: aload #9
    //   48871: ifnull -> 48879
    //   48874: goto_w -> 48888
    //   48879: new java/util/Vector
    //   48882: dup
    //   48883: invokespecial <init> : ()V
    //   48886: astore #9
    //   48888: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   48891: getfield server_info : Ljava/util/Properties;
    //   48894: ldc_w 'registeredAgents'
    //   48897: aload #9
    //   48899: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   48902: pop
    //   48903: aload #9
    //   48905: dup
    //   48906: astore #10
    //   48908: monitorenter
    //   48909: iconst_0
    //   48910: istore #11
    //   48912: goto_w -> 48975
    //   48917: aload #9
    //   48919: iload #11
    //   48921: invokevirtual elementAt : (I)Ljava/lang/Object;
    //   48924: checkcast java/util/Properties
    //   48927: astore #12
    //   48929: aload #8
    //   48931: new java/lang/StringBuffer
    //   48934: dup
    //   48935: aload #12
    //   48937: ldc_w 'name'
    //   48940: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   48943: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   48946: invokespecial <init> : (Ljava/lang/String;)V
    //   48949: ldc_w ':'
    //   48952: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   48955: aload #12
    //   48957: ldc_w 'active'
    //   48960: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   48963: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   48966: invokevirtual toString : ()Ljava/lang/String;
    //   48969: invokevirtual addElement : (Ljava/lang/Object;)V
    //   48972: iinc #11, 1
    //   48975: iload #11
    //   48977: aload #9
    //   48979: invokevirtual size : ()I
    //   48982: if_icmpge -> 48990
    //   48985: goto_w -> 48917
    //   48990: aload #10
    //   48992: monitorexit
    //   48993: goto_w -> 49002
    //   48998: aload #10
    //   49000: monitorexit
    //   49001: athrow
    //   49002: ldc ''
    //   49004: astore #10
    //   49006: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   49009: getfield common_code : Lcrushftp/handlers/Common;
    //   49012: pop
    //   49013: aload #8
    //   49015: ldc_w 'agents'
    //   49018: aconst_null
    //   49019: invokestatic getXMLString : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   49022: astore #10
    //   49024: goto_w -> 49046
    //   49029: astore #11
    //   49031: ldc_w 'HTTP_SERVER'
    //   49034: iconst_1
    //   49035: aload #11
    //   49037: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   49040: pop
    //   49041: goto_w -> 49046
    //   49046: aload_0
    //   49047: aload #10
    //   49049: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   49052: ireturn
    //   49053: aload #4
    //   49055: ldc_w '(CONNECT)'
    //   49058: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49061: iflt -> 49069
    //   49064: goto_w -> 49389
    //   49069: aload #4
    //   49071: ldc_w '(JOB_EDIT)'
    //   49074: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49077: iflt -> 49085
    //   49080: goto_w -> 49389
    //   49085: aload #4
    //   49087: ldc_w '(JOB_VIEW)'
    //   49090: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49093: iflt -> 49101
    //   49096: goto_w -> 49389
    //   49101: aload #4
    //   49103: ldc_w '(JOB_LIST)'
    //   49106: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49109: iflt -> 49117
    //   49112: goto_w -> 49389
    //   49117: aload #4
    //   49119: ldc_w '(JOB_RUN)'
    //   49122: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49125: iflt -> 49133
    //   49128: goto_w -> 49389
    //   49133: aload #4
    //   49135: ldc_w '(USER_ADMIN)'
    //   49138: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49141: iflt -> 49149
    //   49144: goto_w -> 49389
    //   49149: aload #4
    //   49151: ldc_w '(LOG_ACCESS)'
    //   49154: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49157: iflt -> 49165
    //   49160: goto_w -> 49389
    //   49165: aload #4
    //   49167: ldc_w '(SERVER_VIEW)'
    //   49170: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49173: iflt -> 49181
    //   49176: goto_w -> 49389
    //   49181: aload #4
    //   49183: ldc_w '(USER_EDIT)'
    //   49186: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49189: iflt -> 49197
    //   49192: goto_w -> 49389
    //   49197: aload #4
    //   49199: ldc_w '(SERVER_EDIT)'
    //   49202: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49205: iflt -> 49213
    //   49208: goto_w -> 49389
    //   49213: aload #4
    //   49215: ldc_w '(PREF_EDIT)'
    //   49218: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49221: iflt -> 49229
    //   49224: goto_w -> 49389
    //   49229: aload #4
    //   49231: ldc_w '(REPORT_EDIT)'
    //   49234: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49237: iflt -> 49245
    //   49240: goto_w -> 49389
    //   49245: aload #4
    //   49247: ldc_w '(SHARE_EDIT)'
    //   49250: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49253: iflt -> 49261
    //   49256: goto_w -> 49389
    //   49261: aload #4
    //   49263: ldc_w '(JOB_MONITOR)'
    //   49266: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49269: iflt -> 49277
    //   49272: goto_w -> 49389
    //   49277: aload #4
    //   49279: ldc_w '(JOB_LIST_HISTORY)'
    //   49282: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49285: iflt -> 49293
    //   49288: goto_w -> 49389
    //   49293: aload #4
    //   49295: ldc_w '(PREF_VIEW)'
    //   49298: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49301: iflt -> 49309
    //   49304: goto_w -> 49389
    //   49309: aload #4
    //   49311: ldc_w '(REPORT_VIEW)'
    //   49314: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49317: iflt -> 49325
    //   49320: goto_w -> 49389
    //   49325: aload #4
    //   49327: ldc_w '(REPORT_RUN)'
    //   49330: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49333: iflt -> 49341
    //   49336: goto_w -> 49389
    //   49341: aload #4
    //   49343: ldc_w '(SHARE_VIEW)'
    //   49346: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49349: iflt -> 49357
    //   49352: goto_w -> 49389
    //   49357: aload #4
    //   49359: ldc_w '(USER_VIEW)'
    //   49362: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49365: iflt -> 49373
    //   49368: goto_w -> 49389
    //   49373: aload #4
    //   49375: ldc_w '(UPDATE_RUN)'
    //   49378: invokevirtual indexOf : (Ljava/lang/String;)I
    //   49381: ifge -> 49389
    //   49384: goto_w -> 49474
    //   49389: aload_1
    //   49390: ldc_w 'command'
    //   49393: ldc ''
    //   49395: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   49398: ldc_w 'getServerRoots'
    //   49401: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   49404: ifne -> 49412
    //   49407: goto_w -> 49474
    //   49412: aload #5
    //   49414: aload #4
    //   49416: aload_0
    //   49417: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   49420: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   49423: ldc 'user_ip'
    //   49425: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   49428: invokestatic checkRole : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   49431: ifne -> 49439
    //   49434: goto_w -> 49466
    //   49439: aload_0
    //   49440: aload_1
    //   49441: aload #4
    //   49443: invokestatic getServerRoots : (Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/Object;
    //   49446: ldc_w 'result_value'
    //   49449: ldc_w 'OK'
    //   49452: invokestatic buildXML : (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   49455: iconst_0
    //   49456: sipush #200
    //   49459: iconst_0
    //   49460: iconst_0
    //   49461: iconst_1
    //   49462: invokevirtual writeResponse : (Ljava/lang/String;ZIZZZ)Z
    //   49465: ireturn
    //   49466: aload_0
    //   49467: ldc_w '<commandResult><response>FAILURE:Access Denied.</response></commandResult>'
    //   49470: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   49473: ireturn
    //   49474: aload #5
    //   49476: ldc_w 'download'
    //   49479: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   49482: ifne -> 49490
    //   49485: goto_w -> 51693
    //   49490: aload_1
    //   49491: invokevirtual keys : ()Ljava/util/Enumeration;
    //   49494: astore #8
    //   49496: new java/util/Properties
    //   49499: dup
    //   49500: invokespecial <init> : ()V
    //   49503: astore #9
    //   49505: goto_w -> 49700
    //   49510: aload #8
    //   49512: invokeinterface nextElement : ()Ljava/lang/Object;
    //   49517: invokevirtual toString : ()Ljava/lang/String;
    //   49520: astore #10
    //   49522: aload #10
    //   49524: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   49527: ldc_w 'META_'
    //   49530: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   49533: ifne -> 49541
    //   49536: goto_w -> 49700
    //   49541: aload_1
    //   49542: aload #10
    //   49544: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   49547: astore #11
    //   49549: aload #10
    //   49551: ldc_w 'META_'
    //   49554: invokevirtual length : ()I
    //   49557: invokevirtual substring : (I)Ljava/lang/String;
    //   49560: astore #10
    //   49562: aload #9
    //   49564: aload #10
    //   49566: aload #11
    //   49568: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   49571: pop
    //   49572: aload #10
    //   49574: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   49577: ldc_w 'GLOBAL_'
    //   49580: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   49583: ifne -> 49591
    //   49586: goto_w -> 49663
    //   49591: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   49594: getfield server_info : Ljava/util/Properties;
    //   49597: ldc_w 'global_variables'
    //   49600: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   49603: ifnull -> 49611
    //   49606: goto_w -> 49631
    //   49611: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   49614: getfield server_info : Ljava/util/Properties;
    //   49617: ldc_w 'global_variables'
    //   49620: new java/util/Properties
    //   49623: dup
    //   49624: invokespecial <init> : ()V
    //   49627: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   49630: pop
    //   49631: getstatic crushftp/server/ServerStatus.thisObj : Lcrushftp/server/ServerStatus;
    //   49634: getfield server_info : Ljava/util/Properties;
    //   49637: ldc_w 'global_variables'
    //   49640: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   49643: checkcast java/util/Properties
    //   49646: astore #12
    //   49648: aload #12
    //   49650: aload #10
    //   49652: aload #11
    //   49654: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   49657: pop
    //   49658: goto_w -> 49700
    //   49663: aload #10
    //   49665: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   49668: ldc_w 'USER_INFO_'
    //   49671: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   49674: ifne -> 49682
    //   49677: goto_w -> 49700
    //   49682: aload_0
    //   49683: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   49686: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   49689: getfield user_info : Ljava/util/Properties;
    //   49692: aload #10
    //   49694: aload #11
    //   49696: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   49699: pop
    //   49700: aload #8
    //   49702: invokeinterface hasMoreElements : ()Z
    //   49707: ifeq -> 49715
    //   49710: goto_w -> 49510
    //   49715: aload_0
    //   49716: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   49719: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   49722: ldc_w 'the_command'
    //   49725: ldc_w 'RETR'
    //   49728: invokevirtual uiPUT : (Ljava/lang/String;Ljava/lang/Object;)V
    //   49731: aload_1
    //   49732: ldc_w 'path'
    //   49735: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   49738: invokestatic url_decode : (Ljava/lang/String;)Ljava/lang/String;
    //   49741: astore #10
    //   49743: aload #10
    //   49745: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   49748: aload_0
    //   49749: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   49752: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   49755: ldc_w 'root_dir'
    //   49758: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   49761: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   49764: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   49767: ifeq -> 49775
    //   49770: goto_w -> 49835
    //   49775: new java/lang/StringBuffer
    //   49778: dup
    //   49779: aload_0
    //   49780: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   49783: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   49786: ldc_w 'root_dir'
    //   49789: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   49792: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   49795: invokespecial <init> : (Ljava/lang/String;)V
    //   49798: aload #10
    //   49800: ldc_w '/'
    //   49803: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   49806: ifne -> 49814
    //   49809: goto_w -> 49825
    //   49814: aload #10
    //   49816: iconst_1
    //   49817: invokevirtual substring : (I)Ljava/lang/String;
    //   49820: goto_w -> 49827
    //   49825: aload #10
    //   49827: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   49830: invokevirtual toString : ()Ljava/lang/String;
    //   49833: astore #10
    //   49835: aload_0
    //   49836: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   49839: aload #10
    //   49841: invokevirtual cd : (Ljava/lang/String;)V
    //   49844: aconst_null
    //   49845: astore #11
    //   49847: aconst_null
    //   49848: astore #12
    //   49850: aload_0
    //   49851: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   49854: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   49857: aload_0
    //   49858: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   49861: invokevirtual pwd : ()Ljava/lang/String;
    //   49864: ldc_w 'RETR'
    //   49867: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   49870: ifne -> 49878
    //   49873: goto_w -> 49946
    //   49878: ldc_w 'D'
    //   49881: aload_0
    //   49882: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   49885: invokevirtual pwd : ()Ljava/lang/String;
    //   49888: invokestatic last : (Ljava/lang/String;)Ljava/lang/String;
    //   49891: new java/lang/StringBuffer
    //   49894: dup
    //   49895: ldc_w 'filename_filters_str'
    //   49898: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   49901: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   49904: invokespecial <init> : (Ljava/lang/String;)V
    //   49907: ldc_w '\\r\\n'
    //   49910: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   49913: aload_0
    //   49914: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   49917: ldc_w 'file_filter'
    //   49920: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   49923: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   49926: invokevirtual toString : ()Ljava/lang/String;
    //   49929: invokestatic filter_check : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   49932: ifne -> 49940
    //   49935: goto_w -> 49946
    //   49940: iconst_1
    //   49941: goto_w -> 49947
    //   49946: iconst_0
    //   49947: istore #13
    //   49949: aload_0
    //   49950: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   49953: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   49956: getfield uVFS : Lcrushftp/server/VFS;
    //   49959: aload_0
    //   49960: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   49963: invokevirtual pwd : ()Ljava/lang/String;
    //   49966: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   49969: astore #11
    //   49971: aload #11
    //   49973: ifnonnull -> 49981
    //   49976: goto_w -> 50029
    //   49981: aload #11
    //   49983: ldc_w 'type'
    //   49986: ldc ''
    //   49988: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   49991: ldc_w 'DIR'
    //   49994: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   49997: ifne -> 50005
    //   50000: goto_w -> 50029
    //   50005: aload_0
    //   50006: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50009: invokevirtual pwd : ()Ljava/lang/String;
    //   50012: ldc_w '/'
    //   50015: invokevirtual endsWith : (Ljava/lang/String;)Z
    //   50018: ifeq -> 50026
    //   50021: goto_w -> 50029
    //   50026: iconst_0
    //   50027: istore #13
    //   50029: iload #13
    //   50031: ifne -> 50039
    //   50034: goto_w -> 50056
    //   50039: new com/crushftp/client/VRL
    //   50042: dup
    //   50043: aload #11
    //   50045: ldc_w 'url'
    //   50048: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   50051: invokespecial <init> : (Ljava/lang/String;)V
    //   50054: astore #12
    //   50056: aload #12
    //   50058: ifnull -> 50066
    //   50061: goto_w -> 50395
    //   50066: aload_0
    //   50067: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50070: invokevirtual pwd : ()Ljava/lang/String;
    //   50073: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   50076: ldc_w '.ZIP'
    //   50079: invokevirtual endsWith : (Ljava/lang/String;)Z
    //   50082: ifne -> 50090
    //   50085: goto_w -> 50395
    //   50090: aload_0
    //   50091: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50094: aload_0
    //   50095: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50098: invokevirtual pwd : ()Ljava/lang/String;
    //   50101: iconst_0
    //   50102: aload_0
    //   50103: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50106: invokevirtual pwd : ()Ljava/lang/String;
    //   50109: invokevirtual length : ()I
    //   50112: iconst_4
    //   50113: isub
    //   50114: invokevirtual substring : (II)Ljava/lang/String;
    //   50117: invokevirtual cd : (Ljava/lang/String;)V
    //   50120: aload_0
    //   50121: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50124: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   50127: aload_0
    //   50128: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50131: invokevirtual pwd : ()Ljava/lang/String;
    //   50134: ldc_w 'RETR'
    //   50137: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   50140: ifne -> 50148
    //   50143: goto_w -> 50216
    //   50148: ldc_w 'D'
    //   50151: aload_0
    //   50152: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50155: invokevirtual pwd : ()Ljava/lang/String;
    //   50158: invokestatic last : (Ljava/lang/String;)Ljava/lang/String;
    //   50161: new java/lang/StringBuffer
    //   50164: dup
    //   50165: ldc_w 'filename_filters_str'
    //   50168: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   50171: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   50174: invokespecial <init> : (Ljava/lang/String;)V
    //   50177: ldc_w '\\r\\n'
    //   50180: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   50183: aload_0
    //   50184: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50187: ldc_w 'file_filter'
    //   50190: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   50193: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   50196: invokevirtual toString : ()Ljava/lang/String;
    //   50199: invokestatic filter_check : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   50202: ifne -> 50210
    //   50205: goto_w -> 50216
    //   50210: iconst_1
    //   50211: goto_w -> 50217
    //   50216: iconst_0
    //   50217: istore #13
    //   50219: aload_0
    //   50220: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50223: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   50226: getfield uVFS : Lcrushftp/server/VFS;
    //   50229: aload_0
    //   50230: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50233: invokevirtual pwd : ()Ljava/lang/String;
    //   50236: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   50239: astore #11
    //   50241: aload #11
    //   50243: ifnonnull -> 50251
    //   50246: goto_w -> 50286
    //   50251: iload #13
    //   50253: ifne -> 50261
    //   50256: goto_w -> 50286
    //   50261: aload #11
    //   50263: ldc_w 'privs'
    //   50266: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   50269: ldc_w '(read)'
    //   50272: invokevirtual indexOf : (Ljava/lang/String;)I
    //   50275: iflt -> 50283
    //   50278: goto_w -> 50286
    //   50283: iconst_0
    //   50284: istore #13
    //   50286: iload #13
    //   50288: ifne -> 50296
    //   50291: goto_w -> 50362
    //   50296: new com/crushftp/client/VRL
    //   50299: dup
    //   50300: aload #11
    //   50302: ldc_w 'url'
    //   50305: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   50308: invokespecial <init> : (Ljava/lang/String;)V
    //   50311: astore #12
    //   50313: new com/crushftp/client/VRL
    //   50316: dup
    //   50317: new java/lang/StringBuffer
    //   50320: dup
    //   50321: aload #12
    //   50323: invokevirtual toString : ()Ljava/lang/String;
    //   50326: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   50329: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   50332: invokespecial <init> : (Ljava/lang/String;)V
    //   50335: aload #12
    //   50337: invokevirtual getName : ()Ljava/lang/String;
    //   50340: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   50343: ldc_w '.zip'
    //   50346: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   50349: invokevirtual toString : ()Ljava/lang/String;
    //   50352: invokespecial <init> : (Ljava/lang/String;)V
    //   50355: astore #12
    //   50357: goto_w -> 50395
    //   50362: aload_0
    //   50363: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50366: new java/lang/StringBuffer
    //   50369: dup
    //   50370: aload_0
    //   50371: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50374: invokevirtual pwd : ()Ljava/lang/String;
    //   50377: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   50380: invokespecial <init> : (Ljava/lang/String;)V
    //   50383: ldc_w '.zip'
    //   50386: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   50389: invokevirtual toString : ()Ljava/lang/String;
    //   50392: invokevirtual cd : (Ljava/lang/String;)V
    //   50395: iload #13
    //   50397: ifne -> 50405
    //   50400: goto_w -> 51100
    //   50405: aload #9
    //   50407: ldc_w 'downloadRevision'
    //   50410: ldc ''
    //   50412: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   50415: ldc ''
    //   50417: invokevirtual equals : (Ljava/lang/Object;)Z
    //   50420: ifeq -> 50428
    //   50423: goto_w -> 51095
    //   50428: ldc 'enterprise_level'
    //   50430: invokestatic siIG : (Ljava/lang/String;)I
    //   50433: ifgt -> 50441
    //   50436: goto_w -> 51095
    //   50441: aconst_null
    //   50442: astore #14
    //   50444: aload #9
    //   50446: ldc_w 'downloadRevision'
    //   50449: ldc ''
    //   50451: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   50454: invokestatic parseInt : (Ljava/lang/String;)I
    //   50457: istore #15
    //   50459: goto_w -> 51057
    //   50464: aload #11
    //   50466: ldc_w 'privs'
    //   50469: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   50472: astore #16
    //   50474: aload #16
    //   50476: ldc_w '(sync'
    //   50479: invokevirtual indexOf : (Ljava/lang/String;)I
    //   50482: ifge -> 50490
    //   50485: goto_w -> 51013
    //   50490: aload_0
    //   50491: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50494: invokevirtual pwd : ()Ljava/lang/String;
    //   50497: astore #17
    //   50499: aload #17
    //   50501: aload_0
    //   50502: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50505: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   50508: ldc_w 'root_dir'
    //   50511: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   50514: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   50517: ifne -> 50525
    //   50520: goto_w -> 50550
    //   50525: aload #17
    //   50527: aload_0
    //   50528: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50531: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   50534: ldc_w 'root_dir'
    //   50537: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   50540: invokevirtual length : ()I
    //   50543: iconst_1
    //   50544: isub
    //   50545: invokevirtual substring : (I)Ljava/lang/String;
    //   50548: astore #17
    //   50550: getstatic com/crushftp/client/Common.dmz_mode : Z
    //   50553: ifne -> 50561
    //   50556: goto_w -> 50934
    //   50561: aload #17
    //   50563: invokestatic last : (Ljava/lang/String;)Ljava/lang/String;
    //   50566: astore #18
    //   50568: aload_0
    //   50569: ldc_w 'HTTP/1.1 200 OK'
    //   50572: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   50575: bipush #30
    //   50577: istore #19
    //   50579: aload_0
    //   50580: new java/lang/StringBuffer
    //   50583: dup
    //   50584: ldc_w 'Cache-Control: post-check='
    //   50587: invokespecial <init> : (Ljava/lang/String;)V
    //   50590: iload #19
    //   50592: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   50595: ldc_w ',pre-check='
    //   50598: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   50601: iload #19
    //   50603: bipush #10
    //   50605: imul
    //   50606: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   50609: invokevirtual toString : ()Ljava/lang/String;
    //   50612: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   50615: aload_0
    //   50616: ldc_w 'Content-Type: application/binary'
    //   50619: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   50622: aload_0
    //   50623: new java/lang/StringBuffer
    //   50626: dup
    //   50627: ldc_w 'Content-Disposition: attachment; filename="'
    //   50630: invokespecial <init> : (Ljava/lang/String;)V
    //   50633: aload_0
    //   50634: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50637: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   50640: ldc_w 'header_user-agent'
    //   50643: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   50646: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   50649: ldc_w 'MSIE'
    //   50652: invokevirtual indexOf : (Ljava/lang/String;)I
    //   50655: iflt -> 50663
    //   50658: goto_w -> 50693
    //   50663: aload_0
    //   50664: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50667: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   50670: ldc_w 'header_user-agent'
    //   50673: invokevirtual uiSG : (Ljava/lang/String;)Ljava/lang/String;
    //   50676: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   50679: ldc_w 'TRIDENT'
    //   50682: invokevirtual indexOf : (Ljava/lang/String;)I
    //   50685: ifge -> 50693
    //   50688: goto_w -> 50703
    //   50693: aload #18
    //   50695: invokestatic url_encode : (Ljava/lang/String;)Ljava/lang/String;
    //   50698: goto_w -> 50705
    //   50703: aload #18
    //   50705: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   50708: ldc_w '"'
    //   50711: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   50714: invokevirtual toString : ()Ljava/lang/String;
    //   50717: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   50720: aload_0
    //   50721: ldc_w 'X-UA-Compatible: chrome=1'
    //   50724: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   50727: aload_0
    //   50728: ldc_w 'Connection: close'
    //   50731: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   50734: aload_0
    //   50735: ldc ''
    //   50737: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   50740: aload_0
    //   50741: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50744: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   50747: getfield uVFS : Lcrushftp/server/VFS;
    //   50750: aload #11
    //   50752: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   50755: astore #20
    //   50757: aload #20
    //   50759: checkcast com/crushftp/client/HTTPClient
    //   50762: aload #17
    //   50764: iload #15
    //   50766: invokevirtual downloadRev : (Ljava/lang/String;I)Ljava/io/InputStream;
    //   50769: astore #21
    //   50771: ldc_w 32768
    //   50774: newarray byte
    //   50776: astore #22
    //   50778: iconst_0
    //   50779: istore #23
    //   50781: goto_w -> 50830
    //   50786: aload #21
    //   50788: aload #22
    //   50790: invokevirtual read : ([B)I
    //   50793: istore #23
    //   50795: iload #23
    //   50797: ifgt -> 50805
    //   50800: goto_w -> 50830
    //   50805: aload_0
    //   50806: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50809: getfield original_os : Ljava/io/OutputStream;
    //   50812: aload #22
    //   50814: iconst_0
    //   50815: iload #23
    //   50817: invokevirtual write : ([BII)V
    //   50820: aload_0
    //   50821: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50824: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   50827: invokevirtual active_transfer : ()V
    //   50830: iload #23
    //   50832: iflt -> 50840
    //   50835: goto_w -> 50786
    //   50840: aload_0
    //   50841: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50844: getfield original_os : Ljava/io/OutputStream;
    //   50847: invokevirtual flush : ()V
    //   50850: goto_w -> 50884
    //   50855: astore #25
    //   50857: jsr_w -> 50865
    //   50862: aload #25
    //   50864: athrow
    //   50865: astore #24
    //   50867: aload #21
    //   50869: invokevirtual close : ()V
    //   50872: aload_0
    //   50873: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50876: getfield original_os : Ljava/io/OutputStream;
    //   50879: invokevirtual close : ()V
    //   50882: ret #24
    //   50884: jsr_w -> 50865
    //   50889: goto_w -> 50911
    //   50894: astore #21
    //   50896: ldc_w 'HTTP_SERVER'
    //   50899: iconst_1
    //   50900: aload #21
    //   50902: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   50905: pop
    //   50906: goto_w -> 50911
    //   50911: aload #20
    //   50913: invokevirtual close : ()V
    //   50916: aload_0
    //   50917: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   50920: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   50923: getfield uVFS : Lcrushftp/server/VFS;
    //   50926: aload #20
    //   50928: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   50931: pop
    //   50932: iconst_1
    //   50933: ireturn
    //   50934: aload #16
    //   50936: ldc_w 'revisionsPath'
    //   50939: invokestatic parseSyncPart : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   50942: astore #18
    //   50944: aload #18
    //   50946: ldc ''
    //   50948: invokevirtual equals : (Ljava/lang/Object;)Z
    //   50951: ifeq -> 50959
    //   50954: goto_w -> 51013
    //   50959: new com/crushftp/client/VRL
    //   50962: dup
    //   50963: new java/lang/StringBuffer
    //   50966: dup
    //   50967: aload #18
    //   50969: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   50972: invokespecial <init> : (Ljava/lang/String;)V
    //   50975: aload #17
    //   50977: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   50980: ldc_w '/'
    //   50983: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   50986: iload #15
    //   50988: invokevirtual append : (I)Ljava/lang/StringBuffer;
    //   50991: ldc_w '/'
    //   50994: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   50997: aload #12
    //   50999: invokevirtual getName : ()Ljava/lang/String;
    //   51002: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   51005: invokevirtual toString : ()Ljava/lang/String;
    //   51008: invokespecial <init> : (Ljava/lang/String;)V
    //   51011: astore #14
    //   51013: aload #14
    //   51015: ifnonnull -> 51023
    //   51018: goto_w -> 51051
    //   51023: new com/crushftp/client/File_S
    //   51026: dup
    //   51027: aload #14
    //   51029: invokevirtual getPath : ()Ljava/lang/String;
    //   51032: invokespecial <init> : (Ljava/lang/String;)V
    //   51035: invokevirtual exists : ()Z
    //   51038: ifne -> 51046
    //   51041: goto_w -> 51051
    //   51046: goto_w -> 51067
    //   51051: aconst_null
    //   51052: astore #14
    //   51054: iinc #15, -1
    //   51057: iload #15
    //   51059: iflt -> 51067
    //   51062: goto_w -> 50464
    //   51067: aload #14
    //   51069: ifnonnull -> 51077
    //   51072: goto_w -> 51095
    //   51077: aload #14
    //   51079: astore #12
    //   51081: aload #11
    //   51083: ldc_w 'url'
    //   51086: aload #14
    //   51088: invokevirtual toString : ()Ljava/lang/String;
    //   51091: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   51094: pop
    //   51095: goto_w -> 51355
    //   51100: aload_0
    //   51101: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51104: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   51107: aload_0
    //   51108: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51111: invokevirtual pwd : ()Ljava/lang/String;
    //   51114: invokestatic all_but_last : (Ljava/lang/String;)Ljava/lang/String;
    //   51117: ldc_w 'RETR'
    //   51120: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   51123: ifne -> 51131
    //   51126: goto_w -> 51199
    //   51131: ldc_w 'D'
    //   51134: aload_0
    //   51135: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51138: invokevirtual pwd : ()Ljava/lang/String;
    //   51141: invokestatic last : (Ljava/lang/String;)Ljava/lang/String;
    //   51144: new java/lang/StringBuffer
    //   51147: dup
    //   51148: ldc_w 'filename_filters_str'
    //   51151: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   51154: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   51157: invokespecial <init> : (Ljava/lang/String;)V
    //   51160: ldc_w '\\r\\n'
    //   51163: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   51166: aload_0
    //   51167: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51170: ldc_w 'file_filter'
    //   51173: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   51176: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   51179: invokevirtual toString : ()Ljava/lang/String;
    //   51182: invokestatic filter_check : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   51185: ifne -> 51193
    //   51188: goto_w -> 51199
    //   51193: iconst_1
    //   51194: goto_w -> 51200
    //   51199: iconst_0
    //   51200: istore #14
    //   51202: aload_0
    //   51203: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51206: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   51209: aload_0
    //   51210: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51213: invokevirtual pwd : ()Ljava/lang/String;
    //   51216: ldc_w 'RETR'
    //   51219: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   51222: ifne -> 51230
    //   51225: goto_w -> 51298
    //   51230: ldc_w 'D'
    //   51233: aload_0
    //   51234: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51237: invokevirtual pwd : ()Ljava/lang/String;
    //   51240: invokestatic last : (Ljava/lang/String;)Ljava/lang/String;
    //   51243: new java/lang/StringBuffer
    //   51246: dup
    //   51247: ldc_w 'filename_filters_str'
    //   51250: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   51253: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   51256: invokespecial <init> : (Ljava/lang/String;)V
    //   51259: ldc_w '\\r\\n'
    //   51262: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   51265: aload_0
    //   51266: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51269: ldc_w 'file_filter'
    //   51272: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   51275: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   51278: invokevirtual toString : ()Ljava/lang/String;
    //   51281: invokestatic filter_check : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   51284: ifne -> 51292
    //   51287: goto_w -> 51298
    //   51292: iconst_1
    //   51293: goto_w -> 51299
    //   51298: iconst_0
    //   51299: istore #15
    //   51301: iload #14
    //   51303: ifeq -> 51311
    //   51306: goto_w -> 51321
    //   51311: iload #15
    //   51313: ifne -> 51321
    //   51316: goto_w -> 51333
    //   51321: aload_0
    //   51322: ldc_w 'HTTP/1.1 404 Not Found'
    //   51325: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   51328: goto_w -> 51340
    //   51333: aload_0
    //   51334: ldc_w 'HTTP/1.1 403 Access Denied.'
    //   51337: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   51340: aload_0
    //   51341: ldc_w 'Content-Length: 0'
    //   51344: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   51347: aload_0
    //   51348: ldc ''
    //   51350: invokevirtual write_command_http : (Ljava/lang/String;)V
    //   51353: iconst_1
    //   51354: ireturn
    //   51355: aload_1
    //   51356: ldc_w 'transfer_type'
    //   51359: ldc ''
    //   51361: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   51364: ldc_w 'download'
    //   51367: invokevirtual equals : (Ljava/lang/Object;)Z
    //   51370: ifne -> 51378
    //   51373: goto_w -> 51657
    //   51378: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   51381: astore #14
    //   51383: new java/util/Properties
    //   51386: dup
    //   51387: invokespecial <init> : ()V
    //   51390: astore #15
    //   51392: aload #15
    //   51394: ldc_w 'transfer_path'
    //   51397: aload #10
    //   51399: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   51402: pop
    //   51403: aload #15
    //   51405: ldc_w 'transfer_id'
    //   51408: aload_1
    //   51409: ldc_w 'download_id'
    //   51412: bipush #6
    //   51414: invokestatic makeBoundary : (I)Ljava/lang/String;
    //   51417: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   51420: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   51423: pop
    //   51424: aload #15
    //   51426: ldc_w 'start_resume_loc'
    //   51429: aload_1
    //   51430: ldc_w 'start_resume_loc'
    //   51433: ldc_w '0'
    //   51436: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   51439: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   51442: pop
    //   51443: aload #15
    //   51445: ldc_w 'metaInfo'
    //   51448: aload #9
    //   51450: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   51453: pop
    //   51454: aload_0
    //   51455: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51458: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   51461: getfield uVFS : Lcrushftp/server/VFS;
    //   51464: aload #11
    //   51466: invokevirtual getClient : (Ljava/util/Properties;)Lcom/crushftp/client/GenericClient;
    //   51469: astore #16
    //   51471: aconst_null
    //   51472: astore #17
    //   51474: aload #16
    //   51476: aload #12
    //   51478: invokevirtual getPath : ()Ljava/lang/String;
    //   51481: invokevirtual stat : (Ljava/lang/String;)Ljava/util/Properties;
    //   51484: astore #17
    //   51486: goto_w -> 51522
    //   51491: astore #19
    //   51493: jsr_w -> 51501
    //   51498: aload #19
    //   51500: athrow
    //   51501: astore #18
    //   51503: aload_0
    //   51504: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51507: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   51510: getfield uVFS : Lcrushftp/server/VFS;
    //   51513: aload #16
    //   51515: invokevirtual releaseClient : (Lcom/crushftp/client/GenericClient;)Lcom/crushftp/client/GenericClient;
    //   51518: astore #16
    //   51520: ret #18
    //   51522: jsr_w -> 51501
    //   51527: aload #15
    //   51529: ldc_w 'transfer_size'
    //   51532: aload #17
    //   51534: ldc_w 'size'
    //   51537: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   51540: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   51543: pop
    //   51544: aload_0
    //   51545: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51548: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   51551: ldc_w 'html5_downloads'
    //   51554: invokevirtual get : (Ljava/lang/String;)Ljava/lang/Object;
    //   51557: checkcast java/util/Properties
    //   51560: astore #18
    //   51562: aload #18
    //   51564: ifnull -> 51572
    //   51567: goto_w -> 51596
    //   51572: new java/util/Properties
    //   51575: dup
    //   51576: invokespecial <init> : ()V
    //   51579: astore #18
    //   51581: aload_0
    //   51582: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51585: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   51588: ldc_w 'html5_downloads'
    //   51591: aload #18
    //   51593: invokevirtual put : (Ljava/lang/String;Ljava/lang/Object;)V
    //   51596: new crushftp/server/ServerSessionAJAX$3
    //   51599: dup
    //   51600: aload_0
    //   51601: aload #15
    //   51603: invokespecial <init> : (Lcrushftp/server/ServerSessionAJAX;Ljava/util/Properties;)V
    //   51606: invokestatic startWorker : (Ljava/lang/Runnable;)Z
    //   51609: pop
    //   51610: new java/lang/StringBuffer
    //   51613: dup
    //   51614: aload #14
    //   51616: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   51619: invokespecial <init> : (Ljava/lang/String;)V
    //   51622: ldc_w '<commandResult><response>'
    //   51625: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   51628: aload #15
    //   51630: ldc_w 'transfer_id'
    //   51633: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   51636: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   51639: ldc_w '</response></commandResult>'
    //   51642: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   51645: invokevirtual toString : ()Ljava/lang/String;
    //   51648: astore #14
    //   51650: aload_0
    //   51651: aload #14
    //   51653: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   51656: ireturn
    //   51657: aload_0
    //   51658: aload #12
    //   51660: aload #11
    //   51662: aload #11
    //   51664: ldc_w 'name'
    //   51667: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   51670: aload_2
    //   51671: aload_1
    //   51672: ldc_w 'range'
    //   51675: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   51678: aload_1
    //   51679: ldc_w 'mimeType'
    //   51682: ldc ''
    //   51684: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   51687: invokevirtual downloadItem : (Lcom/crushftp/client/VRL;Ljava/util/Properties;Ljava/lang/String;Ljava/util/Vector;ZLjava/lang/String;)Ljava/lang/String;
    //   51690: pop
    //   51691: iconst_1
    //   51692: ireturn
    //   51693: aload #5
    //   51695: ldc_w 'openFile'
    //   51698: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   51701: ifne -> 51709
    //   51704: goto_w -> 52751
    //   51709: aload_1
    //   51710: ldc_w 'transfer_type'
    //   51713: ldc_w 'upload'
    //   51716: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   51719: ldc_w 'upload'
    //   51722: invokevirtual equals : (Ljava/lang/Object;)Z
    //   51725: ifne -> 51733
    //   51728: goto_w -> 52751
    //   51733: aload_0
    //   51734: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51737: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   51740: ldc_w 'blockUploads'
    //   51743: ldc 'false'
    //   51745: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   51748: ldc 'true'
    //   51750: invokevirtual equals : (Ljava/lang/Object;)Z
    //   51753: ifne -> 51761
    //   51756: goto_w -> 51782
    //   51761: ldc2_w 5000
    //   51764: invokestatic sleep : (J)V
    //   51767: aload_0
    //   51768: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51771: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   51774: ldc_w 'blockUploads'
    //   51777: ldc 'false'
    //   51779: invokevirtual put : (Ljava/lang/String;Ljava/lang/Object;)V
    //   51782: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   51785: astore #8
    //   51787: aload_0
    //   51788: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51791: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   51794: aload_1
    //   51795: ldc_w 'upload_path'
    //   51798: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   51801: invokevirtual getStandardizedDir : (Ljava/lang/String;)Ljava/lang/String;
    //   51804: astore #9
    //   51806: aload_0
    //   51807: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51810: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   51813: getfield uVFS : Lcrushftp/server/VFS;
    //   51816: aload #9
    //   51818: invokevirtual get_item : (Ljava/lang/String;)Ljava/util/Properties;
    //   51821: astore #10
    //   51823: aload_0
    //   51824: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51827: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   51830: aload #9
    //   51832: ldc_w 'STOR'
    //   51835: invokevirtual check_access_privs : (Ljava/lang/String;Ljava/lang/String;)Z
    //   51838: ifne -> 51846
    //   51841: goto_w -> 52685
    //   51846: ldc_w 'U'
    //   51849: aload #9
    //   51851: invokestatic last : (Ljava/lang/String;)Ljava/lang/String;
    //   51854: new java/lang/StringBuffer
    //   51857: dup
    //   51858: ldc_w 'filename_filters_str'
    //   51861: invokestatic SG : (Ljava/lang/String;)Ljava/lang/String;
    //   51864: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   51867: invokespecial <init> : (Ljava/lang/String;)V
    //   51870: ldc_w '\\r\\n'
    //   51873: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   51876: aload_0
    //   51877: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   51880: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   51883: ldc_w 'file_filter'
    //   51886: invokevirtual SG : (Ljava/lang/String;)Ljava/lang/String;
    //   51889: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   51892: invokevirtual toString : ()Ljava/lang/String;
    //   51895: invokestatic filter_check : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    //   51898: ifne -> 51906
    //   51901: goto_w -> 52685
    //   51906: aload #10
    //   51908: ifnonnull -> 51916
    //   51911: goto_w -> 51961
    //   51916: aload #10
    //   51918: ldc_w 'type'
    //   51921: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   51924: ldc_w 'file'
    //   51927: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   51930: ifeq -> 51938
    //   51933: goto_w -> 51961
    //   51938: aload #10
    //   51940: ldc_w 'simple'
    //   51943: ldc ''
    //   51945: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   51948: ldc 'true'
    //   51950: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   51953: ifne -> 51961
    //   51956: goto_w -> 52685
    //   51961: new java/util/Properties
    //   51964: dup
    //   51965: invokespecial <init> : ()V
    //   51968: astore #11
    //   51970: aload #11
    //   51972: ldc_w 'transfer_path'
    //   51975: aload_1
    //   51976: ldc_w 'upload_path'
    //   51979: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   51982: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   51985: pop
    //   51986: aload #11
    //   51988: ldc_w 'transfer_size'
    //   51991: aload_1
    //   51992: ldc_w 'upload_size'
    //   51995: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   51998: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   52001: pop
    //   52002: aload_0
    //   52003: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   52006: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   52009: getfield user_info : Ljava/util/Properties;
    //   52012: ldc_w 'file_length'
    //   52015: aload_1
    //   52016: ldc_w 'upload_size'
    //   52019: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   52022: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   52025: pop
    //   52026: aload #11
    //   52028: ldc_w 'transfer_id'
    //   52031: aload_1
    //   52032: ldc_w 'upload_id'
    //   52035: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   52038: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   52041: pop
    //   52042: aload #11
    //   52044: ldc_w 'start_resume_loc'
    //   52047: aload_1
    //   52048: ldc_w 'start_resume_loc'
    //   52051: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   52054: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   52057: pop
    //   52058: new java/util/Properties
    //   52061: dup
    //   52062: invokespecial <init> : ()V
    //   52065: astore #12
    //   52067: aload_1
    //   52068: invokevirtual keys : ()Ljava/util/Enumeration;
    //   52071: astore #13
    //   52073: goto_w -> 52323
    //   52078: new java/lang/StringBuffer
    //   52081: dup
    //   52082: invokespecial <init> : ()V
    //   52085: aload #13
    //   52087: invokeinterface nextElement : ()Ljava/lang/Object;
    //   52092: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   52095: invokevirtual toString : ()Ljava/lang/String;
    //   52098: astore #14
    //   52100: aload_1
    //   52101: aload #14
    //   52103: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   52106: astore #15
    //   52108: aload #14
    //   52110: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   52113: ldc_w 'META_'
    //   52116: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   52119: ifne -> 52127
    //   52122: goto_w -> 52323
    //   52127: aload #14
    //   52129: iconst_5
    //   52130: invokevirtual substring : (I)Ljava/lang/String;
    //   52133: astore #14
    //   52135: aload #12
    //   52137: aload #14
    //   52139: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   52142: ifne -> 52150
    //   52145: goto_w -> 52194
    //   52150: aload #12
    //   52152: aload #14
    //   52154: new java/lang/StringBuffer
    //   52157: dup
    //   52158: aload #12
    //   52160: aload #14
    //   52162: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   52165: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   52168: invokespecial <init> : (Ljava/lang/String;)V
    //   52171: ldc_w ','
    //   52174: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52177: aload #15
    //   52179: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52182: invokevirtual toString : ()Ljava/lang/String;
    //   52185: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   52188: pop
    //   52189: goto_w -> 52204
    //   52194: aload #12
    //   52196: aload #14
    //   52198: aload #15
    //   52200: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   52203: pop
    //   52204: aload #14
    //   52206: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   52209: ldc_w 'GLOBAL_'
    //   52212: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   52215: ifne -> 52223
    //   52218: goto_w -> 52286
    //   52223: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   52226: ldc_w 'global_variables'
    //   52229: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   52232: ifnull -> 52240
    //   52235: goto_w -> 52257
    //   52240: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   52243: ldc_w 'global_variables'
    //   52246: new java/util/Properties
    //   52249: dup
    //   52250: invokespecial <init> : ()V
    //   52253: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   52256: pop
    //   52257: getstatic com/crushftp/client/Common.System2 : Ljava/util/Properties;
    //   52260: ldc_w 'global_variables'
    //   52263: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   52266: checkcast java/util/Properties
    //   52269: astore #16
    //   52271: aload #16
    //   52273: aload #14
    //   52275: aload #15
    //   52277: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   52280: pop
    //   52281: goto_w -> 52323
    //   52286: aload #14
    //   52288: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   52291: ldc_w 'USER_INFO_'
    //   52294: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   52297: ifne -> 52305
    //   52300: goto_w -> 52323
    //   52305: aload_0
    //   52306: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   52309: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   52312: getfield user_info : Ljava/util/Properties;
    //   52315: aload #14
    //   52317: aload #15
    //   52319: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   52322: pop
    //   52323: aload #13
    //   52325: invokeinterface hasMoreElements : ()Z
    //   52330: ifeq -> 52338
    //   52333: goto_w -> 52078
    //   52338: aload_0
    //   52339: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   52342: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   52345: ldc_w 'last_metaInfo'
    //   52348: aload #12
    //   52350: invokevirtual put : (Ljava/lang/String;Ljava/lang/Object;)V
    //   52353: aload #11
    //   52355: ldc_w 'metaInfo'
    //   52358: aload #12
    //   52360: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   52363: pop
    //   52364: aload_0
    //   52365: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   52368: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   52371: ldc_w 'html5_uploads'
    //   52374: invokevirtual get : (Ljava/lang/String;)Ljava/lang/Object;
    //   52377: checkcast java/util/Properties
    //   52380: astore #14
    //   52382: aload #14
    //   52384: ifnull -> 52392
    //   52387: goto_w -> 52416
    //   52392: new java/util/Properties
    //   52395: dup
    //   52396: invokespecial <init> : ()V
    //   52399: astore #14
    //   52401: aload_0
    //   52402: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   52405: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   52408: ldc_w 'html5_uploads'
    //   52411: aload #14
    //   52413: invokevirtual put : (Ljava/lang/String;Ljava/lang/Object;)V
    //   52416: new crushftp/server/ServerSessionAJAX$4
    //   52419: dup
    //   52420: aload_0
    //   52421: aload #11
    //   52423: invokespecial <init> : (Lcrushftp/server/ServerSessionAJAX;Ljava/util/Properties;)V
    //   52426: invokestatic startWorker : (Ljava/lang/Runnable;)Z
    //   52429: pop
    //   52430: iconst_0
    //   52431: istore #15
    //   52433: goto_w -> 52564
    //   52438: aload #11
    //   52440: ldc_w 'stor'
    //   52443: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   52446: ifne -> 52454
    //   52449: goto_w -> 52558
    //   52454: aload #11
    //   52456: ldc_w 'stor'
    //   52459: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   52462: checkcast crushftp/server/STOR_handler
    //   52465: getfield active2 : Ljava/util/Properties;
    //   52468: ldc_w 'streamOpenStatus'
    //   52471: ldc ''
    //   52473: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   52476: ldc_w 'CLOSED'
    //   52479: invokevirtual equals : (Ljava/lang/Object;)Z
    //   52482: ifne -> 52490
    //   52485: goto_w -> 52558
    //   52490: new java/lang/StringBuffer
    //   52493: dup
    //   52494: aload #8
    //   52496: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   52499: invokespecial <init> : (Ljava/lang/String;)V
    //   52502: ldc_w '<commandResult><response>'
    //   52505: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52508: ldc_w 'ERROR'
    //   52511: invokestatic G : (Ljava/lang/String;)Ljava/lang/String;
    //   52514: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52517: ldc_w ': '
    //   52520: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52523: aload #11
    //   52525: ldc_w 'stor'
    //   52528: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   52531: checkcast crushftp/server/STOR_handler
    //   52534: getfield stop_message : Ljava/lang/String;
    //   52537: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52540: ldc_w '</response></commandResult>'
    //   52543: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52546: invokevirtual toString : ()Ljava/lang/String;
    //   52549: astore #8
    //   52551: aload_0
    //   52552: aload #8
    //   52554: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   52557: ireturn
    //   52558: ldc2_w 100
    //   52561: invokestatic sleep : (J)V
    //   52564: iload #15
    //   52566: iinc #15, 1
    //   52569: sipush #600
    //   52572: if_icmplt -> 52580
    //   52575: goto_w -> 52596
    //   52580: aload #11
    //   52582: ldc_w 'stor'
    //   52585: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   52588: ifne -> 52596
    //   52591: goto_w -> 52438
    //   52596: aload #11
    //   52598: ldc_w 'stor'
    //   52601: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   52604: checkcast crushftp/server/STOR_handler
    //   52607: getfield active2 : Ljava/util/Properties;
    //   52610: ldc_w 'streamOpenStatus'
    //   52613: ldc ''
    //   52615: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   52618: ldc_w 'OPEN'
    //   52621: invokevirtual equals : (Ljava/lang/Object;)Z
    //   52624: ifne -> 52632
    //   52627: goto_w -> 52438
    //   52632: aload #11
    //   52634: ldc_w 'stor'
    //   52637: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   52640: pop
    //   52641: new java/lang/StringBuffer
    //   52644: dup
    //   52645: aload #8
    //   52647: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   52650: invokespecial <init> : (Ljava/lang/String;)V
    //   52653: ldc_w '<commandResult><response>'
    //   52656: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52659: aload_1
    //   52660: ldc_w 'upload_id'
    //   52663: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   52666: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52669: ldc_w '</response></commandResult>'
    //   52672: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52675: invokevirtual toString : ()Ljava/lang/String;
    //   52678: astore #8
    //   52680: goto_w -> 52738
    //   52685: new java/lang/StringBuffer
    //   52688: dup
    //   52689: aload #8
    //   52691: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   52694: invokespecial <init> : (Ljava/lang/String;)V
    //   52697: ldc_w '<commandResult><response>'
    //   52700: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52703: ldc_w 'ERROR'
    //   52706: invokestatic G : (Ljava/lang/String;)Ljava/lang/String;
    //   52709: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52712: ldc_w ': '
    //   52715: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52718: ldc_w 'Access denied. (You do not have permission or the file extension is not allowed.)'
    //   52721: invokestatic G : (Ljava/lang/String;)Ljava/lang/String;
    //   52724: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52727: ldc_w '</response></commandResult>'
    //   52730: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52733: invokevirtual toString : ()Ljava/lang/String;
    //   52736: astore #8
    //   52738: ldc2_w 200
    //   52741: invokestatic sleep : (J)V
    //   52744: aload_0
    //   52745: aload #8
    //   52747: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   52750: ireturn
    //   52751: aload #5
    //   52753: ldc_w 'closeFile'
    //   52756: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   52759: ifne -> 52767
    //   52762: goto_w -> 53280
    //   52767: aload_1
    //   52768: ldc_w 'transfer_type'
    //   52771: ldc_w 'upload'
    //   52774: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   52777: ldc_w 'upload'
    //   52780: invokevirtual equals : (Ljava/lang/Object;)Z
    //   52783: ifne -> 52791
    //   52786: goto_w -> 52799
    //   52791: ldc_w 'upload'
    //   52794: goto_w -> 52802
    //   52799: ldc_w 'download'
    //   52802: astore #8
    //   52804: aload_0
    //   52805: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   52808: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   52811: new java/lang/StringBuffer
    //   52814: dup
    //   52815: ldc_w 'html5_'
    //   52818: invokespecial <init> : (Ljava/lang/String;)V
    //   52821: aload #8
    //   52823: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52826: ldc_w 's'
    //   52829: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52832: invokevirtual toString : ()Ljava/lang/String;
    //   52835: invokevirtual get : (Ljava/lang/String;)Ljava/lang/Object;
    //   52838: checkcast java/util/Properties
    //   52841: astore #9
    //   52843: aload #9
    //   52845: aload_1
    //   52846: new java/lang/StringBuffer
    //   52849: dup
    //   52850: aload #8
    //   52852: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   52855: invokespecial <init> : (Ljava/lang/String;)V
    //   52858: ldc_w '_id'
    //   52861: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   52864: invokevirtual toString : ()Ljava/lang/String;
    //   52867: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   52870: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   52873: checkcast java/util/Properties
    //   52876: astore #10
    //   52878: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   52881: astore #11
    //   52883: aload #10
    //   52885: ifnonnull -> 52893
    //   52888: goto_w -> 53056
    //   52893: aload_1
    //   52894: ldc_w 'transfer_type'
    //   52897: ldc_w 'upload'
    //   52900: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   52903: ldc_w 'upload'
    //   52906: invokevirtual equals : (Ljava/lang/Object;)Z
    //   52909: ifne -> 52917
    //   52912: goto_w -> 53056
    //   52917: aload #10
    //   52919: ldc_w 'total_chunks'
    //   52922: aload_1
    //   52923: ldc_w 'total_chunks'
    //   52926: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   52929: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   52932: pop
    //   52933: invokestatic currentTimeMillis : ()J
    //   52936: lstore #12
    //   52938: iconst_0
    //   52939: istore #14
    //   52941: goto_w -> 52974
    //   52946: iload #14
    //   52948: bipush #100
    //   52950: if_icmplt -> 52958
    //   52953: goto_w -> 52965
    //   52958: iload #14
    //   52960: goto_w -> 52967
    //   52965: bipush #100
    //   52967: i2l
    //   52968: invokestatic sleep : (J)V
    //   52971: iinc #14, 1
    //   52974: invokestatic currentTimeMillis : ()J
    //   52977: lload #12
    //   52979: lsub
    //   52980: ldc2_w 60000
    //   52983: lcmp
    //   52984: iflt -> 52992
    //   52987: goto_w -> 53008
    //   52992: aload #10
    //   52994: ldc_w 'status'
    //   52997: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   53000: ifne -> 53008
    //   53003: goto_w -> 52946
    //   53008: new java/lang/StringBuffer
    //   53011: dup
    //   53012: aload #11
    //   53014: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   53017: invokespecial <init> : (Ljava/lang/String;)V
    //   53020: ldc_w '<commandResult><response>'
    //   53023: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53026: aload #10
    //   53028: ldc_w 'status'
    //   53031: ldc_w 'Decompressing...'
    //   53034: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   53037: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53040: ldc_w '</response></commandResult>'
    //   53043: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53046: invokevirtual toString : ()Ljava/lang/String;
    //   53049: astore #11
    //   53051: goto_w -> 53273
    //   53056: aload #10
    //   53058: ifnonnull -> 53066
    //   53061: goto_w -> 53177
    //   53066: aload_1
    //   53067: ldc_w 'transfer_type'
    //   53070: ldc_w 'upload'
    //   53073: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   53076: ldc_w 'download'
    //   53079: invokevirtual equals : (Ljava/lang/Object;)Z
    //   53082: ifne -> 53090
    //   53085: goto_w -> 53177
    //   53090: new java/lang/StringBuffer
    //   53093: dup
    //   53094: aload #11
    //   53096: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   53099: invokespecial <init> : (Ljava/lang/String;)V
    //   53102: ldc_w '<commandResult><response>'
    //   53105: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53108: aload #10
    //   53110: ldc_w 'status'
    //   53113: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   53116: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53119: ldc_w '</response><total_chunks>'
    //   53122: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53125: aload #10
    //   53127: ldc_w 'total_chunks'
    //   53130: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   53133: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53136: ldc_w '</total_chunks></commandResult>'
    //   53139: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53142: invokevirtual toString : ()Ljava/lang/String;
    //   53145: astore #11
    //   53147: aload #10
    //   53149: ldc_w 'blockDownloads'
    //   53152: ldc 'true'
    //   53154: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   53157: pop
    //   53158: aload #9
    //   53160: aload #10
    //   53162: ldc_w 'transfer_id'
    //   53165: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   53168: invokevirtual remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   53171: pop
    //   53172: goto_w -> 53273
    //   53177: aload #10
    //   53179: ifnull -> 53187
    //   53182: goto_w -> 53239
    //   53187: aload_1
    //   53188: ldc_w 'transfer_type'
    //   53191: ldc_w 'upload'
    //   53194: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   53197: ldc_w 'download'
    //   53200: invokevirtual equals : (Ljava/lang/Object;)Z
    //   53203: ifne -> 53211
    //   53206: goto_w -> 53239
    //   53211: new java/lang/StringBuffer
    //   53214: dup
    //   53215: aload #11
    //   53217: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   53220: invokespecial <init> : (Ljava/lang/String;)V
    //   53223: ldc_w '<commandResult><response>Already closed.</response><total_chunks>-1</total_chunks></commandResult>'
    //   53226: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53229: invokevirtual toString : ()Ljava/lang/String;
    //   53232: astore #11
    //   53234: goto_w -> 53273
    //   53239: new java/lang/StringBuffer
    //   53242: dup
    //   53243: aload #11
    //   53245: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   53248: invokespecial <init> : (Ljava/lang/String;)V
    //   53251: ldc_w '<commandResult><response>ERROR:No such '
    //   53254: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53257: aload #8
    //   53259: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53262: ldc_w ' open.</response></commandResult>'
    //   53265: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53268: invokevirtual toString : ()Ljava/lang/String;
    //   53271: astore #11
    //   53273: aload_0
    //   53274: aload #11
    //   53276: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   53279: ireturn
    //   53280: aload #5
    //   53282: ldc_w 'isOpen'
    //   53285: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   53288: ifne -> 53296
    //   53291: goto_w -> 53578
    //   53296: aload_1
    //   53297: ldc_w 'transfer_type'
    //   53300: ldc 'true'
    //   53302: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   53305: ldc 'true'
    //   53307: invokevirtual equals : (Ljava/lang/Object;)Z
    //   53310: ifne -> 53318
    //   53313: goto_w -> 53326
    //   53318: ldc_w 'upload'
    //   53321: goto_w -> 53329
    //   53326: ldc_w 'download'
    //   53329: astore #8
    //   53331: aload_0
    //   53332: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   53335: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   53338: new java/lang/StringBuffer
    //   53341: dup
    //   53342: ldc_w 'html5_'
    //   53345: invokespecial <init> : (Ljava/lang/String;)V
    //   53348: aload #8
    //   53350: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53353: ldc_w 's'
    //   53356: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53359: invokevirtual toString : ()Ljava/lang/String;
    //   53362: invokevirtual get : (Ljava/lang/String;)Ljava/lang/Object;
    //   53365: checkcast java/util/Properties
    //   53368: astore #9
    //   53370: aconst_null
    //   53371: astore #10
    //   53373: aload #9
    //   53375: ifnonnull -> 53383
    //   53378: goto_w -> 53418
    //   53383: aload #9
    //   53385: aload_1
    //   53386: new java/lang/StringBuffer
    //   53389: dup
    //   53390: aload #8
    //   53392: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   53395: invokespecial <init> : (Ljava/lang/String;)V
    //   53398: ldc_w '_id'
    //   53401: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53404: invokevirtual toString : ()Ljava/lang/String;
    //   53407: invokevirtual getProperty : (Ljava/lang/String;)Ljava/lang/String;
    //   53410: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   53413: checkcast java/util/Properties
    //   53416: astore #10
    //   53418: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   53421: astore #11
    //   53423: aload #10
    //   53425: ifnonnull -> 53433
    //   53428: goto_w -> 53518
    //   53433: aload #10
    //   53435: ldc_w 'status'
    //   53438: ldc ''
    //   53440: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   53443: ldc_w 'ERROR:'
    //   53446: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   53449: ifne -> 53457
    //   53452: goto_w -> 53518
    //   53457: new java/lang/StringBuffer
    //   53460: dup
    //   53461: aload #11
    //   53463: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   53466: invokespecial <init> : (Ljava/lang/String;)V
    //   53469: ldc_w '<commandResult><response>'
    //   53472: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53475: aload #10
    //   53477: ldc_w 'status'
    //   53480: ldc ''
    //   53482: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   53485: bipush #62
    //   53487: bipush #95
    //   53489: invokevirtual replace : (CC)Ljava/lang/String;
    //   53492: bipush #60
    //   53494: bipush #95
    //   53496: invokevirtual replace : (CC)Ljava/lang/String;
    //   53499: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53502: ldc_w '</response></commandResult>'
    //   53505: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53508: invokevirtual toString : ()Ljava/lang/String;
    //   53511: astore #11
    //   53513: goto_w -> 53571
    //   53518: new java/lang/StringBuffer
    //   53521: dup
    //   53522: aload #11
    //   53524: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   53527: invokespecial <init> : (Ljava/lang/String;)V
    //   53530: ldc_w '<commandResult><response>'
    //   53533: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53536: aload #10
    //   53538: ifnonnull -> 53546
    //   53541: goto_w -> 53554
    //   53546: ldc_w 'OPEN'
    //   53549: goto_w -> 53557
    //   53554: ldc_w 'CLOSED'
    //   53557: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53560: ldc_w '</response></commandResult>'
    //   53563: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53566: invokevirtual toString : ()Ljava/lang/String;
    //   53569: astore #11
    //   53571: aload_0
    //   53572: aload #11
    //   53574: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   53577: ireturn
    //   53578: aload #5
    //   53580: ldc_w 'loginDomain1'
    //   53583: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   53586: ifne -> 53594
    //   53589: goto_w -> 53708
    //   53594: invokestatic makeBoundary : ()Ljava/lang/String;
    //   53597: astore #8
    //   53599: ldc_w 'domain_cross_reference'
    //   53602: invokestatic siPG : (Ljava/lang/String;)Ljava/util/Properties;
    //   53605: new java/lang/StringBuffer
    //   53608: dup
    //   53609: ldc_w '0.0.0.0:'
    //   53612: invokespecial <init> : (Ljava/lang/String;)V
    //   53615: aload #8
    //   53617: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53620: invokevirtual toString : ()Ljava/lang/String;
    //   53623: new java/lang/StringBuffer
    //   53626: dup
    //   53627: invokestatic currentTimeMillis : ()J
    //   53630: invokestatic valueOf : (J)Ljava/lang/String;
    //   53633: invokespecial <init> : (Ljava/lang/String;)V
    //   53636: ldc_w ':'
    //   53639: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53642: aload_0
    //   53643: getfield thisSessionHTTP : Lcrushftp/server/ServerSessionHTTP;
    //   53646: getfield thisSession : Lcrushftp/handlers/SessionCrush;
    //   53649: invokevirtual getId : ()Ljava/lang/String;
    //   53652: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53655: invokevirtual toString : ()Ljava/lang/String;
    //   53658: invokevirtual put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   53661: pop
    //   53662: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   53665: astore #9
    //   53667: new java/lang/StringBuffer
    //   53670: dup
    //   53671: aload #9
    //   53673: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   53676: invokespecial <init> : (Ljava/lang/String;)V
    //   53679: ldc_w '<commandResult><response>'
    //   53682: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53685: aload #8
    //   53687: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53690: ldc_w '</response></commandResult>'
    //   53693: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53696: invokevirtual toString : ()Ljava/lang/String;
    //   53699: astore #9
    //   53701: aload_0
    //   53702: aload #9
    //   53704: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   53707: ireturn
    //   53708: aload #5
    //   53710: ldc_w 'letsencrypt'
    //   53713: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   53716: ifne -> 53724
    //   53719: goto_w -> 53956
    //   53724: ldc_w 'v9_beta'
    //   53727: invokestatic BG : (Ljava/lang/String;)Z
    //   53730: ifne -> 53738
    //   53733: goto_w -> 53956
    //   53738: ldc_w 'Success'
    //   53741: astore #8
    //   53743: aload_1
    //   53744: ldc_w 'domains'
    //   53747: ldc ''
    //   53749: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   53752: ldc ''
    //   53754: invokevirtual equals : (Ljava/lang/Object;)Z
    //   53757: ifeq -> 53765
    //   53760: goto_w -> 53809
    //   53765: aload_1
    //   53766: ldc_w 'keystore_path'
    //   53769: ldc ''
    //   53771: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   53774: ldc ''
    //   53776: invokevirtual equals : (Ljava/lang/Object;)Z
    //   53779: ifeq -> 53787
    //   53782: goto_w -> 53809
    //   53787: aload_1
    //   53788: ldc_w 'challenge_path'
    //   53791: ldc ''
    //   53793: invokevirtual getProperty : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   53796: ldc ''
    //   53798: invokevirtual equals : (Ljava/lang/Object;)Z
    //   53801: ifne -> 53809
    //   53804: goto_w -> 53819
    //   53809: ldc_w 'ERROR: Domains, Keystore or Challenge path ... must be filled!'
    //   53812: astore #8
    //   53814: goto_w -> 53910
    //   53819: ldc_w 'LetsEncrypt'
    //   53822: aload_1
    //   53823: ldc ''
    //   53825: invokestatic runPlugin : (Ljava/lang/String;Ljava/util/Properties;Ljava/lang/String;)Ljava/util/Properties;
    //   53828: pop
    //   53829: aload_1
    //   53830: ldc_w 'ERROR'
    //   53833: invokevirtual containsKey : (Ljava/lang/Object;)Z
    //   53836: ifne -> 53844
    //   53839: goto_w -> 53869
    //   53844: new java/lang/StringBuffer
    //   53847: dup
    //   53848: ldc_w 'ERROR: '
    //   53851: invokespecial <init> : (Ljava/lang/String;)V
    //   53854: aload_1
    //   53855: ldc_w 'ERROR'
    //   53858: invokevirtual get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   53861: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   53864: invokevirtual toString : ()Ljava/lang/String;
    //   53867: astore #8
    //   53869: goto_w -> 53910
    //   53874: astore #9
    //   53876: ldc 'SERVER'
    //   53878: iconst_1
    //   53879: aload #9
    //   53881: invokestatic log : (Ljava/lang/String;ILjava/lang/Exception;)Z
    //   53884: pop
    //   53885: new java/lang/StringBuffer
    //   53888: dup
    //   53889: ldc_w 'ERROR: '
    //   53892: invokespecial <init> : (Ljava/lang/String;)V
    //   53895: aload #9
    //   53897: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   53900: invokevirtual toString : ()Ljava/lang/String;
    //   53903: astore #8
    //   53905: goto_w -> 53910
    //   53910: ldc_w '<?xml version="1.0" encoding="UTF-8"?> \\r\\n'
    //   53913: astore #9
    //   53915: new java/lang/StringBuffer
    //   53918: dup
    //   53919: aload #9
    //   53921: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   53924: invokespecial <init> : (Ljava/lang/String;)V
    //   53927: ldc_w '<commandResult><response>'
    //   53930: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53933: aload #8
    //   53935: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53938: ldc_w '</response></commandResult>'
    //   53941: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   53944: invokevirtual toString : ()Ljava/lang/String;
    //   53947: astore #9
    //   53949: aload_0
    //   53950: aload #9
    //   53952: invokevirtual writeResponse : (Ljava/lang/String;)Z
    //   53955: ireturn
    //   53956: iconst_0
    //   53957: ireturn
    // Line number table:
    //   Java source line number -> byte code offset
    //   #844	-> 0
    //   #845	-> 15
    //   #846	-> 26
    //   #848	-> 42
    //   #849	-> 59
    //   #850	-> 83
    //   #851	-> 100
    //   #852	-> 115
    //   #853	-> 160
    //   #857	-> 175
    //   #858	-> 187
    //   #860	-> 223
    //   #861	-> 276
    //   #863	-> 375
    //   #865	-> 407
    //   #866	-> 446
    //   #872	-> 454
    //   #874	-> 470
    //   #875	-> 547
    //   #878	-> 555
    //   #880	-> 571
    //   #881	-> 625
    //   #884	-> 633
    //   #886	-> 649
    //   #887	-> 703
    //   #890	-> 711
    //   #892	-> 727
    //   #893	-> 748
    //   #894	-> 802
    //   #897	-> 810
    //   #899	-> 826
    //   #900	-> 869
    //   #903	-> 877
    //   #905	-> 893
    //   #906	-> 913
    //   #908	-> 940
    //   #909	-> 948
    //   #911	-> 970
    //   #912	-> 979
    //   #914	-> 987
    //   #915	-> 1008
    //   #912	-> 1051
    //   #917	-> 1069
    //   #919	-> 1073
    //   #921	-> 1096
    //   #924	-> 1104
    //   #926	-> 1120
    //   #927	-> 1125
    //   #928	-> 1145
    //   #929	-> 1199
    //   #932	-> 1207
    //   #934	-> 1223
    //   #935	-> 1275
    //   #938	-> 1283
    //   #940	-> 1299
    //   #941	-> 1304
    //   #942	-> 1358
    //   #945	-> 1366
    //   #947	-> 1382
    //   #948	-> 1387
    //   #949	-> 1407
    //   #950	-> 1461
    //   #951	-> 1505
    //   #954	-> 1513
    //   #956	-> 1528
    //   #958	-> 1538
    //   #960	-> 1554
    //   #961	-> 1559
    //   #963	-> 1582
    //   #964	-> 1589
    //   #965	-> 1597
    //   #966	-> 1604
    //   #969	-> 1606
    //   #971	-> 1622
    //   #972	-> 1627
    //   #973	-> 1669
    //   #976	-> 1676
    //   #978	-> 1692
    //   #979	-> 1697
    //   #980	-> 1752
    //   #983	-> 1760
    //   #985	-> 1776
    //   #986	-> 1781
    //   #987	-> 1836
    //   #990	-> 1844
    //   #992	-> 1860
    //   #993	-> 1865
    //   #994	-> 1919
    //   #998	-> 1927
    //   #1000	-> 1943
    //   #1001	-> 1998
    //   #1004	-> 2006
    //   #1007	-> 2022
    //   #1009	-> 2026
    //   #1010	-> 2142
    //   #1012	-> 2208
    //   #1013	-> 2250
    //   #1014	-> 2264
    //   #1015	-> 2276
    //   #1016	-> 2279
    //   #1018	-> 2287
    //   #1019	-> 2299
    //   #1021	-> 2365
    //   #1022	-> 2375
    //   #1016	-> 2380
    //   #1025	-> 2398
    //   #1027	-> 2408
    //   #1029	-> 2421
    //   #1030	-> 2433
    //   #1031	-> 2445
    //   #1032	-> 2457
    //   #1034	-> 2469
    //   #1036	-> 2490
    //   #1037	-> 2511
    //   #1039	-> 2534
    //   #1040	-> 2540
    //   #1044	-> 2545
    //   #1047	-> 2552
    //   #1049	-> 2568
    //   #1050	-> 2583
    //   #1053	-> 2590
    //   #1056	-> 2606
    //   #1058	-> 2610
    //   #1059	-> 2726
    //   #1060	-> 2792
    //   #1062	-> 2854
    //   #1063	-> 2896
    //   #1064	-> 2910
    //   #1065	-> 2922
    //   #1066	-> 2925
    //   #1068	-> 2933
    //   #1069	-> 2945
    //   #1071	-> 3011
    //   #1072	-> 3021
    //   #1066	-> 3026
    //   #1075	-> 3044
    //   #1077	-> 3054
    //   #1079	-> 3077
    //   #1080	-> 3093
    //   #1081	-> 3109
    //   #1082	-> 3125
    //   #1083	-> 3141
    //   #1084	-> 3157
    //   #1085	-> 3173
    //   #1087	-> 3189
    //   #1089	-> 3202
    //   #1090	-> 3214
    //   #1091	-> 3226
    //   #1092	-> 3238
    //   #1094	-> 3250
    //   #1096	-> 3303
    //   #1097	-> 3314
    //   #1098	-> 3363
    //   #1099	-> 3401
    //   #1100	-> 3406
    //   #1102	-> 3429
    //   #1104	-> 3434
    //   #1106	-> 3444
    //   #1108	-> 3449
    //   #1111	-> 3456
    //   #1113	-> 3472
    //   #1114	-> 3494
    //   #1117	-> 3501
    //   #1119	-> 3530
    //   #1120	-> 3581
    //   #1121	-> 3591
    //   #1122	-> 3601
    //   #1124	-> 3611
    //   #1125	-> 3620
    //   #1126	-> 3631
    //   #1127	-> 3641
    //   #1128	-> 3685
    //   #1131	-> 3717
    //   #1132	-> 3720
    //   #1134	-> 3731
    //   #1135	-> 3745
    //   #1136	-> 3754
    //   #1137	-> 3766
    //   #1138	-> 3778
    //   #1139	-> 3798
    //   #1140	-> 3808
    //   #1141	-> 3822
    //   #1142	-> 3842
    //   #1143	-> 3853
    //   #1144	-> 3860
    //   #1145	-> 3870
    //   #1149	-> 3885
    //   #1150	-> 3896
    //   #1151	-> 3916
    //   #1152	-> 3979
    //   #1154	-> 4030
    //   #1155	-> 4037
    //   #1157	-> 4087
    //   #1159	-> 4092
    //   #1160	-> 4099
    //   #1161	-> 4106
    //   #1162	-> 4113
    //   #1163	-> 4120
    //   #1164	-> 4145
    //   #1165	-> 4151
    //   #1166	-> 4166
    //   #1167	-> 4176
    //   #1171	-> 4228
    //   #1172	-> 4233
    //   #1173	-> 4240
    //   #1174	-> 4247
    //   #1175	-> 4254
    //   #1176	-> 4261
    //   #1177	-> 4290
    //   #1178	-> 4296
    //   #1179	-> 4302
    //   #1181	-> 4330
    //   #1184	-> 4332
    //   #1186	-> 4361
    //   #1187	-> 4412
    //   #1188	-> 4428
    //   #1190	-> 4438
    //   #1192	-> 4449
    //   #1193	-> 4463
    //   #1194	-> 4472
    //   #1195	-> 4484
    //   #1196	-> 4496
    //   #1197	-> 4516
    //   #1198	-> 4526
    //   #1199	-> 4540
    //   #1200	-> 4560
    //   #1201	-> 4571
    //   #1202	-> 4578
    //   #1206	-> 4592
    //   #1208	-> 4614
    //   #1209	-> 4619
    //   #1210	-> 4642
    //   #1214	-> 4649
    //   #1215	-> 4654
    //   #1216	-> 4661
    //   #1217	-> 4668
    //   #1218	-> 4675
    //   #1219	-> 4682
    //   #1220	-> 4711
    //   #1221	-> 4717
    //   #1223	-> 4723
    //   #1226	-> 4725
    //   #1228	-> 4754
    //   #1229	-> 4805
    //   #1230	-> 4821
    //   #1232	-> 4831
    //   #1233	-> 4844
    //   #1235	-> 4855
    //   #1236	-> 4869
    //   #1237	-> 4878
    //   #1238	-> 4890
    //   #1239	-> 4902
    //   #1240	-> 4922
    //   #1241	-> 4932
    //   #1242	-> 4946
    //   #1243	-> 4968
    //   #1244	-> 4988
    //   #1245	-> 4999
    //   #1246	-> 5006
    //   #1250	-> 5020
    //   #1253	-> 5047
    //   #1254	-> 5052
    //   #1255	-> 5075
    //   #1259	-> 5082
    //   #1260	-> 5087
    //   #1261	-> 5094
    //   #1262	-> 5101
    //   #1263	-> 5108
    //   #1264	-> 5115
    //   #1265	-> 5144
    //   #1266	-> 5150
    //   #1268	-> 5156
    //   #1271	-> 5158
    //   #1273	-> 5187
    //   #1274	-> 5192
    //   #1275	-> 5206
    //   #1276	-> 5215
    //   #1277	-> 5218
    //   #1278	-> 5351
    //   #1279	-> 5392
    //   #1280	-> 5400
    //   #1281	-> 5417
    //   #1282	-> 5447
    //   #1283	-> 5471
    //   #1284	-> 5483
    //   #1285	-> 5505
    //   #1286	-> 5512
    //   #1287	-> 5569
    //   #1288	-> 5593
    //   #1289	-> 5605
    //   #1290	-> 5627
    //   #1291	-> 5634
    //   #1292	-> 5641
    //   #1293	-> 5648
    //   #1294	-> 5655
    //   #1295	-> 5665
    //   #1296	-> 5688
    //   #1297	-> 5728
    //   #1298	-> 5735
    //   #1299	-> 5741
    //   #1300	-> 5753
    //   #1301	-> 5763
    //   #1304	-> 5765
    //   #1306	-> 5794
    //   #1307	-> 5799
    //   #1308	-> 5814
    //   #1309	-> 5823
    //   #1310	-> 5826
    //   #1311	-> 5959
    //   #1312	-> 6000
    //   #1313	-> 6008
    //   #1314	-> 6021
    //   #1315	-> 6054
    //   #1316	-> 6071
    //   #1317	-> 6101
    //   #1318	-> 6125
    //   #1319	-> 6137
    //   #1320	-> 6159
    //   #1321	-> 6171
    //   #1322	-> 6202
    //   #1323	-> 6209
    //   #1324	-> 6266
    //   #1325	-> 6290
    //   #1326	-> 6302
    //   #1327	-> 6324
    //   #1328	-> 6336
    //   #1330	-> 6367
    //   #1331	-> 6374
    //   #1332	-> 6381
    //   #1333	-> 6388
    //   #1334	-> 6395
    //   #1335	-> 6405
    //   #1336	-> 6428
    //   #1337	-> 6468
    //   #1338	-> 6475
    //   #1339	-> 6481
    //   #1340	-> 6493
    //   #1341	-> 6503
    //   #1344	-> 6505
    //   #1346	-> 6534
    //   #1347	-> 6539
    //   #1348	-> 6554
    //   #1349	-> 6563
    //   #1350	-> 6566
    //   #1351	-> 6699
    //   #1352	-> 6740
    //   #1353	-> 6748
    //   #1354	-> 6765
    //   #1355	-> 6795
    //   #1356	-> 6819
    //   #1357	-> 6831
    //   #1358	-> 6853
    //   #1359	-> 6860
    //   #1360	-> 6917
    //   #1361	-> 6941
    //   #1362	-> 6953
    //   #1363	-> 6975
    //   #1364	-> 6982
    //   #1365	-> 6989
    //   #1366	-> 6996
    //   #1367	-> 7003
    //   #1368	-> 7013
    //   #1369	-> 7036
    //   #1370	-> 7076
    //   #1371	-> 7083
    //   #1372	-> 7089
    //   #1373	-> 7101
    //   #1374	-> 7111
    //   #1377	-> 7113
    //   #1379	-> 7142
    //   #1380	-> 7151
    //   #1381	-> 7170
    //   #1382	-> 7189
    //   #1383	-> 7208
    //   #1384	-> 7218
    //   #1386	-> 7261
    //   #1390	-> 7275
    //   #1391	-> 7284
    //   #1392	-> 7295
    //   #1393	-> 7307
    //   #1395	-> 7314
    //   #1396	-> 7323
    //   #1397	-> 7334
    //   #1398	-> 7341
    //   #1399	-> 7346
    //   #1400	-> 7353
    //   #1401	-> 7360
    //   #1402	-> 7367
    //   #1403	-> 7374
    //   #1404	-> 7399
    //   #1405	-> 7405
    //   #1406	-> 7420
    //   #1407	-> 7430
    //   #1410	-> 7432
    //   #1412	-> 7461
    //   #1413	-> 7480
    //   #1414	-> 7499
    //   #1415	-> 7518
    //   #1416	-> 7528
    //   #1418	-> 7532
    //   #1419	-> 7537
    //   #1420	-> 7560
    //   #1423	-> 7567
    //   #1425	-> 7596
    //   #1426	-> 7621
    //   #1427	-> 7626
    //   #1428	-> 7635
    //   #1429	-> 7654
    //   #1430	-> 7673
    //   #1431	-> 7692
    //   #1432	-> 7702
    //   #1434	-> 7711
    //   #1437	-> 7727
    //   #1439	-> 7756
    //   #1440	-> 7781
    //   #1441	-> 7786
    //   #1442	-> 7795
    //   #1443	-> 7814
    //   #1444	-> 7833
    //   #1445	-> 7852
    //   #1446	-> 7862
    //   #1448	-> 7868
    //   #1451	-> 7884
    //   #1453	-> 7900
    //   #1454	-> 7921
    //   #1455	-> 7973
    //   #1456	-> 8009
    //   #1457	-> 8048
    //   #1458	-> 8055
    //   #1459	-> 8118
    //   #1460	-> 8123
    //   #1462	-> 8134
    //   #1463	-> 8148
    //   #1464	-> 8157
    //   #1465	-> 8169
    //   #1466	-> 8181
    //   #1467	-> 8201
    //   #1468	-> 8221
    //   #1469	-> 8231
    //   #1470	-> 8235
    //   #1471	-> 8286
    //   #1472	-> 8297
    //   #1473	-> 8317
    //   #1474	-> 8328
    //   #1475	-> 8335
    //   #1476	-> 8345
    //   #1478	-> 8366
    //   #1479	-> 8456
    //   #1482	-> 8476
    //   #1484	-> 8492
    //   #1487	-> 8495
    //   #1489	-> 8519
    //   #1491	-> 8521
    //   #1485	-> 8536
    //   #1495	-> 8541
    //   #1497	-> 8552
    //   #1498	-> 8566
    //   #1499	-> 8575
    //   #1500	-> 8587
    //   #1501	-> 8599
    //   #1502	-> 8619
    //   #1503	-> 8647
    //   #1504	-> 8664
    //   #1505	-> 8681
    //   #1506	-> 8697
    //   #1507	-> 8717
    //   #1508	-> 8727
    //   #1509	-> 8747
    //   #1510	-> 8758
    //   #1511	-> 8765
    //   #1512	-> 8775
    //   #1513	-> 8791
    //   #1514	-> 8804
    //   #1517	-> 8811
    //   #1518	-> 8857
    //   #1519	-> 8866
    //   #1552	-> 8869
    //   #1553	-> 8885
    //   #1554	-> 8901
    //   #1555	-> 8908
    //   #1556	-> 8915
    //   #1557	-> 8922
    //   #1558	-> 8929
    //   #1559	-> 8936
    //   #1560	-> 8942
    //   #1562	-> 8947
    //   #1564	-> 8960
    //   #1565	-> 8971
    //   #1566	-> 8986
    //   #1567	-> 8992
    //   #1569	-> 9003
    //   #1560	-> 9009
    //   #1571	-> 9045
    //   #1572	-> 9052
    //   #1573	-> 9058
    //   #1576	-> 9060
    //   #1578	-> 9106
    //   #1579	-> 9110
    //   #1581	-> 9121
    //   #1582	-> 9135
    //   #1583	-> 9144
    //   #1584	-> 9156
    //   #1585	-> 9168
    //   #1586	-> 9188
    //   #1587	-> 9216
    //   #1588	-> 9233
    //   #1589	-> 9250
    //   #1590	-> 9266
    //   #1591	-> 9276
    //   #1592	-> 9287
    //   #1593	-> 9294
    //   #1594	-> 9303
    //   #1595	-> 9319
    //   #1599	-> 9337
    //   #1602	-> 9350
    //   #1605	-> 9357
    //   #1607	-> 9403
    //   #1608	-> 9407
    //   #1610	-> 9418
    //   #1611	-> 9432
    //   #1612	-> 9441
    //   #1613	-> 9453
    //   #1614	-> 9465
    //   #1615	-> 9485
    //   #1616	-> 9513
    //   #1617	-> 9530
    //   #1618	-> 9547
    //   #1619	-> 9563
    //   #1620	-> 9583
    //   #1621	-> 9593
    //   #1622	-> 9603
    //   #1623	-> 9623
    //   #1624	-> 9634
    //   #1625	-> 9641
    //   #1626	-> 9650
    //   #1627	-> 9666
    //   #1629	-> 9684
    //   #1630	-> 9698
    //   #1632	-> 9727
    //   #1634	-> 9743
    //   #1635	-> 9749
    //   #1636	-> 9758
    //   #1638	-> 9763
    //   #1639	-> 9775
    //   #1641	-> 9794
    //   #1642	-> 9802
    //   #1643	-> 9815
    //   #1644	-> 9825
    //   #1646	-> 9844
    //   #1647	-> 9884
    //   #1648	-> 9901
    //   #1650	-> 9916
    //   #1636	-> 9953
    //   #1653	-> 9968
    //   #1654	-> 9983
    //   #1655	-> 10083
    //   #1656	-> 10088
    //   #1659	-> 10095
    //   #1661	-> 10111
    //   #1662	-> 10156
    //   #1665	-> 10164
    //   #1667	-> 10180
    //   #1668	-> 10225
    //   #1671	-> 10233
    //   #1673	-> 10249
    //   #1674	-> 10294
    //   #1677	-> 10302
    //   #1679	-> 10318
    //   #1680	-> 10379
    //   #1683	-> 10387
    //   #1685	-> 10403
    //   #1686	-> 10448
    //   #1689	-> 10456
    //   #1691	-> 10472
    //   #1692	-> 10517
    //   #1695	-> 10525
    //   #1697	-> 10568
    //   #1698	-> 10590
    //   #1699	-> 10685
    //   #1700	-> 10742
    //   #1701	-> 10798
    //   #1704	-> 10805
    //   #1706	-> 10821
    //   #1709	-> 10826
    //   #1712	-> 10853
    //   #1713	-> 10856
    //   #1714	-> 10891
    //   #1715	-> 10909
    //   #1716	-> 10922
    //   #1717	-> 10925
    //   #1719	-> 10948
    //   #1720	-> 10963
    //   #1721	-> 11008
    //   #1722	-> 11046
    //   #1723	-> 11065
    //   #1724	-> 11077
    //   #1725	-> 11084
    //   #1727	-> 11089
    //   #1728	-> 11101
    //   #1725	-> 11149
    //   #1730	-> 11164
    //   #1731	-> 11171
    //   #1733	-> 11176
    //   #1734	-> 11188
    //   #1731	-> 11227
    //   #1736	-> 11242
    //   #1738	-> 11259
    //   #1740	-> 11282
    //   #1741	-> 11297
    //   #1742	-> 11342
    //   #1743	-> 11380
    //   #1744	-> 11399
    //   #1745	-> 11406
    //   #1747	-> 11411
    //   #1748	-> 11423
    //   #1749	-> 11446
    //   #1750	-> 11458
    //   #1752	-> 11472
    //   #1753	-> 11484
    //   #1750	-> 11507
    //   #1755	-> 11520
    //   #1745	-> 11563
    //   #1758	-> 11578
    //   #1759	-> 11590
    //   #1760	-> 11597
    //   #1762	-> 11602
    //   #1763	-> 11614
    //   #1760	-> 11652
    //   #1765	-> 11667
    //   #1766	-> 11674
    //   #1768	-> 11691
    //   #1770	-> 11714
    //   #1771	-> 11748
    //   #1772	-> 11779
    //   #1773	-> 11804
    //   #1775	-> 11812
    //   #1776	-> 11822
    //   #1777	-> 11842
    //   #1778	-> 11854
    //   #1779	-> 11873
    //   #1780	-> 11888
    //   #1781	-> 11933
    //   #1782	-> 11945
    //   #1783	-> 11958
    //   #1784	-> 11977
    //   #1785	-> 11987
    //   #1787	-> 11997
    //   #1788	-> 12006
    //   #1790	-> 12017
    //   #1791	-> 12043
    //   #1792	-> 12055
    //   #1794	-> 12076
    //   #1795	-> 12120
    //   #1796	-> 12167
    //   #1797	-> 12179
    //   #1798	-> 12187
    //   #1799	-> 12195
    //   #1800	-> 12203
    //   #1801	-> 12215
    //   #1805	-> 12232
    //   #1806	-> 12235
    //   #1809	-> 12293
    //   #1810	-> 12311
    //   #1811	-> 12319
    //   #1813	-> 12330
    //   #1814	-> 12342
    //   #1816	-> 12355
    //   #1818	-> 12363
    //   #1819	-> 12378
    //   #1816	-> 12425
    //   #1823	-> 12453
    //   #1825	-> 12468
    //   #1826	-> 12479
    //   #1828	-> 12639
    //   #1829	-> 12668
    //   #1832	-> 12678
    //   #1834	-> 12697
    //   #1835	-> 12715
    //   #1836	-> 12751
    //   #1838	-> 12772
    //   #1839	-> 12819
    //   #1840	-> 12827
    //   #1841	-> 12831
    //   #1843	-> 12846
    //   #1844	-> 12854
    //   #1845	-> 12876
    //   #1846	-> 12885
    //   #1847	-> 12892
    //   #1848	-> 12902
    //   #1851	-> 12910
    //   #1853	-> 12920
    //   #1855	-> 12943
    //   #1857	-> 13007
    //   #1858	-> 13054
    //   #1859	-> 13107
    //   #1861	-> 13122
    //   #1862	-> 13130
    //   #1865	-> 13152
    //   #1866	-> 13161
    //   #1867	-> 13168
    //   #1868	-> 13178
    //   #1873	-> 13186
    //   #1875	-> 13209
    //   #1876	-> 13218
    //   #1877	-> 13225
    //   #1878	-> 13235
    //   #1879	-> 13243
    //   #1880	-> 13265
    //   #1881	-> 13268
    //   #1883	-> 13290
    //   #1885	-> 13312
    //   #1887	-> 13349
    //   #1890	-> 13379
    //   #1891	-> 13393
    //   #1892	-> 13400
    //   #1893	-> 13403
    //   #1895	-> 13408
    //   #1896	-> 13420
    //   #1897	-> 13441
    //   #1898	-> 13453
    //   #1899	-> 13480
    //   #1900	-> 13509
    //   #1893	-> 13579
    //   #1902	-> 13604
    //   #1904	-> 13628
    //   #1906	-> 13638
    //   #1907	-> 13650
    //   #1909	-> 13662
    //   #1911	-> 13679
    //   #1915	-> 13692
    //   #1916	-> 13733
    //   #1917	-> 13766
    //   #1773	-> 13776
    //   #1922	-> 13797
    //   #1924	-> 13807
    //   #1926	-> 13809
    //   #1710	-> 13832
    //   #1929	-> 13842
    //   #1931	-> 13844
    //   #1932	-> 13854
    //   #1707	-> 13861
    //   #1935	-> 13866
    //   #1936	-> 13871
    //   #1937	-> 13905
    //   #1940	-> 13912
    //   #1942	-> 13928
    //   #1943	-> 13967
    //   #1946	-> 13975
    //   #1948	-> 13991
    //   #1950	-> 14018
    //   #1953	-> 14030
    //   #1956	-> 14034
    //   #1959	-> 14050
    //   #1960	-> 14056
    //   #1962	-> 14061
    //   #1963	-> 14073
    //   #1964	-> 14126
    //   #1965	-> 14134
    //   #1960	-> 14143
    //   #1967	-> 14158
    //   #1968	-> 14174
    //   #1969	-> 14191
    //   #1970	-> 14209
    //   #1973	-> 14219
    //   #1975	-> 14226
    //   #1973	-> 14229
    //   #1974	-> 14231
    //   #1975	-> 14236
    //   #1976	-> 14243
    //   #1978	-> 14253
    //   #1980	-> 14255
    //   #1981	-> 14264
    //   #1954	-> 14284
    //   #1983	-> 14289
    //   #1986	-> 14327
    //   #1988	-> 14334
    //   #1986	-> 14337
    //   #1987	-> 14339
    //   #1988	-> 14351
    //   #1990	-> 14353
    //   #1993	-> 14361
    //   #1995	-> 14377
    //   #1996	-> 14411
    //   #1998	-> 14438
    //   #2001	-> 14457
    //   #2002	-> 14472
    //   #2003	-> 14476
    //   #2004	-> 14480
    //   #2006	-> 14503
    //   #2008	-> 14526
    //   #2009	-> 14568
    //   #2012	-> 14598
    //   #2014	-> 14621
    //   #2016	-> 14623
    //   #2010	-> 14633
    //   #2018	-> 14638
    //   #2019	-> 14717
    //   #2022	-> 14733
    //   #2024	-> 14740
    //   #2022	-> 14743
    //   #2023	-> 14745
    //   #2024	-> 14757
    //   #2026	-> 14759
    //   #2029	-> 14767
    //   #2031	-> 14783
    //   #2032	-> 14837
    //   #2035	-> 14845
    //   #2037	-> 14861
    //   #2038	-> 14954
    //   #2041	-> 14962
    //   #2043	-> 14978
    //   #2044	-> 14987
    //   #2046	-> 15009
    //   #2047	-> 15018
    //   #2048	-> 15039
    //   #2049	-> 15064
    //   #2050	-> 15116
    //   #2051	-> 15152
    //   #2052	-> 15191
    //   #2053	-> 15198
    //   #2055	-> 15208
    //   #2056	-> 15227
    //   #2057	-> 15246
    //   #2058	-> 15265
    //   #2061	-> 15275
    //   #2063	-> 15289
    //   #2065	-> 15291
    //   #2059	-> 15301
    //   #2068	-> 15306
    //   #2069	-> 15318
    //   #2070	-> 15329
    //   #2072	-> 15337
    //   #2073	-> 15349
    //   #2074	-> 15366
    //   #2070	-> 15380
    //   #2076	-> 15398
    //   #2077	-> 15409
    //   #2078	-> 15413
    //   #2079	-> 15465
    //   #2080	-> 15505
    //   #2083	-> 15509
    //   #2085	-> 15532
    //   #2087	-> 15534
    //   #2081	-> 15544
    //   #2089	-> 15549
    //   #2090	-> 15628
    //   #2092	-> 15635
    //   #2094	-> 15699
    //   #2095	-> 15714
    //   #2096	-> 15718
    //   #2097	-> 15770
    //   #2098	-> 15810
    //   #2101	-> 15814
    //   #2103	-> 15837
    //   #2105	-> 15839
    //   #2099	-> 15849
    //   #2107	-> 15854
    //   #2108	-> 15933
    //   #2112	-> 15940
    //   #2113	-> 15955
    //   #2114	-> 15978
    //   #2116	-> 16008
    //   #2117	-> 16029
    //   #2118	-> 16081
    //   #2119	-> 16117
    //   #2120	-> 16156
    //   #2121	-> 16163
    //   #2122	-> 16174
    //   #2123	-> 16207
    //   #2127	-> 16229
    //   #2129	-> 16245
    //   #2130	-> 16268
    //   #2131	-> 16307
    //   #2134	-> 16323
    //   #2136	-> 16339
    //   #2137	-> 16377
    //   #2140	-> 16385
    //   #2142	-> 16401
    //   #2143	-> 16439
    //   #2146	-> 16447
    //   #2148	-> 16463
    //   #2149	-> 16501
    //   #2152	-> 16509
    //   #2154	-> 16525
    //   #2155	-> 16563
    //   #2158	-> 16571
    //   #2160	-> 16587
    //   #2161	-> 16625
    //   #2164	-> 16633
    //   #2166	-> 16649
    //   #2167	-> 16687
    //   #2170	-> 16695
    //   #2172	-> 16711
    //   #2173	-> 16749
    //   #2176	-> 16757
    //   #2178	-> 16773
    //   #2179	-> 16812
    //   #2182	-> 16825
    //   #2184	-> 16841
    //   #2186	-> 16868
    //   #2188	-> 16880
    //   #2191	-> 16893
    //   #2193	-> 16909
    //   #2195	-> 16936
    //   #2196	-> 16939
    //   #2198	-> 16947
    //   #2201	-> 16955
    //   #2203	-> 16971
    //   #2204	-> 17009
    //   #2207	-> 17017
    //   #2209	-> 17033
    //   #2211	-> 17075
    //   #2213	-> 17101
    //   #2214	-> 17116
    //   #2215	-> 17133
    //   #2216	-> 17142
    //   #2217	-> 17154
    //   #2218	-> 17157
    //   #2219	-> 17160
    //   #2221	-> 17165
    //   #2222	-> 17190
    //   #2223	-> 17198
    //   #2224	-> 17215
    //   #2225	-> 17253
    //   #2226	-> 17259
    //   #2227	-> 17265
    //   #2228	-> 17353
    //   #2229	-> 17362
    //   #2230	-> 17369
    //   #2231	-> 17376
    //   #2232	-> 17381
    //   #2234	-> 17397
    //   #2235	-> 17408
    //   #2236	-> 17413
    //   #2237	-> 17429
    //   #2238	-> 17435
    //   #2240	-> 17440
    //   #2241	-> 17456
    //   #2219	-> 17461
    //   #2243	-> 17476
    //   #2244	-> 17507
    //   #2245	-> 17535
    //   #2246	-> 17563
    //   #2247	-> 17570
    //   #2248	-> 17577
    //   #2249	-> 17583
    //   #2250	-> 17590
    //   #2251	-> 17597
    //   #2252	-> 17613
    //   #2253	-> 17616
    //   #2255	-> 17621
    //   #2256	-> 17640
    //   #2257	-> 17649
    //   #2259	-> 17659
    //   #2260	-> 17666
    //   #2253	-> 17681
    //   #2263	-> 17691
    //   #2264	-> 17701
    //   #2265	-> 17706
    //   #2269	-> 17716
    //   #2270	-> 17724
    //   #2271	-> 17731
    //   #2272	-> 17738
    //   #2273	-> 17797
    //   #2274	-> 17804
    //   #2275	-> 17814
    //   #2276	-> 17837
    //   #2277	-> 17895
    //   #2278	-> 17957
    //   #2279	-> 17964
    //   #2280	-> 17970
    //   #2281	-> 17982
    //   #2283	-> 17992
    //   #2285	-> 17994
    //   #2288	-> 18002
    //   #2290	-> 18018
    //   #2291	-> 18056
    //   #2294	-> 18064
    //   #2296	-> 18080
    //   #2297	-> 18118
    //   #2300	-> 18126
    //   #2302	-> 18142
    //   #2303	-> 18147
    //   #2304	-> 18185
    //   #2307	-> 18193
    //   #2309	-> 18209
    //   #2310	-> 18250
    //   #2313	-> 18258
    //   #2315	-> 18274
    //   #2316	-> 18315
    //   #2319	-> 18323
    //   #2321	-> 18339
    //   #2323	-> 18366
    //   #2324	-> 18371
    //   #2325	-> 18411
    //   #2326	-> 18421
    //   #2328	-> 18439
    //   #2330	-> 18471
    //   #2331	-> 18484
    //   #2333	-> 18531
    //   #2335	-> 18549
    //   #2338	-> 18557
    //   #2340	-> 18573
    //   #2341	-> 18578
    //   #2342	-> 18619
    //   #2345	-> 18627
    //   #2347	-> 18643
    //   #2348	-> 18684
    //   #2351	-> 18692
    //   #2353	-> 18708
    //   #2354	-> 18746
    //   #2357	-> 18754
    //   #2359	-> 18770
    //   #2360	-> 18811
    //   #2363	-> 18819
    //   #2365	-> 18835
    //   #2366	-> 18876
    //   #2369	-> 18884
    //   #2371	-> 18900
    //   #2372	-> 18941
    //   #2375	-> 18949
    //   #2377	-> 18965
    //   #2378	-> 19006
    //   #2381	-> 19014
    //   #2383	-> 19030
    //   #2384	-> 19071
    //   #2387	-> 19079
    //   #2389	-> 19095
    //   #2390	-> 19136
    //   #2393	-> 19144
    //   #2395	-> 19160
    //   #2396	-> 19201
    //   #2399	-> 19209
    //   #2401	-> 19225
    //   #2402	-> 19266
    //   #2405	-> 19274
    //   #2407	-> 19290
    //   #2408	-> 19331
    //   #2411	-> 19339
    //   #2413	-> 19355
    //   #2414	-> 19396
    //   #2417	-> 19404
    //   #2419	-> 19420
    //   #2420	-> 19461
    //   #2423	-> 19469
    //   #2425	-> 19485
    //   #2426	-> 19526
    //   #2429	-> 19534
    //   #2431	-> 19550
    //   #2432	-> 19591
    //   #2435	-> 19599
    //   #2437	-> 19615
    //   #2438	-> 19656
    //   #2441	-> 19664
    //   #2443	-> 19680
    //   #2444	-> 19721
    //   #2447	-> 19729
    //   #2449	-> 19745
    //   #2450	-> 19786
    //   #2453	-> 19794
    //   #2455	-> 19810
    //   #2456	-> 19851
    //   #2459	-> 19859
    //   #2461	-> 19875
    //   #2462	-> 19916
    //   #2465	-> 19924
    //   #2467	-> 19940
    //   #2468	-> 19981
    //   #2471	-> 19989
    //   #2473	-> 20005
    //   #2474	-> 20046
    //   #2477	-> 20054
    //   #2479	-> 20070
    //   #2480	-> 20111
    //   #2483	-> 20119
    //   #2485	-> 20135
    //   #2487	-> 20151
    //   #2489	-> 20162
    //   #2490	-> 20176
    //   #2491	-> 20185
    //   #2492	-> 20197
    //   #2493	-> 20209
    //   #2494	-> 20220
    //   #2495	-> 20227
    //   #2496	-> 20236
    //   #2497	-> 20240
    //   #2499	-> 20273
    //   #2500	-> 20282
    //   #2501	-> 20294
    //   #2502	-> 20306
    //   #2503	-> 20316
    //   #2504	-> 20327
    //   #2505	-> 20338
    //   #2506	-> 20349
    //   #2507	-> 20356
    //   #2508	-> 20365
    //   #2512	-> 20395
    //   #2513	-> 20406
    //   #2514	-> 20417
    //   #2515	-> 20434
    //   #2517	-> 20445
    //   #2519	-> 20479
    //   #2521	-> 20503
    //   #2524	-> 20515
    //   #2527	-> 20528
    //   #2529	-> 20544
    //   #2530	-> 20585
    //   #2533	-> 20593
    //   #2535	-> 20609
    //   #2536	-> 20650
    //   #2539	-> 20658
    //   #2541	-> 20674
    //   #2542	-> 20715
    //   #2545	-> 20723
    //   #2547	-> 20739
    //   #2548	-> 20780
    //   #2552	-> 20788
    //   #2554	-> 20827
    //   #2555	-> 20830
    //   #2556	-> 20835
    //   #2557	-> 20840
    //   #2558	-> 20877
    //   #2560	-> 20911
    //   #2561	-> 20941
    //   #2563	-> 20951
    //   #2564	-> 20974
    //   #2565	-> 20982
    //   #2566	-> 21024
    //   #2567	-> 21038
    //   #2568	-> 21059
    //   #2571	-> 21062
    //   #2573	-> 21078
    //   #2575	-> 21089
    //   #2576	-> 21098
    //   #2577	-> 21161
    //   #2578	-> 21181
    //   #2579	-> 21190
    //   #2580	-> 21202
    //   #2581	-> 21205
    //   #2582	-> 21208
    //   #2584	-> 21213
    //   #2585	-> 21238
    //   #2586	-> 21246
    //   #2587	-> 21263
    //   #2588	-> 21301
    //   #2589	-> 21307
    //   #2590	-> 21313
    //   #2591	-> 21383
    //   #2592	-> 21392
    //   #2593	-> 21399
    //   #2594	-> 21406
    //   #2595	-> 21411
    //   #2597	-> 21427
    //   #2598	-> 21438
    //   #2599	-> 21443
    //   #2600	-> 21459
    //   #2601	-> 21465
    //   #2603	-> 21470
    //   #2604	-> 21486
    //   #2582	-> 21491
    //   #2606	-> 21506
    //   #2607	-> 21515
    //   #2608	-> 21528
    //   #2609	-> 21533
    //   #2613	-> 21550
    //   #2614	-> 21554
    //   #2615	-> 21568
    //   #2616	-> 21599
    //   #2617	-> 21687
    //   #2619	-> 21710
    //   #2620	-> 21727
    //   #2623	-> 21744
    //   #2625	-> 21778
    //   #2627	-> 21780
    //   #2621	-> 21802
    //   #2629	-> 21807
    //   #2630	-> 21812
    //   #2633	-> 21828
    //   #2634	-> 21877
    //   #2638	-> 21884
    //   #2640	-> 21900
    //   #2641	-> 21915
    //   #2642	-> 21920
    //   #2645	-> 21927
    //   #2647	-> 21943
    //   #2648	-> 21958
    //   #2649	-> 21963
    //   #2652	-> 21970
    //   #2654	-> 21986
    //   #2655	-> 21991
    //   #2656	-> 22028
    //   #2658	-> 22052
    //   #2660	-> 22087
    //   #2661	-> 22110
    //   #2662	-> 22118
    //   #2663	-> 22141
    //   #2664	-> 22149
    //   #2665	-> 22170
    //   #2668	-> 22173
    //   #2670	-> 22189
    //   #2671	-> 22213
    //   #2672	-> 22218
    //   #2674	-> 22229
    //   #2675	-> 22238
    //   #2676	-> 22301
    //   #2677	-> 22318
    //   #2678	-> 22327
    //   #2679	-> 22339
    //   #2680	-> 22342
    //   #2681	-> 22345
    //   #2683	-> 22350
    //   #2684	-> 22375
    //   #2685	-> 22383
    //   #2686	-> 22400
    //   #2687	-> 22438
    //   #2688	-> 22444
    //   #2689	-> 22450
    //   #2690	-> 22596
    //   #2691	-> 22605
    //   #2692	-> 22612
    //   #2693	-> 22619
    //   #2694	-> 22624
    //   #2696	-> 22640
    //   #2697	-> 22651
    //   #2698	-> 22656
    //   #2699	-> 22672
    //   #2700	-> 22678
    //   #2702	-> 22683
    //   #2703	-> 22699
    //   #2681	-> 22704
    //   #2705	-> 22719
    //   #2706	-> 22750
    //   #2707	-> 22778
    //   #2708	-> 22806
    //   #2709	-> 22813
    //   #2710	-> 22820
    //   #2711	-> 22826
    //   #2712	-> 22833
    //   #2713	-> 22840
    //   #2714	-> 22856
    //   #2715	-> 22859
    //   #2717	-> 22864
    //   #2718	-> 22883
    //   #2719	-> 22892
    //   #2721	-> 22902
    //   #2722	-> 22909
    //   #2715	-> 22924
    //   #2725	-> 22934
    //   #2726	-> 22944
    //   #2727	-> 22949
    //   #2731	-> 22959
    //   #2732	-> 22968
    //   #2733	-> 22977
    //   #2734	-> 22992
    //   #2735	-> 22996
    //   #2737	-> 23004
    //   #2738	-> 23011
    //   #2739	-> 23034
    //   #2740	-> 23041
    //   #2742	-> 23050
    //   #2744	-> 23076
    //   #2746	-> 23092
    //   #2747	-> 23100
    //   #2748	-> 23120
    //   #2750	-> 23136
    //   #2751	-> 23169
    //   #2753	-> 23223
    //   #2755	-> 23254
    //   #2757	-> 23259
    //   #2759	-> 23322
    //   #2761	-> 23346
    //   #2762	-> 23377
    //   #2763	-> 23399
    //   #2764	-> 23432
    //   #2765	-> 23461
    //   #2769	-> 23492
    //   #2770	-> 23523
    //   #2771	-> 23545
    //   #2772	-> 23594
    //   #2774	-> 23620
    //   #2735	-> 23627
    //   #2776	-> 23643
    //   #2777	-> 23667
    //   #2779	-> 23693
    //   #2780	-> 23706
    //   #2781	-> 23709
    //   #2783	-> 23731
    //   #2784	-> 23743
    //   #2786	-> 23794
    //   #2788	-> 23808
    //   #2793	-> 23838
    //   #2794	-> 23845
    //   #2795	-> 23848
    //   #2796	-> 23884
    //   #2797	-> 23891
    //   #2798	-> 23898
    //   #2799	-> 23905
    //   #2800	-> 23912
    //   #2801	-> 23919
    //   #2803	-> 23925
    //   #2804	-> 23941
    //   #2806	-> 23949
    //   #2807	-> 23961
    //   #2808	-> 23968
    //   #2809	-> 24019
    //   #2810	-> 24030
    //   #2811	-> 24037
    //   #2812	-> 24046
    //   #2813	-> 24068
    //   #2814	-> 24134
    //   #2815	-> 24150
    //   #2804	-> 24155
    //   #2817	-> 24173
    //   #2818	-> 24178
    //   #2821	-> 24183
    //   #2824	-> 24185
    //   #2826	-> 24201
    //   #2827	-> 24206
    //   #2829	-> 24217
    //   #2830	-> 24226
    //   #2831	-> 24289
    //   #2832	-> 24306
    //   #2833	-> 24315
    //   #2834	-> 24327
    //   #2835	-> 24330
    //   #2836	-> 24333
    //   #2838	-> 24338
    //   #2839	-> 24363
    //   #2840	-> 24371
    //   #2841	-> 24388
    //   #2842	-> 24426
    //   #2843	-> 24432
    //   #2844	-> 24438
    //   #2845	-> 24674
    //   #2846	-> 24683
    //   #2847	-> 24690
    //   #2848	-> 24697
    //   #2849	-> 24702
    //   #2851	-> 24718
    //   #2852	-> 24729
    //   #2853	-> 24734
    //   #2854	-> 24750
    //   #2855	-> 24756
    //   #2857	-> 24761
    //   #2858	-> 24777
    //   #2836	-> 24782
    //   #2860	-> 24797
    //   #2861	-> 24806
    //   #2862	-> 24819
    //   #2863	-> 24824
    //   #2867	-> 24841
    //   #2868	-> 24844
    //   #2869	-> 24847
    //   #2871	-> 24870
    //   #2872	-> 24884
    //   #2874	-> 24894
    //   #2876	-> 24902
    //   #2877	-> 24914
    //   #2879	-> 24944
    //   #2880	-> 24948
    //   #2874	-> 24953
    //   #2883	-> 24971
    //   #2885	-> 24981
    //   #2886	-> 25013
    //   #2887	-> 25026
    //   #2889	-> 25034
    //   #2890	-> 25046
    //   #2892	-> 25071
    //   #2894	-> 25100
    //   #2887	-> 25194
    //   #2900	-> 25212
    //   #2901	-> 25217
    //   #2902	-> 25246
    //   #2904	-> 25254
    //   #2905	-> 25261
    //   #2906	-> 25270
    //   #2907	-> 25292
    //   #2908	-> 25315
    //   #2909	-> 25369
    //   #2911	-> 25393
    //   #2913	-> 25401
    //   #2914	-> 25417
    //   #2916	-> 25484
    //   #2917	-> 25539
    //   #2918	-> 25544
    //   #2911	-> 25549
    //   #2921	-> 25571
    //   #2923	-> 25581
    //   #2924	-> 25616
    //   #2926	-> 25699
    //   #2927	-> 25722
    //   #2928	-> 25758
    //   #2930	-> 25768
    //   #2931	-> 25773
    //   #2934	-> 25778
    //   #2902	-> 25799
    //   #2936	-> 25815
    //   #2937	-> 25841
    //   #2941	-> 25848
    //   #2943	-> 25864
    //   #2944	-> 25869
    //   #2946	-> 25874
    //   #2947	-> 25890
    //   #2948	-> 25901
    //   #2949	-> 25916
    //   #2950	-> 25919
    //   #2952	-> 25951
    //   #2953	-> 25956
    //   #2955	-> 25970
    //   #2956	-> 25979
    //   #2957	-> 25990
    //   #2959	-> 26009
    //   #2962	-> 26023
    //   #2966	-> 26041
    //   #2969	-> 26082
    //   #2970	-> 26123
    //   #2971	-> 26162
    //   #2973	-> 26172
    //   #2974	-> 26209
    //   #2975	-> 26216
    //   #2976	-> 26220
    //   #2978	-> 26225
    //   #2979	-> 26237
    //   #2980	-> 26249
    //   #2976	-> 26288
    //   #2983	-> 26308
    //   #2984	-> 26316
    //   #2987	-> 26334
    //   #2989	-> 26341
    //   #2987	-> 26344
    //   #2988	-> 26346
    //   #2989	-> 26363
    //   #2992	-> 26370
    //   #2993	-> 26404
    //   #2996	-> 26411
    //   #2998	-> 26446
    //   #3000	-> 26451
    //   #3001	-> 26467
    //   #3002	-> 26478
    //   #3003	-> 26493
    //   #3004	-> 26502
    //   #3005	-> 26514
    //   #3006	-> 26533
    //   #3007	-> 26545
    //   #3008	-> 26561
    //   #3009	-> 26580
    //   #3010	-> 26586
    //   #3011	-> 26602
    //   #3013	-> 26615
    //   #3014	-> 26649
    //   #3017	-> 26656
    //   #3019	-> 26672
    //   #3020	-> 26677
    //   #3021	-> 26714
    //   #3022	-> 26718
    //   #3024	-> 26728
    //   #3025	-> 26742
    //   #3027	-> 26752
    //   #3028	-> 26789
    //   #3030	-> 26808
    //   #3034	-> 26844
    //   #3035	-> 26878
    //   #3038	-> 26885
    //   #3040	-> 26901
    //   #3041	-> 26906
    //   #3042	-> 26941
    //   #3045	-> 26948
    //   #3047	-> 26964
    //   #3048	-> 26969
    //   #3049	-> 26983
    //   #3051	-> 26993
    //   #3052	-> 26996
    //   #3054	-> 27004
    //   #3055	-> 27016
    //   #3057	-> 27044
    //   #3058	-> 27048
    //   #3052	-> 27053
    //   #3061	-> 27071
    //   #3063	-> 27081
    //   #3064	-> 27084
    //   #3065	-> 27116
    //   #3066	-> 27129
    //   #3068	-> 27137
    //   #3069	-> 27149
    //   #3071	-> 27180
    //   #3072	-> 27184
    //   #3066	-> 27189
    //   #3075	-> 27207
    //   #3077	-> 27217
    //   #3078	-> 27226
    //   #3080	-> 27237
    //   #3081	-> 27276
    //   #3083	-> 27304
    //   #3084	-> 27391
    //   #3085	-> 27417
    //   #3087	-> 27430
    //   #3088	-> 27455
    //   #3089	-> 27459
    //   #3091	-> 27464
    //   #3092	-> 27498
    //   #3093	-> 27505
    //   #3094	-> 27509
    //   #3095	-> 27518
    //   #3097	-> 27534
    //   #3098	-> 27549
    //   #3099	-> 27576
    //   #3101	-> 27591
    //   #3102	-> 27602
    //   #3103	-> 27613
    //   #3089	-> 27641
    //   #3105	-> 27657
    //   #3107	-> 27662
    //   #3108	-> 27683
    //   #3109	-> 27690
    //   #3111	-> 27695
    //   #3112	-> 27707
    //   #3113	-> 27719
    //   #3115	-> 27744
    //   #3116	-> 27821
    //   #3117	-> 27847
    //   #3119	-> 27860
    //   #3120	-> 27885
    //   #3121	-> 27889
    //   #3123	-> 27894
    //   #3124	-> 27928
    //   #3125	-> 27935
    //   #3126	-> 27939
    //   #3127	-> 27948
    //   #3129	-> 27964
    //   #3130	-> 27979
    //   #3131	-> 28006
    //   #3133	-> 28021
    //   #3134	-> 28049
    //   #3135	-> 28060
    //   #3136	-> 28071
    //   #3121	-> 28099
    //   #3138	-> 28115
    //   #3109	-> 28120
    //   #3143	-> 28135
    //   #3144	-> 28201
    //   #3145	-> 28227
    //   #3147	-> 28253
    //   #3148	-> 28278
    //   #3149	-> 28282
    //   #3151	-> 28287
    //   #3152	-> 28321
    //   #3153	-> 28328
    //   #3154	-> 28332
    //   #3155	-> 28341
    //   #3157	-> 28357
    //   #3158	-> 28372
    //   #3159	-> 28399
    //   #3161	-> 28414
    //   #3162	-> 28425
    //   #3163	-> 28436
    //   #3149	-> 28464
    //   #3165	-> 28480
    //   #3168	-> 28490
    //   #3170	-> 28517
    //   #3171	-> 28527
    //   #3172	-> 28571
    //   #3173	-> 28582
    //   #3174	-> 28599
    //   #3175	-> 28608
    //   #3176	-> 28615
    //   #3177	-> 28624
    //   #3178	-> 28643
    //   #3179	-> 28694
    //   #3180	-> 28703
    //   #3181	-> 28711
    //   #3182	-> 28723
    //   #3183	-> 28747
    //   #3184	-> 28772
    //   #3185	-> 28785
    //   #3187	-> 28799
    //   #3188	-> 28811
    //   #3185	-> 28847
    //   #3190	-> 28860
    //   #3192	-> 28873
    //   #3200	-> 28900
    //   #3201	-> 28922
    //   #3202	-> 28969
    //   #3203	-> 29006
    //   #3204	-> 29023
    //   #3206	-> 29046
    //   #3208	-> 29048
    //   #3209	-> 29058
    //   #3194	-> 29092
    //   #3212	-> 29097
    //   #3213	-> 29108
    //   #3214	-> 29117
    //   #3215	-> 29126
    //   #3217	-> 29134
    //   #3218	-> 29146
    //   #3219	-> 29165
    //   #3215	-> 29218
    //   #3221	-> 29236
    //   #3222	-> 29245
    //   #3227	-> 29252
    //   #3230	-> 29260
    //   #3232	-> 29276
    //   #3233	-> 29281
    //   #3234	-> 29304
    //   #3235	-> 29319
    //   #3238	-> 29326
    //   #3240	-> 29342
    //   #3242	-> 29347
    //   #3243	-> 29379
    //   #3244	-> 29383
    //   #3248	-> 29391
    //   #3249	-> 29398
    //   #3251	-> 29461
    //   #3252	-> 29470
    //   #3255	-> 29565
    //   #3256	-> 29581
    //   #3257	-> 29601
    //   #3258	-> 29618
    //   #3259	-> 29635
    //   #3260	-> 29652
    //   #3263	-> 29669
    //   #3264	-> 29686
    //   #3265	-> 29814
    //   #3266	-> 29872
    //   #3267	-> 29906
    //   #3268	-> 29915
    //   #3269	-> 29950
    //   #3272	-> 29983
    //   #3275	-> 29990
    //   #3272	-> 29993
    //   #3273	-> 29995
    //   #3274	-> 30012
    //   #3275	-> 30029
    //   #3278	-> 30041
    //   #3280	-> 30043
    //   #3281	-> 30053
    //   #3246	-> 30090
    //   #3244	-> 30095
    //   #3284	-> 30111
    //   #3285	-> 30145
    //   #3287	-> 30158
    //   #3290	-> 30172
    //   #3292	-> 30188
    //   #3294	-> 30193
    //   #3295	-> 30225
    //   #3296	-> 30229
    //   #3298	-> 30237
    //   #3299	-> 30244
    //   #3301	-> 30307
    //   #3302	-> 30316
    //   #3305	-> 30411
    //   #3306	-> 30427
    //   #3307	-> 30447
    //   #3308	-> 30464
    //   #3309	-> 30481
    //   #3310	-> 30498
    //   #3313	-> 30515
    //   #3314	-> 30539
    //   #3315	-> 30547
    //   #3316	-> 30554
    //   #3317	-> 30557
    //   #3318	-> 30560
    //   #3319	-> 30569
    //   #3321	-> 30574
    //   #3322	-> 30583
    //   #3324	-> 30593
    //   #3325	-> 30603
    //   #3319	-> 30610
    //   #3328	-> 30633
    //   #3329	-> 30638
    //   #3330	-> 30655
    //   #3332	-> 30687
    //   #3333	-> 30721
    //   #3334	-> 30784
    //   #3335	-> 30842
    //   #3336	-> 30905
    //   #3337	-> 30934
    //   #3338	-> 30943
    //   #3339	-> 30978
    //   #3343	-> 31011
    //   #3344	-> 31037
    //   #3345	-> 31065
    //   #3348	-> 31075
    //   #3350	-> 31077
    //   #3351	-> 31087
    //   #3354	-> 31129
    //   #3357	-> 31136
    //   #3354	-> 31139
    //   #3355	-> 31141
    //   #3356	-> 31158
    //   #3357	-> 31175
    //   #3296	-> 31182
    //   #3360	-> 31198
    //   #3361	-> 31232
    //   #3363	-> 31245
    //   #3366	-> 31259
    //   #3368	-> 31275
    //   #3370	-> 31280
    //   #3371	-> 31312
    //   #3372	-> 31316
    //   #3374	-> 31324
    //   #3375	-> 31345
    //   #3376	-> 31369
    //   #3377	-> 31432
    //   #3378	-> 31441
    //   #3381	-> 31567
    //   #3382	-> 31583
    //   #3383	-> 31603
    //   #3384	-> 31620
    //   #3385	-> 31637
    //   #3388	-> 31654
    //   #3391	-> 31681
    //   #3393	-> 31688
    //   #3391	-> 31691
    //   #3392	-> 31693
    //   #3393	-> 31710
    //   #3372	-> 31717
    //   #3396	-> 31733
    //   #3397	-> 31767
    //   #3399	-> 31780
    //   #3402	-> 31794
    //   #3404	-> 31810
    //   #3406	-> 31815
    //   #3407	-> 31847
    //   #3408	-> 31851
    //   #3409	-> 31860
    //   #3410	-> 31869
    //   #3412	-> 31877
    //   #3413	-> 31884
    //   #3415	-> 31947
    //   #3416	-> 31956
    //   #3419	-> 32051
    //   #3420	-> 32067
    //   #3421	-> 32087
    //   #3422	-> 32104
    //   #3423	-> 32131
    //   #3410	-> 32155
    //   #3426	-> 32171
    //   #3427	-> 32183
    //   #3428	-> 32246
    //   #3431	-> 32313
    //   #3432	-> 32336
    //   #3433	-> 32353
    //   #3434	-> 32373
    //   #3449	-> 32387
    //   #3434	-> 32421
    //   #3451	-> 32425
    //   #3452	-> 32459
    //   #3454	-> 32472
    //   #3457	-> 32486
    //   #3459	-> 32502
    //   #3461	-> 32507
    //   #3462	-> 32539
    //   #3463	-> 32543
    //   #3465	-> 32551
    //   #3466	-> 32558
    //   #3468	-> 32609
    //   #3469	-> 32618
    //   #3470	-> 32634
    //   #3472	-> 32654
    //   #3473	-> 32658
    //   #3475	-> 32666
    //   #3476	-> 32681
    //   #3477	-> 32701
    //   #3478	-> 32722
    //   #3473	-> 32728
    //   #3480	-> 32743
    //   #3463	-> 32765
    //   #3482	-> 32781
    //   #3483	-> 32818
    //   #3485	-> 32831
    //   #3488	-> 32845
    //   #3490	-> 32861
    //   #3492	-> 32866
    //   #3493	-> 32878
    //   #3494	-> 32929
    //   #3496	-> 32938
    //   #3497	-> 32952
    //   #3498	-> 32968
    //   #3499	-> 32983
    //   #3500	-> 32995
    //   #3502	-> 33026
    //   #3503	-> 33051
    //   #3504	-> 33065
    //   #3505	-> 33081
    //   #3506	-> 33096
    //   #3508	-> 33111
    //   #3509	-> 33155
    //   #3511	-> 33180
    //   #3512	-> 33202
    //   #3513	-> 33261
    //   #3514	-> 33278
    //   #3515	-> 33295
    //   #3517	-> 33399
    //   #3520	-> 33412
    //   #3521	-> 33449
    //   #3522	-> 33462
    //   #3525	-> 33476
    //   #3527	-> 33492
    //   #3529	-> 33497
    //   #3530	-> 33512
    //   #3531	-> 33523
    //   #3532	-> 33574
    //   #3533	-> 33590
    //   #3534	-> 33605
    //   #3535	-> 33620
    //   #3536	-> 33633
    //   #3538	-> 33653
    //   #3539	-> 33690
    //   #3542	-> 33704
    //   #3544	-> 33720
    //   #3546	-> 33725
    //   #3547	-> 33737
    //   #3548	-> 33788
    //   #3549	-> 33804
    //   #3550	-> 33819
    //   #3551	-> 33865
    //   #3552	-> 33874
    //   #3554	-> 33896
    //   #3555	-> 33905
    //   #3556	-> 33908
    //   #3557	-> 33961
    //   #3559	-> 33969
    //   #3560	-> 33981
    //   #3557	-> 34000
    //   #3562	-> 34018
    //   #3567	-> 34042
    //   #3569	-> 34065
    //   #3573	-> 34091
    //   #3575	-> 34142
    //   #3576	-> 34182
    //   #3579	-> 34189
    //   #3581	-> 34205
    //   #3582	-> 34210
    //   #3583	-> 34219
    //   #3584	-> 34237
    //   #3586	-> 34245
    //   #3587	-> 34252
    //   #3588	-> 34303
    //   #3589	-> 34319
    //   #3590	-> 34334
    //   #3591	-> 34380
    //   #3584	-> 34436
    //   #3593	-> 34452
    //   #3594	-> 34492
    //   #3597	-> 34499
    //   #3599	-> 34515
    //   #3601	-> 34520
    //   #3602	-> 34532
    //   #3603	-> 34539
    //   #3604	-> 34547
    //   #3603	-> 34567
    //   #3605	-> 34589
    //   #3606	-> 34614
    //   #3607	-> 34665
    //   #3608	-> 34681
    //   #3609	-> 34725
    //   #3610	-> 34737
    //   #3612	-> 34750
    //   #3613	-> 34787
    //   #3616	-> 34801
    //   #3618	-> 34833
    //   #3619	-> 34837
    //   #3621	-> 34866
    //   #3622	-> 34871
    //   #3623	-> 34894
    //   #3624	-> 34917
    //   #3626	-> 34945
    //   #3628	-> 34956
    //   #3629	-> 34970
    //   #3630	-> 34979
    //   #3631	-> 34991
    //   #3632	-> 35003
    //   #3633	-> 35023
    //   #3634	-> 35051
    //   #3635	-> 35068
    //   #3636	-> 35085
    //   #3637	-> 35101
    //   #3638	-> 35121
    //   #3639	-> 35131
    //   #3640	-> 35151
    //   #3641	-> 35162
    //   #3642	-> 35169
    //   #3643	-> 35179
    //   #3644	-> 35195
    //   #3648	-> 35213
    //   #3650	-> 35229
    //   #3651	-> 35239
    //   #3652	-> 35253
    //   #3653	-> 35267
    //   #3655	-> 35282
    //   #3656	-> 35293
    //   #3658	-> 35304
    //   #3659	-> 35347
    //   #3660	-> 35360
    //   #3661	-> 35370
    //   #3662	-> 35380
    //   #3663	-> 35389
    //   #3664	-> 35413
    //   #3665	-> 35444
    //   #3666	-> 35459
    //   #3668	-> 35511
    //   #3669	-> 35520
    //   #3670	-> 35547
    //   #3671	-> 35559
    //   #3672	-> 35568
    //   #3674	-> 35575
    //   #3675	-> 35597
    //   #3676	-> 35636
    //   #3677	-> 35645
    //   #3678	-> 35656
    //   #3679	-> 35667
    //   #3680	-> 35679
    //   #3681	-> 35690
    //   #3683	-> 35711
    //   #3684	-> 35720
    //   #3685	-> 35726
    //   #3686	-> 35770
    //   #3687	-> 35788
    //   #3689	-> 35796
    //   #3690	-> 35806
    //   #3691	-> 35826
    //   #3692	-> 35877
    //   #3694	-> 35886
    //   #3696	-> 35928
    //   #3697	-> 35950
    //   #3698	-> 35976
    //   #3699	-> 35993
    //   #3700	-> 35996
    //   #3703	-> 36013
    //   #3704	-> 36055
    //   #3705	-> 36072
    //   #3708	-> 36089
    //   #3710	-> 36096
    //   #3708	-> 36099
    //   #3709	-> 36101
    //   #3710	-> 36118
    //   #3711	-> 36125
    //   #3712	-> 36142
    //   #3713	-> 36159
    //   #3687	-> 36166
    //   #3715	-> 36182
    //   #3716	-> 36208
    //   #3717	-> 36234
    //   #3718	-> 36248
    //   #3719	-> 36328
    //   #3721	-> 36343
    //   #3722	-> 36358
    //   #3725	-> 36370
    //   #3728	-> 36377
    //   #3730	-> 36393
    //   #3731	-> 36397
    //   #3733	-> 36408
    //   #3734	-> 36422
    //   #3735	-> 36431
    //   #3736	-> 36443
    //   #3737	-> 36455
    //   #3738	-> 36483
    //   #3739	-> 36500
    //   #3740	-> 36517
    //   #3741	-> 36533
    //   #3742	-> 36553
    //   #3743	-> 36563
    //   #3744	-> 36583
    //   #3745	-> 36594
    //   #3746	-> 36601
    //   #3747	-> 36611
    //   #3748	-> 36627
    //   #3752	-> 36645
    //   #3753	-> 36650
    //   #3754	-> 36659
    //   #3755	-> 36665
    //   #3756	-> 36706
    //   #3757	-> 36747
    //   #3758	-> 36765
    //   #3759	-> 36771
    //   #3761	-> 36779
    //   #3762	-> 36789
    //   #3763	-> 36809
    //   #3759	-> 36834
    //   #3765	-> 36850
    //   #3766	-> 36857
    //   #3768	-> 36865
    //   #3769	-> 36875
    //   #3770	-> 36895
    //   #3771	-> 36946
    //   #3773	-> 36955
    //   #3775	-> 36997
    //   #3776	-> 37019
    //   #3779	-> 37045
    //   #3781	-> 37106
    //   #3783	-> 37108
    //   #3784	-> 37117
    //   #3785	-> 37142
    //   #3786	-> 37173
    //   #3777	-> 37209
    //   #3788	-> 37214
    //   #3766	-> 37221
    //   #3790	-> 37237
    //   #3792	-> 37252
    //   #3795	-> 37273
    //   #3797	-> 37305
    //   #3798	-> 37346
    //   #3799	-> 37364
    //   #3800	-> 37369
    //   #3801	-> 37384
    //   #3802	-> 37394
    //   #3803	-> 37426
    //   #3804	-> 37452
    //   #3805	-> 37456
    //   #3812	-> 37476
    //   #3813	-> 37481
    //   #3814	-> 37504
    //   #3815	-> 37526
    //   #3816	-> 37549
    //   #3818	-> 37563
    //   #3820	-> 37579
    //   #3821	-> 37597
    //   #3822	-> 37619
    //   #3823	-> 37631
    //   #3824	-> 37650
    //   #3825	-> 37655
    //   #3827	-> 37661
    //   #3828	-> 37707
    //   #3829	-> 37730
    //   #3830	-> 37755
    //   #3825	-> 37778
    //   #3832	-> 37790
    //   #3835	-> 37804
    //   #3837	-> 37820
    //   #3838	-> 37838
    //   #3839	-> 37860
    //   #3840	-> 37872
    //   #3841	-> 37891
    //   #3842	-> 37896
    //   #3844	-> 37902
    //   #3845	-> 37908
    //   #3846	-> 37917
    //   #3847	-> 37940
    //   #3848	-> 37965
    //   #3842	-> 37988
    //   #3850	-> 38000
    //   #3853	-> 38014
    //   #3855	-> 38030
    //   #3856	-> 38034
    //   #3858	-> 38045
    //   #3859	-> 38059
    //   #3860	-> 38068
    //   #3861	-> 38080
    //   #3862	-> 38092
    //   #3863	-> 38120
    //   #3864	-> 38137
    //   #3865	-> 38154
    //   #3866	-> 38170
    //   #3867	-> 38180
    //   #3868	-> 38191
    //   #3869	-> 38198
    //   #3870	-> 38208
    //   #3871	-> 38224
    //   #3875	-> 38242
    //   #3877	-> 38255
    //   #3879	-> 38269
    //   #3881	-> 38285
    //   #3882	-> 38303
    //   #3883	-> 38354
    //   #3885	-> 38363
    //   #3886	-> 38385
    //   #3887	-> 38402
    //   #3888	-> 38436
    //   #3889	-> 38475
    //   #3890	-> 38484
    //   #3891	-> 38578
    //   #3892	-> 38585
    //   #3893	-> 38592
    //   #3894	-> 38599
    //   #3895	-> 38606
    //   #3896	-> 38632
    //   #3897	-> 38655
    //   #3898	-> 38692
    //   #3899	-> 38699
    //   #3900	-> 38705
    //   #3901	-> 38717
    //   #3902	-> 38727
    //   #3905	-> 38729
    //   #3907	-> 38745
    //   #3908	-> 38749
    //   #3910	-> 38760
    //   #3911	-> 38774
    //   #3912	-> 38783
    //   #3913	-> 38795
    //   #3914	-> 38807
    //   #3915	-> 38835
    //   #3916	-> 38852
    //   #3917	-> 38869
    //   #3918	-> 38885
    //   #3919	-> 38895
    //   #3920	-> 38906
    //   #3921	-> 38913
    //   #3922	-> 38923
    //   #3923	-> 38939
    //   #3924	-> 38952
    //   #3925	-> 38966
    //   #3927	-> 38981
    //   #3928	-> 38986
    //   #3929	-> 39009
    //   #3930	-> 39032
    //   #3931	-> 39055
    //   #3932	-> 39078
    //   #3933	-> 39101
    //   #3934	-> 39124
    //   #3935	-> 39147
    //   #3940	-> 39175
    //   #3942	-> 39188
    //   #3943	-> 39203
    //   #3944	-> 39219
    //   #3947	-> 39222
    //   #3949	-> 39238
    //   #3950	-> 39243
    //   #3952	-> 39254
    //   #3953	-> 39268
    //   #3954	-> 39277
    //   #3955	-> 39289
    //   #3956	-> 39301
    //   #3957	-> 39329
    //   #3958	-> 39346
    //   #3959	-> 39363
    //   #3960	-> 39379
    //   #3961	-> 39390
    //   #3962	-> 39397
    //   #3963	-> 39407
    //   #3964	-> 39423
    //   #3965	-> 39436
    //   #3969	-> 39475
    //   #3970	-> 39523
    //   #3972	-> 39536
    //   #3975	-> 39543
    //   #3977	-> 39559
    //   #3979	-> 39564
    //   #3980	-> 39606
    //   #3981	-> 39620
    //   #3982	-> 39632
    //   #3983	-> 39641
    //   #3984	-> 39656
    //   #3985	-> 39714
    //   #3987	-> 39722
    //   #3988	-> 39731
    //   #3989	-> 39743
    //   #3991	-> 39808
    //   #3992	-> 39832
    //   #3993	-> 39841
    //   #3994	-> 39858
    //   #3995	-> 39865
    //   #3996	-> 39878
    //   #3985	-> 39889
    //   #3999	-> 39907
    //   #4000	-> 39931
    //   #4001	-> 39965
    //   #4002	-> 39978
    //   #4005	-> 39985
    //   #4007	-> 40001
    //   #4008	-> 40017
    //   #4009	-> 40025
    //   #4010	-> 40032
    //   #4011	-> 40036
    //   #4013	-> 40072
    //   #4014	-> 40079
    //   #4016	-> 40086
    //   #4017	-> 40100
    //   #4018	-> 40124
    //   #4019	-> 40134
    //   #4020	-> 40146
    //   #4022	-> 40168
    //   #4023	-> 40172
    //   #4025	-> 40180
    //   #4026	-> 40187
    //   #4023	-> 40217
    //   #4028	-> 40233
    //   #4030	-> 40238
    //   #4031	-> 40245
    //   #4032	-> 40248
    //   #4034	-> 40256
    //   #4035	-> 40263
    //   #4036	-> 40283
    //   #4032	-> 40301
    //   #4038	-> 40327
    //   #4028	-> 40342
    //   #4040	-> 40357
    //   #4041	-> 40361
    //   #4043	-> 40381
    //   #4044	-> 40386
    //   #4045	-> 40423
    //   #4047	-> 40439
    //   #4048	-> 40448
    //   #4049	-> 40479
    //   #4051	-> 40502
    //   #4052	-> 40533
    //   #4053	-> 40549
    //   #4054	-> 40647
    //   #4055	-> 40654
    //   #4056	-> 40661
    //   #4057	-> 40667
    //   #4059	-> 40678
    //   #4060	-> 40688
    //   #4061	-> 40751
    //   #4062	-> 40768
    //   #4065	-> 40785
    //   #4068	-> 40813
    //   #4069	-> 40820
    //   #4070	-> 40823
    //   #4072	-> 40828
    //   #4073	-> 40837
    //   #4075	-> 40847
    //   #4076	-> 40862
    //   #4070	-> 40872
    //   #4079	-> 40882
    //   #4082	-> 40897
    //   #4085	-> 40904
    //   #4082	-> 40907
    //   #4083	-> 40909
    //   #4084	-> 40914
    //   #4085	-> 40924
    //   #4087	-> 40936
    //   #4089	-> 40938
    //   #4063	-> 40948
    //   #4091	-> 40953
    //   #4092	-> 40958
    //   #4093	-> 40974
    //   #4097	-> 40976
    //   #4098	-> 41042
    //   #4099	-> 41060
    //   #4101	-> 41079
    //   #4102	-> 41088
    //   #4104	-> 41111
    //   #4105	-> 41131
    //   #4107	-> 41139
    //   #4108	-> 41154
    //   #4109	-> 41169
    //   #4105	-> 41179
    //   #4113	-> 41195
    //   #4114	-> 41198
    //   #4115	-> 41207
    //   #4117	-> 41212
    //   #4119	-> 41228
    //   #4120	-> 41241
    //   #4121	-> 41248
    //   #4122	-> 41314
    //   #4123	-> 41323
    //   #4124	-> 41345
    //   #4126	-> 41383
    //   #4127	-> 41469
    //   #4128	-> 41511
    //   #4131	-> 41543
    //   #4132	-> 41564
    //   #4115	-> 41567
    //   #4135	-> 41580
    //   #4137	-> 41602
    //   #4138	-> 41622
    //   #4139	-> 41632
    //   #4140	-> 41683
    //   #4141	-> 41716
    //   #4143	-> 41726
    //   #4144	-> 41771
    //   #4135	-> 41807
    //   #4148	-> 41833
    //   #4150	-> 41850
    //   #4151	-> 41859
    //   #4152	-> 41875
    //   #4153	-> 41892
    //   #4154	-> 41903
    //   #4155	-> 41914
    //   #4156	-> 41936
    //   #4158	-> 41958
    //   #4160	-> 41967
    //   #4161	-> 41976
    //   #4162	-> 41987
    //   #4163	-> 42003
    //   #4165	-> 42015
    //   #4166	-> 42058
    //   #4167	-> 42069
    //   #4169	-> 42079
    //   #4173	-> 42081
    //   #4175	-> 42097
    //   #4176	-> 42111
    //   #4177	-> 42118
    //   #4178	-> 42149
    //   #4180	-> 42237
    //   #4181	-> 42246
    //   #4182	-> 42278
    //   #4185	-> 42306
    //   #4188	-> 42322
    //   #4189	-> 42326
    //   #4191	-> 42337
    //   #4192	-> 42351
    //   #4193	-> 42360
    //   #4194	-> 42372
    //   #4195	-> 42384
    //   #4196	-> 42404
    //   #4197	-> 42432
    //   #4198	-> 42449
    //   #4199	-> 42466
    //   #4200	-> 42482
    //   #4201	-> 42502
    //   #4202	-> 42512
    //   #4203	-> 42532
    //   #4204	-> 42543
    //   #4205	-> 42550
    //   #4206	-> 42560
    //   #4207	-> 42576
    //   #4211	-> 42594
    //   #4213	-> 42607
    //   #4216	-> 42621
    //   #4218	-> 42637
    //   #4219	-> 42641
    //   #4221	-> 42652
    //   #4222	-> 42666
    //   #4223	-> 42675
    //   #4224	-> 42687
    //   #4225	-> 42699
    //   #4226	-> 42719
    //   #4227	-> 42747
    //   #4228	-> 42764
    //   #4229	-> 42781
    //   #4230	-> 42797
    //   #4231	-> 42817
    //   #4232	-> 42827
    //   #4233	-> 42847
    //   #4234	-> 42858
    //   #4235	-> 42865
    //   #4236	-> 42875
    //   #4237	-> 42891
    //   #4241	-> 42909
    //   #4243	-> 42921
    //   #4246	-> 42928
    //   #4248	-> 42944
    //   #4249	-> 42948
    //   #4251	-> 42959
    //   #4252	-> 42973
    //   #4253	-> 42982
    //   #4254	-> 42994
    //   #4255	-> 43006
    //   #4256	-> 43026
    //   #4257	-> 43054
    //   #4258	-> 43071
    //   #4259	-> 43088
    //   #4260	-> 43104
    //   #4261	-> 43124
    //   #4262	-> 43134
    //   #4263	-> 43154
    //   #4264	-> 43165
    //   #4265	-> 43172
    //   #4266	-> 43182
    //   #4267	-> 43198
    //   #4271	-> 43216
    //   #4273	-> 43229
    //   #4276	-> 43236
    //   #4278	-> 43252
    //   #4279	-> 43256
    //   #4281	-> 43267
    //   #4282	-> 43281
    //   #4283	-> 43290
    //   #4284	-> 43302
    //   #4285	-> 43314
    //   #4286	-> 43334
    //   #4287	-> 43362
    //   #4288	-> 43379
    //   #4289	-> 43396
    //   #4290	-> 43412
    //   #4291	-> 43432
    //   #4292	-> 43442
    //   #4293	-> 43462
    //   #4294	-> 43473
    //   #4295	-> 43480
    //   #4296	-> 43490
    //   #4297	-> 43506
    //   #4301	-> 43524
    //   #4303	-> 43537
    //   #4306	-> 43544
    //   #4308	-> 43560
    //   #4309	-> 43564
    //   #4310	-> 43583
    //   #4311	-> 43643
    //   #4312	-> 43696
    //   #4316	-> 43735
    //   #4317	-> 43784
    //   #4318	-> 43822
    //   #4319	-> 43836
    //   #4321	-> 43844
    //   #4322	-> 43856
    //   #4323	-> 43866
    //   #4324	-> 43926
    //   #4326	-> 43947
    //   #4327	-> 43960
    //   #4329	-> 43968
    //   #4330	-> 43980
    //   #4331	-> 43997
    //   #4333	-> 44029
    //   #4335	-> 44062
    //   #4336	-> 44111
    //   #4327	-> 44160
    //   #4340	-> 44178
    //   #4342	-> 44201
    //   #4344	-> 44203
    //   #4338	-> 44213
    //   #4319	-> 44218
    //   #4349	-> 44241
    //   #4351	-> 44243
    //   #4314	-> 44253
    //   #4354	-> 44258
    //   #4357	-> 44265
    //   #4359	-> 44281
    //   #4360	-> 44290
    //   #4361	-> 44308
    //   #4362	-> 44325
    //   #4363	-> 44328
    //   #4364	-> 44349
    //   #4365	-> 44366
    //   #4368	-> 44369
    //   #4369	-> 44390
    //   #4370	-> 44434
    //   #4371	-> 44453
    //   #4372	-> 44463
    //   #4374	-> 44474
    //   #4375	-> 44488
    //   #4376	-> 44497
    //   #4377	-> 44509
    //   #4378	-> 44521
    //   #4379	-> 44549
    //   #4380	-> 44566
    //   #4381	-> 44583
    //   #4382	-> 44599
    //   #4383	-> 44610
    //   #4384	-> 44621
    //   #4385	-> 44628
    //   #4386	-> 44638
    //   #4387	-> 44654
    //   #4388	-> 44664
    //   #4389	-> 44689
    //   #4391	-> 44706
    //   #4393	-> 44718
    //   #4395	-> 44735
    //   #4396	-> 44749
    //   #4397	-> 44756
    //   #4399	-> 44761
    //   #4400	-> 44773
    //   #4401	-> 44782
    //   #4402	-> 44793
    //   #4403	-> 44809
    //   #4397	-> 44816
    //   #4407	-> 44831
    //   #4409	-> 44848
    //   #4410	-> 44862
    //   #4411	-> 44887
    //   #4413	-> 44897
    //   #4414	-> 44904
    //   #4416	-> 44909
    //   #4417	-> 44921
    //   #4418	-> 44930
    //   #4419	-> 44941
    //   #4420	-> 44957
    //   #4414	-> 44964
    //   #4424	-> 44979
    //   #4426	-> 45000
    //   #4427	-> 45018
    //   #4428	-> 45025
    //   #4430	-> 45030
    //   #4431	-> 45042
    //   #4432	-> 45051
    //   #4433	-> 45062
    //   #4434	-> 45078
    //   #4428	-> 45085
    //   #4437	-> 45100
    //   #4439	-> 45121
    //   #4440	-> 45139
    //   #4441	-> 45146
    //   #4443	-> 45151
    //   #4444	-> 45163
    //   #4441	-> 45209
    //   #4447	-> 45224
    //   #4449	-> 45240
    //   #4451	-> 45242
    //   #4366	-> 45252
    //   #4456	-> 45257
    //   #4457	-> 45278
    //   #4458	-> 45322
    //   #4459	-> 45341
    //   #4460	-> 45351
    //   #4461	-> 45357
    //   #4462	-> 45362
    //   #4464	-> 45383
    //   #4466	-> 45397
    //   #4467	-> 45409
    //   #4469	-> 45433
    //   #4464	-> 45441
    //   #4473	-> 45454
    //   #4475	-> 45470
    //   #4477	-> 45472
    //   #4454	-> 45482
    //   #4483	-> 45487
    //   #4484	-> 45502
    //   #4486	-> 45507
    //   #4487	-> 45519
    //   #4489	-> 45535
    //   #4490	-> 45544
    //   #4491	-> 45565
    //   #4492	-> 45589
    //   #4484	-> 45596
    //   #4496	-> 45616
    //   #4498	-> 45618
    //   #4481	-> 45628
    //   #4501	-> 45633
    //   #4502	-> 45644
    //   #4503	-> 45669
    //   #4504	-> 45683
    //   #4505	-> 45696
    //   #4507	-> 45711
    //   #4508	-> 45726
    //   #4509	-> 45743
    //   #4510	-> 45760
    //   #4511	-> 45777
    //   #4512	-> 45794
    //   #4513	-> 45811
    //   #4514	-> 45828
    //   #4515	-> 45847
    //   #4516	-> 45869
    //   #4517	-> 45904
    //   #4518	-> 45926
    //   #4519	-> 45954
    //   #4520	-> 45986
    //   #4522	-> 46011
    //   #4523	-> 46032
    //   #4524	-> 46044
    //   #4525	-> 46064
    //   #4526	-> 46127
    //   #4527	-> 46145
    //   #4529	-> 46155
    //   #4531	-> 46226
    //   #4534	-> 46243
    //   #4537	-> 46280
    //   #4539	-> 46287
    //   #4537	-> 46290
    //   #4538	-> 46292
    //   #4539	-> 46309
    //   #4543	-> 46316
    //   #4545	-> 46346
    //   #4541	-> 46348
    //   #4550	-> 46353
    //   #4551	-> 46373
    //   #4552	-> 46393
    //   #4553	-> 46420
    //   #4554	-> 46447
    //   #4555	-> 46474
    //   #4558	-> 46478
    //   #4560	-> 46501
    //   #4562	-> 46503
    //   #4556	-> 46513
    //   #4564	-> 46518
    //   #4565	-> 46557
    //   #4568	-> 46564
    //   #4570	-> 46580
    //   #4571	-> 46584
    //   #4573	-> 46595
    //   #4574	-> 46609
    //   #4575	-> 46618
    //   #4576	-> 46630
    //   #4579	-> 46642
    //   #4580	-> 46670
    //   #4581	-> 46687
    //   #4582	-> 46704
    //   #4584	-> 46725
    //   #4586	-> 46727
    //   #4577	-> 46736
    //   #4588	-> 46741
    //   #4589	-> 46751
    //   #4590	-> 46771
    //   #4591	-> 46785
    //   #4592	-> 46796
    //   #4593	-> 46807
    //   #4594	-> 46814
    //   #4595	-> 46823
    //   #4597	-> 46841
    //   #4598	-> 46856
    //   #4601	-> 46863
    //   #4603	-> 46886
    //   #4605	-> 46902
    //   #4606	-> 46913
    //   #4607	-> 46933
    //   #4608	-> 46953
    //   #4609	-> 46966
    //   #4610	-> 46979
    //   #4611	-> 46990
    //   #4612	-> 47002
    //   #4613	-> 47017
    //   #4614	-> 47056
    //   #4616	-> 47092
    //   #4617	-> 47100
    //   #4618	-> 47125
    //   #4619	-> 47128
    //   #4621	-> 47136
    //   #4622	-> 47148
    //   #4624	-> 47171
    //   #4625	-> 47194
    //   #4626	-> 47217
    //   #4628	-> 47273
    //   #4629	-> 47276
    //   #4631	-> 47281
    //   #4633	-> 47337
    //   #4634	-> 47340
    //   #4636	-> 47345
    //   #4638	-> 47399
    //   #4639	-> 47415
    //   #4640	-> 47418
    //   #4619	-> 47423
    //   #4644	-> 47441
    //   #4646	-> 47461
    //   #4647	-> 47483
    //   #4648	-> 47492
    //   #4649	-> 47501
    //   #4650	-> 47580
    //   #4651	-> 47592
    //   #4652	-> 47603
    //   #4653	-> 47610
    //   #4654	-> 47619
    //   #4655	-> 47631
    //   #4656	-> 47643
    //   #4657	-> 47655
    //   #4658	-> 47666
    //   #4660	-> 47677
    //   #4661	-> 47690
    //   #4662	-> 47741
    //   #4666	-> 47756
    //   #4668	-> 47766
    //   #4669	-> 47773
    //   #4670	-> 47780
    //   #4671	-> 47786
    //   #4674	-> 47793
    //   #4676	-> 47816
    //   #4677	-> 47824
    //   #4678	-> 47843
    //   #4679	-> 47858
    //   #4680	-> 47861
    //   #4682	-> 47867
    //   #4684	-> 47875
    //   #4685	-> 47887
    //   #4687	-> 47913
    //   #4688	-> 47916
    //   #4682	-> 47941
    //   #4691	-> 47969
    //   #4693	-> 47979
    //   #4694	-> 47988
    //   #4695	-> 48004
    //   #4696	-> 48020
    //   #4697	-> 48036
    //   #4698	-> 48061
    //   #4680	-> 48068
    //   #4701	-> 48080
    //   #4702	-> 48087
    //   #4703	-> 48094
    //   #4704	-> 48101
    //   #4705	-> 48108
    //   #4706	-> 48114
    //   #4708	-> 48116
    //   #4710	-> 48139
    //   #4711	-> 48147
    //   #4712	-> 48166
    //   #4713	-> 48181
    //   #4714	-> 48190
    //   #4716	-> 48196
    //   #4718	-> 48204
    //   #4719	-> 48216
    //   #4721	-> 48242
    //   #4722	-> 48267
    //   #4723	-> 48280
    //   #4716	-> 48304
    //   #4714	-> 48322
    //   #4727	-> 48334
    //   #4728	-> 48343
    //   #4729	-> 48354
    //   #4730	-> 48361
    //   #4731	-> 48366
    //   #4733	-> 48376
    //   #4734	-> 48383
    //   #4735	-> 48390
    //   #4736	-> 48397
    //   #4737	-> 48422
    //   #4738	-> 48428
    //   #4739	-> 48443
    //   #4741	-> 48445
    //   #4743	-> 48468
    //   #4744	-> 48476
    //   #4745	-> 48495
    //   #4746	-> 48510
    //   #4747	-> 48519
    //   #4749	-> 48525
    //   #4751	-> 48533
    //   #4752	-> 48545
    //   #4754	-> 48571
    //   #4755	-> 48596
    //   #4756	-> 48624
    //   #4757	-> 48637
    //   #4758	-> 48654
    //   #4759	-> 48661
    //   #4749	-> 48672
    //   #4747	-> 48690
    //   #4763	-> 48702
    //   #4764	-> 48711
    //   #4765	-> 48722
    //   #4766	-> 48729
    //   #4767	-> 48734
    //   #4769	-> 48744
    //   #4770	-> 48751
    //   #4771	-> 48758
    //   #4772	-> 48765
    //   #4773	-> 48790
    //   #4774	-> 48796
    //   #4775	-> 48811
    //   #4777	-> 48813
    //   #4779	-> 48852
    //   #4780	-> 48861
    //   #4781	-> 48869
    //   #4782	-> 48888
    //   #4783	-> 48903
    //   #4785	-> 48909
    //   #4787	-> 48917
    //   #4788	-> 48929
    //   #4785	-> 48972
    //   #4783	-> 48990
    //   #4791	-> 49002
    //   #4794	-> 49006
    //   #4796	-> 49029
    //   #4798	-> 49031
    //   #4792	-> 49041
    //   #4800	-> 49046
    //   #4802	-> 49053
    //   #4804	-> 49412
    //   #4805	-> 49466
    //   #4808	-> 49474
    //   #4810	-> 49490
    //   #4811	-> 49496
    //   #4812	-> 49505
    //   #4814	-> 49510
    //   #4815	-> 49522
    //   #4817	-> 49541
    //   #4818	-> 49549
    //   #4819	-> 49562
    //   #4820	-> 49572
    //   #4822	-> 49591
    //   #4823	-> 49631
    //   #4824	-> 49648
    //   #4826	-> 49663
    //   #4812	-> 49700
    //   #4831	-> 49715
    //   #4832	-> 49731
    //   #4833	-> 49743
    //   #4834	-> 49835
    //   #4835	-> 49844
    //   #4836	-> 49847
    //   #4838	-> 49850
    //   #4840	-> 49949
    //   #4842	-> 49971
    //   #4845	-> 50026
    //   #4847	-> 50029
    //   #4848	-> 50056
    //   #4850	-> 50090
    //   #4851	-> 50120
    //   #4852	-> 50219
    //   #4853	-> 50241
    //   #4854	-> 50286
    //   #4856	-> 50296
    //   #4857	-> 50313
    //   #4861	-> 50362
    //   #4864	-> 50395
    //   #4866	-> 50405
    //   #4868	-> 50441
    //   #4869	-> 50444
    //   #4870	-> 50459
    //   #4872	-> 50464
    //   #4873	-> 50474
    //   #4875	-> 50490
    //   #4876	-> 50499
    //   #4877	-> 50550
    //   #4879	-> 50561
    //   #4880	-> 50568
    //   #4881	-> 50575
    //   #4882	-> 50579
    //   #4883	-> 50615
    //   #4884	-> 50622
    //   #4885	-> 50720
    //   #4886	-> 50727
    //   #4887	-> 50734
    //   #4888	-> 50740
    //   #4891	-> 50757
    //   #4894	-> 50771
    //   #4895	-> 50778
    //   #4896	-> 50781
    //   #4898	-> 50786
    //   #4899	-> 50795
    //   #4901	-> 50805
    //   #4902	-> 50820
    //   #4896	-> 50830
    //   #4905	-> 50840
    //   #4908	-> 50855
    //   #4911	-> 50862
    //   #4908	-> 50865
    //   #4909	-> 50867
    //   #4910	-> 50872
    //   #4911	-> 50882
    //   #4913	-> 50894
    //   #4915	-> 50896
    //   #4889	-> 50906
    //   #4917	-> 50911
    //   #4918	-> 50916
    //   #4919	-> 50932
    //   #4921	-> 50934
    //   #4922	-> 50944
    //   #4924	-> 51013
    //   #4925	-> 51051
    //   #4926	-> 51054
    //   #4870	-> 51057
    //   #4928	-> 51067
    //   #4930	-> 51077
    //   #4931	-> 51081
    //   #4937	-> 51100
    //   #4938	-> 51202
    //   #4939	-> 51301
    //   #4940	-> 51333
    //   #4941	-> 51340
    //   #4942	-> 51347
    //   #4943	-> 51353
    //   #4946	-> 51355
    //   #4948	-> 51378
    //   #4949	-> 51383
    //   #4950	-> 51392
    //   #4953	-> 51403
    //   #4954	-> 51424
    //   #4955	-> 51443
    //   #4956	-> 51454
    //   #4957	-> 51471
    //   #4960	-> 51474
    //   #4963	-> 51491
    //   #4965	-> 51498
    //   #4963	-> 51501
    //   #4964	-> 51503
    //   #4965	-> 51520
    //   #4966	-> 51527
    //   #4967	-> 51544
    //   #4968	-> 51562
    //   #4970	-> 51572
    //   #4971	-> 51581
    //   #4973	-> 51596
    //   #4987	-> 51610
    //   #4988	-> 51650
    //   #4990	-> 51657
    //   #4991	-> 51691
    //   #4994	-> 51693
    //   #4996	-> 51733
    //   #4998	-> 51761
    //   #4999	-> 51767
    //   #5002	-> 51782
    //   #5003	-> 51787
    //   #5004	-> 51806
    //   #5005	-> 51823
    //   #5007	-> 51961
    //   #5008	-> 51970
    //   #5009	-> 51986
    //   #5011	-> 52002
    //   #5012	-> 52026
    //   #5013	-> 52042
    //   #5014	-> 52058
    //   #5015	-> 52067
    //   #5016	-> 52073
    //   #5018	-> 52078
    //   #5019	-> 52100
    //   #5020	-> 52108
    //   #5022	-> 52127
    //   #5023	-> 52135
    //   #5024	-> 52194
    //   #5025	-> 52204
    //   #5027	-> 52223
    //   #5028	-> 52257
    //   #5029	-> 52271
    //   #5031	-> 52286
    //   #5016	-> 52323
    //   #5034	-> 52338
    //   #5035	-> 52353
    //   #5036	-> 52364
    //   #5037	-> 52382
    //   #5039	-> 52392
    //   #5040	-> 52401
    //   #5042	-> 52416
    //   #5055	-> 52430
    //   #5056	-> 52433
    //   #5058	-> 52438
    //   #5060	-> 52490
    //   #5061	-> 52551
    //   #5063	-> 52558
    //   #5056	-> 52564
    //   #5065	-> 52632
    //   #5066	-> 52641
    //   #5070	-> 52685
    //   #5072	-> 52738
    //   #5073	-> 52744
    //   #5075	-> 52751
    //   #5077	-> 52767
    //   #5078	-> 52804
    //   #5079	-> 52843
    //   #5080	-> 52878
    //   #5081	-> 52883
    //   #5083	-> 52917
    //   #5084	-> 52933
    //   #5085	-> 52938
    //   #5087	-> 52946
    //   #5085	-> 52971
    //   #5089	-> 53008
    //   #5091	-> 53056
    //   #5093	-> 53090
    //   #5094	-> 53147
    //   #5095	-> 53158
    //   #5097	-> 53177
    //   #5099	-> 53211
    //   #5101	-> 53239
    //   #5102	-> 53273
    //   #5104	-> 53280
    //   #5106	-> 53296
    //   #5107	-> 53331
    //   #5108	-> 53370
    //   #5109	-> 53373
    //   #5110	-> 53418
    //   #5111	-> 53423
    //   #5112	-> 53518
    //   #5113	-> 53571
    //   #5115	-> 53578
    //   #5117	-> 53594
    //   #5118	-> 53599
    //   #5119	-> 53662
    //   #5120	-> 53667
    //   #5121	-> 53701
    //   #5123	-> 53708
    //   #5125	-> 53738
    //   #5126	-> 53743
    //   #5131	-> 53819
    //   #5132	-> 53829
    //   #5134	-> 53874
    //   #5136	-> 53876
    //   #5137	-> 53885
    //   #5129	-> 53905
    //   #5140	-> 53910
    //   #5141	-> 53915
    //   #5142	-> 53949
    //   #5144	-> 53956
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	53958	0	this	Lcrushftp/server/ServerSessionAJAX;
    //   0	53958	1	request	Ljava/util/Properties;
    //   0	53958	2	byteRanges	Ljava/util/Vector;
    //   0	53958	3	req_id	Ljava/lang/String;
    //   15	53943	4	site	Ljava/lang/String;
    //   26	53932	5	command	Ljava/lang/String;
    //   115	60	6	groupName	Ljava/lang/String;
    //   187	53771	6	session_id	Ljava/lang/String;
    //   948	148	7	v	Ljava/util/Vector;
    //   979	94	8	vv	Ljava/util/Vector;
    //   982	87	9	x	I
    //   1008	43	10	settings	Ljava/util/Properties;
    //   1528	52430	7	last_activity_time	Ljava/lang/String;
    //   1559	47	8	response	Ljava/lang/String;
    //   1627	49	8	response	Ljava/lang/String;
    //   2026	526	8	response	Ljava/lang/String;
    //   2250	302	9	userTunnels	Ljava/lang/String;
    //   2264	288	10	tunnels	Ljava/util/Vector;
    //   2279	273	11	tunnel	Ljava/util/Properties;
    //   2282	116	12	x	I
    //   2299	81	13	pp	Ljava/util/Properties;
    //   2511	34	12	t	Lcom/crushftp/tunnel2/Tunnel2;
    //   2583	7	8	response	Ljava/lang/String;
    //   2610	846	8	response	Ljava/lang/String;
    //   2896	560	9	userTunnels	Ljava/lang/String;
    //   2910	546	10	tunnels	Ljava/util/Vector;
    //   2925	531	11	tunnel	Ljava/util/Properties;
    //   2928	116	12	x	I
    //   2945	81	13	pp	Ljava/util/Properties;
    //   3314	130	12	sc	Lcom/crushftp/tunnel3/StreamController;
    //   3494	7	8	response	Ljava/lang/String;
    //   3581	751	8	item2	Ljava/util/Properties;
    //   3591	741	9	privs	Ljava/lang/String;
    //   3601	731	10	syncID	Ljava/lang/String;
    //   3620	608	11	baos	Ljava/io/ByteArrayOutputStream;
    //   3631	597	12	oos	Ljava/io/ObjectOutputStream;
    //   3641	587	13	uploadOnly	Ljava/lang/String;
    //   3720	367	14	o	Ljava/lang/Object;
    //   3745	140	15	queue	Ljava/util/Vector;
    //   3754	131	16	action	Ljava/util/Properties;
    //   3896	134	15	vfs_path	Ljava/lang/String;
    //   4233	97	11	error_msg	Ljava/lang/String;
    //   4412	313	8	item	Ljava/util/Properties;
    //   4428	297	9	syncID	Ljava/lang/String;
    //   4463	129	10	queue	Ljava/util/Vector;
    //   4472	120	11	action	Ljava/util/Properties;
    //   4619	30	10	response	Ljava/lang/String;
    //   4654	69	10	error_msg	Ljava/lang/String;
    //   4805	353	8	item	Ljava/util/Properties;
    //   4821	337	9	syncID	Ljava/lang/String;
    //   4869	151	10	queue	Ljava/util/Vector;
    //   4878	142	11	action	Ljava/util/Properties;
    //   5052	30	10	response	Ljava/lang/String;
    //   5087	69	10	error_msg	Ljava/lang/String;
    //   5206	559	8	appname	Ljava/lang/String;
    //   5215	550	9	baos	Ljava/io/ByteArrayOutputStream;
    //   5218	547	10	fin	Ljava/io/FileInputStream;
    //   5417	348	11	xml	Ljava/lang/String;
    //   5447	318	12	line	Ljava/lang/String;
    //   5665	100	13	utf8	[B
    //   5814	691	8	appname	Ljava/lang/String;
    //   5823	682	9	baos	Ljava/io/ByteArrayOutputStream;
    //   5826	679	10	fin	Ljava/io/FileInputStream;
    //   6021	484	11	pass	Ljava/lang/String;
    //   6071	434	12	xml	Ljava/lang/String;
    //   6101	404	13	line	Ljava/lang/String;
    //   6405	100	14	utf8	[B
    //   6554	559	8	appname	Ljava/lang/String;
    //   6563	550	9	baos	Ljava/io/ByteArrayOutputStream;
    //   6566	547	10	fin	Ljava/io/FileInputStream;
    //   6765	348	11	xml	Ljava/lang/String;
    //   6795	318	12	line	Ljava/lang/String;
    //   7013	100	13	utf8	[B
    //   7151	281	8	v	Ljava/util/Vector;
    //   7284	30	9	p	Ljava/util/Properties;
    //   7323	109	9	baos	Ljava/io/ByteArrayOutputStream;
    //   7334	98	10	oos	Ljava/io/ObjectOutputStream;
    //   7537	30	8	response	Ljava/lang/String;
    //   7635	92	8	v	Ljava/util/Vector;
    //   7795	89	8	o	Ljava/lang/Object;
    //   7921	555	8	path	Ljava/lang/String;
    //   8055	421	9	the_dir	Ljava/lang/String;
    //   8123	353	10	quota	Ljava/lang/String;
    //   8148	218	11	queue	Ljava/util/Vector;
    //   8157	209	12	action	Ljava/util/Properties;
    //   8235	131	13	the_dir2	Ljava/lang/String;
    //   8495	565	8	path_str	Ljava/lang/String;
    //   8521	15	9	e	Ljava/lang/Exception;
    //   8566	245	9	queue	Ljava/util/Vector;
    //   8575	236	10	action	Ljava/util/Properties;
    //   8647	164	11	root_item	Ljava/util/Properties;
    //   8664	147	12	c	Lcom/crushftp/client/GenericClient;
    //   8804	7	13	response	Ljava/lang/String;
    //   8857	203	9	item	Ljava/util/Properties;
    //   8866	194	10	md5s	Ljava/util/Vector;
    //   8869	191	11	request2	Ljava/util/Properties;
    //   8885	175	12	md5Worker	Lcrushftp/server/ServerSessionAJAX$1$multiThreadMd5;
    //   8971	32	13	md5	Ljava/lang/String;
    //   9110	247	8	response	Ljava/lang/String;
    //   9135	202	9	queue	Ljava/util/Vector;
    //   9144	193	10	action	Ljava/util/Properties;
    //   9216	121	11	root_item	Ljava/util/Properties;
    //   9233	104	12	c	Lcom/crushftp/client/GenericClient;
    //   9407	320	8	response	Ljava/lang/String;
    //   9432	252	9	queue	Ljava/util/Vector;
    //   9441	243	10	action	Ljava/util/Properties;
    //   9513	171	11	root_item	Ljava/util/Properties;
    //   9530	154	12	c	Lcom/crushftp/client/GenericClient;
    //   9749	346	8	keys	Ljava/util/Enumeration;
    //   9758	337	9	metaInfo	Ljava/util/Properties;
    //   9775	178	10	key	Ljava/lang/String;
    //   9802	151	11	val	Ljava/lang/String;
    //   9901	15	12	global_variables	Ljava/util/Properties;
    //   10088	7	10	response	Ljava/lang/String;
    //   10590	215	8	data_item	Ljava/lang/String;
    //   10826	3086	8	status	Ljava/lang/String;
    //   10856	2951	9	info	Ljava/util/Properties;
    //   10922	2885	10	list	Ljava/util/Vector;
    //   10925	2882	11	writeGroupsInheritance	Z
    //   10963	296	12	groupName	Ljava/lang/String;
    //   11046	213	13	groups	Ljava/util/Properties;
    //   11077	182	14	real_groups	Ljava/util/Properties;
    //   11084	175	15	keys	Ljava/util/Enumeration;
    //   11101	48	16	key	Ljava/lang/String;
    //   11188	39	16	key	Ljava/lang/String;
    //   11297	394	12	groupName	Ljava/lang/String;
    //   11380	311	13	inheritance	Ljava/util/Properties;
    //   11406	285	14	keys	Ljava/util/Enumeration;
    //   11423	140	15	key	Ljava/lang/String;
    //   11458	105	16	sub_users	Ljava/util/Vector;
    //   11467	53	17	x	I
    //   11484	23	18	sub_user	Ljava/lang/String;
    //   11590	101	15	real_inheritance	Ljava/util/Properties;
    //   11614	38	16	key	Ljava/lang/String;
    //   11804	1993	12	usernames	[Ljava/lang/String;
    //   11807	1985	13	x	I
    //   11822	1954	14	username	Ljava/lang/String;
    //   11854	1922	15	groups	Ljava/util/Properties;
    //   11888	1888	16	groupName	Ljava/lang/String;
    //   11945	1831	17	group	Ljava/util/Vector;
    //   11958	1818	18	pendingSelfRegistration	Ljava/util/Vector;
    //   12055	1721	19	inheritance	Ljava/util/Properties;
    //   12235	1541	20	new_user	Ljava/util/Properties;
    //   12355	1421	21	linked_vfs	Ljava/util/Vector;
    //   12358	95	22	xx	I
    //   12378	47	23	linked_user	Ljava/lang/String;
    //   12479	199	22	pass	Ljava/lang/String;
    //   12697	1079	22	tempVFS	Lcrushftp/server/VFS;
    //   12715	1061	23	user	Ljava/util/Properties;
    //   12885	20	24	vv	Ljava/util/Vector;
    //   13161	20	24	vv	Ljava/util/Vector;
    //   13218	72	24	vv	Ljava/util/Vector;
    //   13393	235	24	virtual	Ljava/util/Properties;
    //   13400	228	25	keys	Ljava/util/Enumeration;
    //   13403	225	26	ok	Z
    //   13420	159	27	key	Ljava/lang/String;
    //   13453	126	28	vfs_item	Ljava/util/Properties;
    //   13733	43	24	msg	Ljava/lang/String;
    //   13809	23	9	e	Ljava/lang/Exception;
    //   13844	17	9	e	Ljava/lang/Exception;
    //   13871	41	9	response	Ljava/lang/String;
    //   14034	293	8	msg	Ljava/lang/String;
    //   14050	203	9	c	Lcom/crushftp/client/GenericClient;
    //   14056	163	10	keys	Ljava/util/Enumeration;
    //   14073	70	11	key	Ljava/lang/String;
    //   14134	9	12	val	Ljava/lang/String;
    //   14174	45	11	vrl	Lcom/crushftp/client/VRL;
    //   14255	29	9	e	Ljava/lang/Exception;
    //   14472	261	8	listingProp	Ljava/util/Properties;
    //   14476	257	9	altList	Ljava/lang/String;
    //   14480	253	10	response	Ljava/lang/String;
    //   14623	10	11	e	Ljava/lang/Exception;
    //   14987	1242	8	listingProp	Ljava/util/Properties;
    //   15018	617	9	items	Ljava/util/Vector;
    //   15039	596	10	path	Ljava/lang/String;
    //   15291	10	11	e	Ljava/lang/Exception;
    //   15332	66	11	x	I
    //   15349	31	12	p	Ljava/util/Properties;
    //   15366	14	13	vrl	Lcom/crushftp/client/VRL;
    //   15413	222	11	altList	Ljava/lang/String;
    //   15509	126	12	response	Ljava/lang/String;
    //   15534	10	13	e	Ljava/lang/Exception;
    //   15718	222	9	altList	Ljava/lang/String;
    //   15814	126	10	response	Ljava/lang/String;
    //   15839	10	11	e	Ljava/lang/Exception;
    //   15955	274	9	groupName	Ljava/lang/String;
    //   16029	200	10	path	Ljava/lang/String;
    //   16207	22	11	response	Ljava/lang/String;
    //   16268	55	8	result	Ljava/lang/Object;
    //   17116	600	8	the_dir	Ljava/lang/String;
    //   17133	583	9	item	Ljava/util/Properties;
    //   17142	574	10	config	Ljava/util/Properties;
    //   17157	559	11	urlc	Lcom/crushftp/client/URLConnection;
    //   17160	556	12	loops	I
    //   17215	246	13	c	Lcom/crushftp/client/GenericClient;
    //   17353	108	14	b	[B
    //   17369	92	15	pout	Ljava/io/OutputStream;
    //   17590	126	13	pin	Ljava/io/InputStream;
    //   17597	119	14	b	[B
    //   17613	103	15	max_len	I
    //   17616	100	16	bytesRead	I
    //   17724	268	8	xml	Ljava/lang/String;
    //   17814	178	9	utf8	[B
    //   17895	97	10	appname	Ljava/lang/String;
    //   18421	128	8	username	Ljava/lang/String;
    //   18439	110	9	info	Ljava/util/Properties;
    //   18484	47	10	list	Ljava/util/Vector;
    //   20176	219	8	queue	Ljava/util/Vector;
    //   20185	210	9	action	Ljava/util/Properties;
    //   20240	155	10	singleton_id	Ljava/lang/String;
    //   20445	65	8	response	Ljava/lang/String;
    //   20830	232	8	result	Z
    //   20835	227	9	code	I
    //   20840	222	10	response	Ljava/lang/String;
    //   20877	185	11	activeUpload	Ljava/util/Properties;
    //   21098	452	8	the_dir	Ljava/lang/String;
    //   21181	369	9	item	Ljava/util/Properties;
    //   21190	360	10	config	Ljava/util/Properties;
    //   21205	345	11	urlc	Lcom/crushftp/client/URLConnection;
    //   21208	342	12	loops	I
    //   21263	228	13	c	Lcom/crushftp/client/GenericClient;
    //   21383	108	14	b	[B
    //   21399	92	15	pout	Ljava/io/OutputStream;
    //   21515	35	13	baos	Ljava/io/ByteArrayOutputStream;
    //   21554	330	8	error	Ljava/lang/String;
    //   21568	316	9	the_dir	Ljava/lang/String;
    //   21727	101	10	item	Ljava/util/Properties;
    //   21744	84	11	c	Lcom/crushftp/client/GenericClient;
    //   21780	22	12	e	Ljava/lang/Exception;
    //   21877	7	10	response	Ljava/lang/String;
    //   21920	7	8	response	Ljava/lang/String;
    //   21963	7	8	response	Ljava/lang/String;
    //   21991	182	8	response	Ljava/lang/String;
    //   22028	145	9	activeUpload	Ljava/util/Properties;
    //   22149	24	10	result	Z
    //   22238	721	8	the_dir	Ljava/lang/String;
    //   22318	641	9	item	Ljava/util/Properties;
    //   22327	632	10	config	Ljava/util/Properties;
    //   22342	617	11	urlc	Lcom/crushftp/client/URLConnection;
    //   22345	614	12	loops	I
    //   22400	304	13	c	Lcom/crushftp/client/GenericClient;
    //   22596	108	14	b	[B
    //   22612	92	15	pout	Ljava/io/OutputStream;
    //   22833	126	13	pin	Ljava/io/InputStream;
    //   22840	119	14	b	[B
    //   22856	103	15	max_len	I
    //   22859	100	16	bytesRead	I
    //   22968	1215	8	paths_raw	Ljava/util/Vector;
    //   22977	1206	9	paths_updated	Ljava/util/Vector;
    //   22992	1191	10	path_str	[Ljava/lang/String;
    //   22996	1187	11	path	Ljava/lang/String;
    //   22999	644	12	x	I
    //   23399	93	13	item	Ljava/util/Properties;
    //   23545	75	13	item	Ljava/util/Properties;
    //   23693	490	12	s	Ljava/lang/String;
    //   23709	474	13	downloadFilename	Ljava/lang/String;
    //   23848	335	14	validSecs	I
    //   23941	242	15	zaous	Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;
    //   23944	229	16	x	I
    //   24030	125	17	zae	Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
    //   24068	87	18	item	Ljava/util/Properties;
    //   24134	21	19	f	Lcom/crushftp/client/File_S;
    //   24226	615	8	the_dir	Ljava/lang/String;
    //   24306	535	9	item	Ljava/util/Properties;
    //   24315	526	10	config	Ljava/util/Properties;
    //   24330	511	11	urlc	Lcom/crushftp/client/URLConnection;
    //   24333	508	12	loops	I
    //   24388	394	13	c	Lcom/crushftp/client/GenericClient;
    //   24674	108	14	b	[B
    //   24690	92	15	pout	Ljava/io/OutputStream;
    //   24806	35	13	baos	Ljava/io/ByteArrayOutputStream;
    //   24844	1004	8	customForm	Ljava/util/Properties;
    //   24847	1001	9	found_exif_key	Z
    //   24884	328	10	customForms	Ljava/util/Vector;
    //   24897	74	11	x	I
    //   24914	39	12	p	Ljava/util/Properties;
    //   25026	186	11	entries	Ljava/util/Vector;
    //   25029	183	12	x	I
    //   25046	148	13	p	Ljava/util/Properties;
    //   25217	631	10	error_message	Ljava/lang/String;
    //   25246	602	11	paths	[Ljava/lang/String;
    //   25249	566	12	x	I
    //   25261	538	13	path	Ljava/lang/String;
    //   25292	507	14	item	Ljava/util/Properties;
    //   25315	484	15	srcFile	Ljava/lang/String;
    //   25396	175	16	xx	I
    //   25417	132	17	preview	Lcrushftp/handlers/PreviewWorker;
    //   25616	162	16	metaInfo	Ljava/util/Properties;
    //   25841	7	12	response	Ljava/lang/String;
    //   25874	537	8	response	Ljava/lang/String;
    //   25901	510	9	the_command_data	Ljava/lang/String;
    //   25919	492	10	responseText	Ljava/lang/String;
    //   25979	44	11	pp	Ljava/util/Properties;
    //   26082	288	11	c	Lcom/crushftp/client/GenericClient;
    //   26123	211	12	vrl	Lcom/crushftp/client/VRL;
    //   26209	99	13	activeUpload	Ljava/util/Properties;
    //   26216	92	14	keys	Ljava/util/Enumeration;
    //   26237	51	15	key	Ljava/lang/String;
    //   26249	39	16	val	Ljava/lang/String;
    //   26451	205	8	response	Ljava/lang/String;
    //   26478	178	9	the_command_data	Ljava/lang/String;
    //   26502	154	10	fileItem	Ljava/util/Properties;
    //   26615	41	11	responseText	Ljava/lang/String;
    //   26677	208	8	response	Ljava/lang/String;
    //   26714	171	9	activeUpload	Ljava/util/Properties;
    //   26718	167	10	responseText	Ljava/lang/String;
    //   26906	42	8	response	Ljava/lang/String;
    //   26969	2291	8	response	Ljava/lang/String;
    //   26983	2277	9	customForms	Ljava/util/Vector;
    //   26996	2256	10	customForm	Ljava/util/Properties;
    //   26999	72	11	x	I
    //   27016	37	12	p	Ljava/util/Properties;
    //   27084	2168	11	entry	Ljava/util/Properties;
    //   27129	2123	12	entries	Ljava/util/Vector;
    //   27132	75	13	xx	I
    //   27149	40	14	p	Ljava/util/Properties;
    //   27226	2026	13	search_entries	Ljava/util/Vector;
    //   27237	2015	14	q	Ljava/lang/String;
    //   27391	1099	15	userText	Lcom/crushftp/client/File_S;
    //   27455	207	16	br	Ljava/io/BufferedReader;
    //   27459	203	17	data	Ljava/lang/String;
    //   27505	136	18	key	Ljava/lang/String;
    //   27509	132	19	val	Ljava/lang/String;
    //   27518	123	20	p	Ljava/util/Properties;
    //   27683	807	16	groups	Ljava/util/Properties;
    //   27690	800	17	keys	Ljava/util/Enumeration;
    //   27707	413	18	group_name	Ljava/lang/String;
    //   27719	401	19	v	Ljava/util/Vector;
    //   27821	299	20	groupText	Lcom/crushftp/client/File_S;
    //   27885	235	21	br	Ljava/io/BufferedReader;
    //   27889	231	22	data	Ljava/lang/String;
    //   27935	164	23	key	Ljava/lang/String;
    //   27939	160	24	val	Ljava/lang/String;
    //   27948	151	25	p	Ljava/util/Properties;
    //   28201	289	18	globalText	Lcom/crushftp/client/File_S;
    //   28278	207	19	br	Ljava/io/BufferedReader;
    //   28282	203	20	data	Ljava/lang/String;
    //   28328	136	21	key	Ljava/lang/String;
    //   28332	132	22	val	Ljava/lang/String;
    //   28341	123	23	p	Ljava/util/Properties;
    //   28527	346	15	item	Ljava/util/Properties;
    //   28608	265	16	items	Ljava/util/Vector;
    //   28624	249	17	event	Ljava/util/Properties;
    //   28703	170	18	info	Ljava/util/Properties;
    //   28711	162	19	async	Z
    //   28794	66	20	x	I
    //   28811	36	21	p	Ljava/util/Properties;
    //   28922	124	15	parent	Ljava/lang/Object;
    //   29006	40	16	method	Ljava/lang/reflect/Method;
    //   29023	23	17	o	Ljava/lang/Object;
    //   29048	44	15	ee	Ljava/lang/Exception;
    //   29117	135	15	r	Ljava/lang/StringBuffer;
    //   29129	107	16	x	I
    //   29146	72	17	p	Ljava/util/Properties;
    //   29281	45	8	response	Ljava/lang/String;
    //   29347	825	8	response	Ljava/lang/String;
    //   29379	793	9	names	[Ljava/lang/String;
    //   29383	789	10	error_message	Ljava/lang/String;
    //   29386	725	11	x	I
    //   29398	643	12	the_dir	Ljava/lang/String;
    //   29618	418	13	item	Ljava/util/Properties;
    //   29635	401	14	vrl	Lcom/crushftp/client/VRL;
    //   29652	384	15	c1	Lcom/crushftp/client/GenericClient;
    //   29669	367	16	c2	Lcom/crushftp/client/GenericClient;
    //   29686	297	17	in	Ljava/io/InputStream;
    //   29906	77	18	out	Ljava/io/OutputStream;
    //   30043	47	12	e	Ljava/lang/Exception;
    //   30193	1066	8	response	Ljava/lang/String;
    //   30225	1034	9	names	[Ljava/lang/String;
    //   30229	1030	10	error_message	Ljava/lang/String;
    //   30232	966	11	x	I
    //   30244	938	12	the_dir	Ljava/lang/String;
    //   30464	718	13	item	Ljava/util/Properties;
    //   30481	701	14	vrl	Lcom/crushftp/client/VRL;
    //   30498	684	15	c1	Lcom/crushftp/client/GenericClient;
    //   30515	667	16	c2	Lcom/crushftp/client/GenericClient;
    //   30539	536	17	in	Ljava/io/BufferedInputStream;
    //   30554	521	18	b	[B
    //   30557	518	19	totalBytes	I
    //   30560	515	20	bytesRead	I
    //   30569	506	21	baos	Ljava/io/ByteArrayOutputStream;
    //   30655	420	22	s	Ljava/lang/String;
    //   30721	290	23	out	Ljava/io/OutputStream;
    //   31077	47	17	e	Ljava/lang/Exception;
    //   31280	514	8	response	Ljava/lang/String;
    //   31312	482	9	names	[Ljava/lang/String;
    //   31316	478	10	error_message	Ljava/lang/String;
    //   31319	414	11	x	I
    //   31345	372	12	the_dir	Ljava/lang/String;
    //   31620	97	13	item	Ljava/util/Properties;
    //   31637	80	14	vrl	Lcom/crushftp/client/VRL;
    //   31654	63	15	c	Lcom/crushftp/client/GenericClient;
    //   31815	671	8	response	Ljava/lang/String;
    //   31847	639	9	names	[Ljava/lang/String;
    //   31851	635	10	error_message	Ljava/lang/String;
    //   31860	626	11	zipFiles	Ljava/util/Vector;
    //   31869	617	12	firstItemName	Ljava/lang/StringBuffer;
    //   31872	299	13	x	I
    //   31884	271	14	the_dir	Ljava/lang/String;
    //   32104	51	15	item	Ljava/util/Properties;
    //   32183	303	13	the_dir	Ljava/lang/String;
    //   32353	72	14	outputItem	Ljava/util/Properties;
    //   32373	52	15	root_dir	Ljava/lang/String;
    //   32507	338	8	response	Ljava/lang/String;
    //   32539	306	9	names	[Ljava/lang/String;
    //   32543	302	10	error_message	Ljava/lang/String;
    //   32546	235	11	x	I
    //   32558	207	12	the_dir	Ljava/lang/String;
    //   32658	107	13	lastMessage	Ljava/lang/String;
    //   32661	82	14	xx	I
    //   32866	610	8	response	Ljava/lang/String;
    //   32878	598	9	the_dir	Ljava/lang/String;
    //   32952	524	10	item_name	Ljava/lang/String;
    //   32995	481	11	error_message	Ljava/lang/String;
    //   33051	361	12	fromPath	Ljava/lang/String;
    //   33065	347	13	item_name2	Ljava/lang/String;
    //   33278	121	14	rnto	Ljava/util/Properties;
    //   33295	104	15	toPath	Ljava/lang/String;
    //   33497	207	8	response	Ljava/lang/String;
    //   33512	192	9	the_dir	Ljava/lang/String;
    //   33620	84	10	error_message	Ljava/lang/String;
    //   33725	464	8	response	Ljava/lang/String;
    //   33737	452	9	the_dir	Ljava/lang/String;
    //   33865	324	10	item	Ljava/util/Properties;
    //   33874	315	11	item_str	Ljava/lang/StringBuffer;
    //   33905	137	12	listing	Ljava/util/Vector;
    //   33908	134	13	size	J
    //   33964	54	15	x	I
    //   33981	19	16	p	Ljava/util/Properties;
    //   34210	289	8	response	Ljava/lang/String;
    //   34219	280	9	item_str	Ljava/lang/StringBuffer;
    //   34237	262	10	the_dirs	[Ljava/lang/String;
    //   34240	212	11	x	I
    //   34252	184	12	the_dir	Ljava/lang/String;
    //   34380	56	13	item	Ljava/util/Properties;
    //   34520	281	8	response	Ljava/lang/String;
    //   34532	269	9	the_dir	Ljava/lang/String;
    //   34539	262	10	the_file	Ljava/lang/String;
    //   34542	47	11	x	I
    //   34737	64	11	error_message	Ljava/lang/String;
    //   34837	1540	8	response	Ljava/lang/String;
    //   34970	243	9	queue	Ljava/util/Vector;
    //   34979	234	10	action	Ljava/util/Properties;
    //   35051	162	11	root_item	Ljava/util/Properties;
    //   35068	145	12	c	Lcom/crushftp/client/GenericClient;
    //   35253	458	9	tempUsername	Ljava/lang/String;
    //   35267	444	10	tempPassword	Ljava/lang/String;
    //   35347	364	11	tmp_home	Ljava/lang/String;
    //   35389	322	12	fname	Ljava/lang/String;
    //   35459	252	13	permissions	Ljava/util/Properties;
    //   35520	191	14	dir_item	Ljava/util/Properties;
    //   35568	143	15	v	Ljava/util/Vector;
    //   35597	114	16	virtual	Ljava/util/Properties;
    //   35636	75	17	path	Ljava/lang/String;
    //   35645	66	18	vItem	Ljava/util/Properties;
    //   35720	650	9	path_items	Ljava/util/Vector;
    //   35726	644	10	paths	[Ljava/lang/String;
    //   35791	391	11	x	I
    //   35806	360	12	the_dir	Ljava/lang/String;
    //   35950	216	13	item	Ljava/util/Properties;
    //   35993	173	14	vrl	Lcom/crushftp/client/VRL;
    //   35996	170	15	stat	Ljava/util/Properties;
    //   36013	153	16	c	Lcom/crushftp/client/GenericClient;
    //   36248	122	11	user_name	Ljava/lang/String;
    //   36397	876	8	response	Ljava/lang/String;
    //   36422	223	9	queue	Ljava/util/Vector;
    //   36431	214	10	action	Ljava/util/Properties;
    //   36483	162	11	root_item	Ljava/util/Properties;
    //   36500	145	12	c	Lcom/crushftp/client/GenericClient;
    //   36659	593	9	path_items	Ljava/util/Vector;
    //   36665	587	10	paths	[Ljava/lang/String;
    //   36771	481	11	short_folder	Ljava/lang/String;
    //   36774	76	12	x	I
    //   36789	45	13	the_dir	Ljava/lang/String;
    //   36860	377	12	x	I
    //   36875	346	13	the_dir	Ljava/lang/String;
    //   37019	202	14	item	Ljava/util/Properties;
    //   37108	101	15	e	Ljava/lang/Exception;
    //   37364	199	8	paste_ids	Ljava/util/Properties;
    //   37369	194	9	paste_uid	Ljava/lang/String;
    //   37384	179	10	status	Ljava/lang/StringBuffer;
    //   37426	137	11	names	[Ljava/lang/String;
    //   37452	111	12	destPath	Ljava/lang/String;
    //   37456	107	13	command2	Ljava/lang/String;
    //   37481	82	14	response	Ljava/lang/String;
    //   37597	207	8	paste_ids	Ljava/util/Properties;
    //   37619	185	9	paste_uid	Ljava/lang/String;
    //   37631	173	10	status	Ljava/lang/StringBuffer;
    //   37655	149	11	response	Ljava/lang/String;
    //   37838	176	8	paste_ids	Ljava/util/Properties;
    //   37860	154	9	paste_uid	Ljava/lang/String;
    //   37872	142	10	status	Ljava/lang/StringBuffer;
    //   37896	118	11	response	Ljava/lang/String;
    //   38034	235	8	response	Ljava/lang/String;
    //   38059	183	9	queue	Ljava/util/Vector;
    //   38068	174	10	action	Ljava/util/Properties;
    //   38120	122	11	root_item	Ljava/util/Properties;
    //   38137	105	12	c	Lcom/crushftp/client/GenericClient;
    //   38303	426	8	the_dir	Ljava/lang/String;
    //   38385	344	9	item	Ljava/util/Properties;
    //   38436	293	10	index	Ljava/lang/String;
    //   38484	245	11	baos	Ljava/io/ByteArrayOutputStream;
    //   38632	97	12	utf8	[B
    //   38749	473	8	info	Ljava/lang/String;
    //   38774	401	9	queue	Ljava/util/Vector;
    //   38783	392	10	action	Ljava/util/Properties;
    //   38835	340	11	root_item	Ljava/util/Properties;
    //   38852	323	12	c	Lcom/crushftp/client/GenericClient;
    //   39203	19	9	ok	Z
    //   39243	300	8	response	Ljava/lang/String;
    //   39268	207	9	queue	Ljava/util/Vector;
    //   39277	198	10	action	Ljava/util/Properties;
    //   39329	146	11	root_item	Ljava/util/Properties;
    //   39346	129	12	c	Lcom/crushftp/client/GenericClient;
    //   39436	39	13	info	Ljava/lang/String;
    //   39564	421	8	response	Ljava/lang/String;
    //   39606	379	9	userTunnels	Ljava/lang/String;
    //   39620	365	10	tunnels	Ljava/util/Vector;
    //   39641	344	11	baot	Ljava/io/ByteArrayOutputStream;
    //   39656	329	12	lesserSpeed	I
    //   39717	190	13	x	I
    //   39731	158	14	baot2	Ljava/io/ByteArrayOutputStream;
    //   39743	146	15	pp	Ljava/util/Properties;
    //   39858	31	16	s	Ljava/lang/String;
    //   39931	54	13	tunnelsStr	Ljava/lang/String;
    //   40036	2045	8	validSecs	I
    //   40100	1981	9	paths	Ljava/lang/String;
    //   40134	1947	10	itemList	[Ljava/lang/String;
    //   40146	1935	11	current_dir	Ljava/lang/String;
    //   40172	209	12	commonStartPath	Ljava/lang/String;
    //   40175	58	13	x	I
    //   40187	30	14	file_path	Ljava/lang/String;
    //   40248	94	13	ok	Z
    //   40251	76	14	x	I
    //   40263	38	15	file_path	Ljava/lang/String;
    //   40386	1695	12	fname	Ljava/lang/String;
    //   40688	288	13	root_loc	Ljava/lang/String;
    //   40768	208	14	item	Ljava/util/Properties;
    //   40785	191	15	c	Lcom/crushftp/client/GenericClient;
    //   40813	123	16	in	Ljava/io/InputStream;
    //   40820	77	17	b	[B
    //   40823	74	18	bytesRead	I
    //   40938	10	16	e	Ljava/lang/Exception;
    //   41060	1021	13	item	Ljava/util/Properties;
    //   41088	993	14	sizeLookup	Ljava/util/Properties;
    //   41131	64	15	filters	[Ljava/lang/String;
    //   41134	61	16	x	I
    //   41154	25	17	name	Ljava/lang/String;
    //   41169	10	18	size	Ljava/lang/String;
    //   41198	883	15	loc	I
    //   41207	874	16	activeThreads	Ljava/util/Vector;
    //   41248	295	17	current_dir2	Ljava/lang/String;
    //   41345	198	18	item2	Ljava/util/Properties;
    //   41469	74	19	singleThread	Z
    //   41597	236	17	x	I
    //   41622	185	18	zitem	Ljava/util/Properties;
    //   41632	175	19	root_dir	Ljava/lang/String;
    //   41716	91	20	size	Ljava/lang/String;
    //   41850	231	17	otherFile	Lcom/crushftp/client/VRL;
    //   41967	114	18	the_dir	Ljava/lang/String;
    //   41976	105	19	pp	Ljava/util/Properties;
    //   42111	195	8	the_dir	Ljava/lang/String;
    //   42278	28	9	response	Ljava/lang/String;
    //   42326	295	8	response	Ljava/lang/String;
    //   42351	243	9	queue	Ljava/util/Vector;
    //   42360	234	10	action	Ljava/util/Properties;
    //   42432	162	11	root_item	Ljava/util/Properties;
    //   42449	145	12	c	Lcom/crushftp/client/GenericClient;
    //   42641	287	8	response	Ljava/lang/String;
    //   42666	243	9	queue	Ljava/util/Vector;
    //   42675	234	10	action	Ljava/util/Properties;
    //   42747	162	11	root_item	Ljava/util/Properties;
    //   42764	145	12	c	Lcom/crushftp/client/GenericClient;
    //   42948	288	8	response	Ljava/lang/String;
    //   42973	243	9	queue	Ljava/util/Vector;
    //   42982	234	10	action	Ljava/util/Properties;
    //   43054	162	11	root_item	Ljava/util/Properties;
    //   43071	145	12	c	Lcom/crushftp/client/GenericClient;
    //   43256	288	8	response	Ljava/lang/String;
    //   43281	243	9	queue	Ljava/util/Vector;
    //   43290	234	10	action	Ljava/util/Properties;
    //   43362	162	11	root_item	Ljava/util/Properties;
    //   43379	145	12	c	Lcom/crushftp/client/GenericClient;
    //   43564	701	8	response	Ljava/lang/String;
    //   43583	682	9	name	Ljava/lang/String;
    //   43836	405	10	customForms	Ljava/util/Vector;
    //   43839	397	11	x	I
    //   43856	362	12	form	Ljava/util/Properties;
    //   43960	258	13	entries	Ljava/util/Vector;
    //   43963	215	14	xx	I
    //   43980	180	15	entry	Ljava/util/Properties;
    //   44203	10	14	e	Ljava/lang/Exception;
    //   44243	10	10	e	Ljava/lang/Exception;
    //   44290	2274	8	responseProp	Ljava/util/Properties;
    //   44308	2256	9	extraCustomizations	Ljava/util/Properties;
    //   44369	2195	10	customizations	Ljava/util/Vector;
    //   44488	218	11	queue	Ljava/util/Vector;
    //   44497	209	12	action	Ljava/util/Properties;
    //   44549	157	13	root_item	Ljava/util/Properties;
    //   44566	140	14	c	Lcom/crushftp/client/GenericClient;
    //   44664	42	15	response	Ljava/lang/Object;
    //   44749	82	11	globalCust	Ljava/util/Properties;
    //   44756	75	12	keys	Ljava/util/Enumeration;
    //   44773	43	13	key	Ljava/lang/String;
    //   44782	34	14	ppp	Ljava/util/Properties;
    //   44862	117	11	userCust	Ljava/util/Properties;
    //   44887	92	12	pp	Ljava/util/Properties;
    //   44904	75	13	keys	Ljava/util/Enumeration;
    //   44921	43	14	key	Ljava/lang/String;
    //   44930	34	15	ppp	Ljava/util/Properties;
    //   45018	82	11	wi_customizations	Ljava/util/Properties;
    //   45025	75	12	keys	Ljava/util/Enumeration;
    //   45042	43	13	key	Ljava/lang/String;
    //   45051	34	14	ppp	Ljava/util/Properties;
    //   45139	85	11	metas	Ljava/util/Properties;
    //   45146	78	12	keys	Ljava/util/Enumeration;
    //   45163	46	13	key	Ljava/lang/String;
    //   45242	10	11	e	Ljava/lang/Exception;
    //   45278	192	11	buttons	Ljava/util/Vector;
    //   45392	62	12	x	I
    //   45409	32	13	button	Ljava/util/Properties;
    //   45472	10	11	e	Ljava/lang/Exception;
    //   45502	114	11	keys	Ljava/util/Enumeration;
    //   45519	77	12	key	Ljava/lang/String;
    //   45544	52	13	pp	Ljava/util/Properties;
    //   45618	10	11	e	Ljava/lang/Exception;
    //   45726	838	11	password_rules	Ljava/util/Properties;
    //   46044	520	12	the_dir	Ljava/lang/String;
    //   46145	419	13	site_item	Ljava/util/Properties;
    //   46243	73	14	c	Lcom/crushftp/client/GenericClient;
    //   46478	86	14	response	Ljava/lang/String;
    //   46503	10	15	e	Ljava/lang/Exception;
    //   46584	279	8	response	Ljava/lang/String;
    //   46609	232	9	queue	Ljava/util/Vector;
    //   46618	223	10	action	Ljava/util/Properties;
    //   46670	55	11	root_item	Ljava/util/Properties;
    //   46687	38	12	c	Lcom/crushftp/client/GenericClient;
    //   46727	9	11	e	Ljava/lang/Exception;
    //   46913	875	8	ip	Ljava/lang/String;
    //   46933	855	9	username	Ljava/lang/String;
    //   46953	835	10	password	Ljava/lang/String;
    //   46990	798	11	path	Ljava/lang/String;
    //   47002	786	12	port	Ljava/lang/String;
    //   47017	771	13	protocol	Ljava/lang/String;
    //   47100	688	14	proxyRules	Ljava/util/Vector;
    //   47125	663	15	ok	Z
    //   47128	660	16	blacklisted	Z
    //   47131	310	17	x	I
    //   47148	275	18	pp	Ljava/util/Properties;
    //   47194	229	19	part1	Ljava/lang/String;
    //   47217	206	20	part2	Ljava/lang/String;
    //   47483	273	17	virtual	Ljava/util/Properties;
    //   47492	264	18	v	Ljava/util/Vector;
    //   47501	255	19	dir_item	Ljava/util/Properties;
    //   47619	137	20	vItem	Ljava/util/Properties;
    //   47824	292	8	agents	Ljava/util/Vector;
    //   47861	255	9	found	Z
    //   47870	99	11	x	I
    //   47887	54	12	agent	Ljava/util/Properties;
    //   47988	80	11	agent	Ljava/util/Properties;
    //   48147	298	8	agents	Ljava/util/Vector;
    //   48190	255	9	action	Ljava/util/Properties;
    //   48199	123	11	x	I
    //   48216	88	12	agent	Ljava/util/Properties;
    //   48280	24	13	queue	Ljava/util/Vector;
    //   48343	102	10	baos	Ljava/io/ByteArrayOutputStream;
    //   48354	91	11	oos	Ljava/io/ObjectOutputStream;
    //   48376	69	12	b64	Ljava/lang/String;
    //   48476	337	8	agents	Ljava/util/Vector;
    //   48519	294	9	action	Ljava/util/Properties;
    //   48528	162	11	x	I
    //   48545	127	12	agent	Ljava/util/Properties;
    //   48624	48	13	response	Ljava/util/Properties;
    //   48637	35	14	responses	Ljava/util/Properties;
    //   48654	18	15	job_tmp	Ljava/util/Properties;
    //   48711	102	10	baos	Ljava/io/ByteArrayOutputStream;
    //   48722	91	11	oos	Ljava/io/ObjectOutputStream;
    //   48744	69	12	b64	Ljava/lang/String;
    //   48861	192	8	agentNames	Ljava/util/Vector;
    //   48869	184	9	agents	Ljava/util/Vector;
    //   48912	78	11	x	I
    //   48929	43	12	agent	Ljava/util/Properties;
    //   49006	47	10	response	Ljava/lang/String;
    //   49031	10	11	e	Ljava/lang/Exception;
    //   49496	2197	8	keys	Ljava/util/Enumeration;
    //   49505	2188	9	metaInfo	Ljava/util/Properties;
    //   49522	178	10	key	Ljava/lang/String;
    //   49549	151	11	val	Ljava/lang/String;
    //   49648	15	12	global_variables	Ljava/util/Properties;
    //   49743	1950	10	the_dir	Ljava/lang/String;
    //   49847	1846	11	item	Ljava/util/Properties;
    //   49850	1843	12	otherFile	Lcom/crushftp/client/VRL;
    //   49949	1744	13	ok	Z
    //   50444	651	14	otherFile2	Lcom/crushftp/client/VRL;
    //   50459	636	15	rev	I
    //   50474	583	16	privs	Ljava/lang/String;
    //   50499	514	17	path	Ljava/lang/String;
    //   50568	366	18	fname	Ljava/lang/String;
    //   50579	355	19	validSecs	I
    //   50757	177	20	c	Lcom/crushftp/client/GenericClient;
    //   50771	123	21	in	Ljava/io/InputStream;
    //   50778	77	22	b	[B
    //   50781	74	23	bytesRead	I
    //   50896	10	21	e	Ljava/lang/Exception;
    //   50944	69	18	revPath	Ljava/lang/String;
    //   51202	153	14	ok1	Z
    //   51301	54	15	ok2	Z
    //   51383	274	14	response	Ljava/lang/String;
    //   51392	265	15	transfer_lock	Ljava/util/Properties;
    //   51471	186	16	c	Lcom/crushftp/client/GenericClient;
    //   51474	183	17	stat	Ljava/util/Properties;
    //   51562	95	18	html5_transfers	Ljava/util/Properties;
    //   51787	964	8	response	Ljava/lang/String;
    //   51806	945	9	upload_path	Ljava/lang/String;
    //   51823	928	10	dir_item	Ljava/util/Properties;
    //   51970	715	11	transfer_lock	Ljava/util/Properties;
    //   52067	618	12	metaInfo	Ljava/util/Properties;
    //   52073	612	13	keys	Ljava/util/Enumeration;
    //   52100	223	14	name	Ljava/lang/String;
    //   52108	215	15	data_item	Ljava/lang/String;
    //   52271	15	16	global_variables	Ljava/util/Properties;
    //   52382	303	14	html5_transfers	Ljava/util/Properties;
    //   52433	252	15	loops	I
    //   52804	476	8	transfer_type	Ljava/lang/String;
    //   52843	437	9	html5_transfers	Ljava/util/Properties;
    //   52878	402	10	transfer_lock	Ljava/util/Properties;
    //   52883	397	11	response	Ljava/lang/String;
    //   52938	118	12	start	J
    //   52941	67	14	x	I
    //   53331	247	8	transfer_type	Ljava/lang/String;
    //   53370	208	9	html5_transfers	Ljava/util/Properties;
    //   53373	205	10	transfer_lock	Ljava/util/Properties;
    //   53423	155	11	response	Ljava/lang/String;
    //   53599	109	8	uid	Ljava/lang/String;
    //   53667	41	9	response	Ljava/lang/String;
    //   53743	213	8	status	Ljava/lang/String;
    //   53876	29	9	e	Ljava/lang/Exception;
    //   53915	41	9	response	Ljava/lang/String;
    // Exception table:
    //   from	to	target	type
    //   8495	8514	8519	java/lang/Exception
    //   10826	13837	13842	java/lang/Exception
    //   10853	13802	13807	java/lang/Exception
    //   14030	14324	14327	finally
    //   14034	14248	14253	java/lang/Exception
    //   14050	14219	14219	finally
    //   14238	14243	14219	finally
    //   14457	14730	14733	finally
    //   14598	14616	14621	java/lang/Exception
    //   15275	15284	15289	java/lang/Exception
    //   15509	15527	15532	java/lang/Exception
    //   15814	15832	15837	java/lang/Exception
    //   21744	21773	21778	java/lang/Exception
    //   26082	26334	26334	finally
    //   26365	26370	26334	finally
    //   28900	29041	29046	java/lang/Exception
    //   29391	30036	30041	java/lang/Exception
    //   29669	29983	29983	finally
    //   30031	30036	29983	finally
    //   30515	31070	31075	java/lang/Exception
    //   30515	31124	31129	finally
    //   31177	31182	31129	finally
    //   31654	31681	31681	finally
    //   31712	31717	31681	finally
    //   36013	36089	36089	finally
    //   36120	36125	36089	finally
    //   37045	37101	37106	java/lang/Exception
    //   37661	37781	37786	finally
    //   37786	37789	37786	finally
    //   37902	37991	37996	finally
    //   37996	37999	37996	finally
    //   40785	40931	40936	java/lang/Exception
    //   40813	40897	40897	finally
    //   40926	40931	40897	finally
    //   43735	44236	44241	java/lang/Exception
    //   44178	44196	44201	java/lang/Exception
    //   44369	45235	45240	java/lang/Exception
    //   45257	45465	45470	java/lang/Exception
    //   45487	45611	45616	java/lang/Exception
    //   46243	46280	46280	finally
    //   46311	46316	46280	finally
    //   46316	46341	46346	java/lang/Exception
    //   46478	46496	46501	java/lang/Exception
    //   46642	46720	46725	java/lang/Exception
    //   47867	48071	48076	finally
    //   48076	48079	48076	finally
    //   48196	48325	48330	finally
    //   48330	48333	48330	finally
    //   48525	48693	48698	finally
    //   48698	48701	48698	finally
    //   48909	48993	48998	finally
    //   48998	49001	48998	finally
    //   49006	49024	49029	java/lang/Exception
    //   50757	50889	50894	java/lang/Exception
    //   50771	50855	50855	finally
    //   50884	50889	50855	finally
    //   51474	51491	51491	finally
    //   51522	51527	51491	finally
    //   53819	53869	53874	java/lang/Exception
  }
  
  public static String changePassword(Properties request, String site, SessionCrush thisSession) {
    String result = "Not Allowed";
    if (site.indexOf("(SITE_PASS)") >= 0) {
      String current_password = Common.url_decode(request.getProperty("current_password", "")).trim();
      String new_password1 = Common.url_decode(request.getProperty("new_password1", "")).trim();
      String new_password2 = Common.url_decode(request.getProperty("new_password2", "")).trim();
      String new_password3 = new_password1;
      String user_password = ServerStatus.thisObj.common_code.decode_pass(thisSession.user.getProperty("password"));
      if (user_password.startsWith("MD5:")) {
        current_password = ServerStatus.thisObj.common_code.encode_pass(current_password, "MD5", thisSession.user.getProperty("salt", ""));
        new_password3 = ServerStatus.thisObj.common_code.encode_pass(new_password3, "MD5", thisSession.user.getProperty("salt", ""));
      } else if (user_password.startsWith("SHA:")) {
        current_password = ServerStatus.thisObj.common_code.encode_pass(current_password, "SHA", thisSession.user.getProperty("salt", ""));
        new_password3 = ServerStatus.thisObj.common_code.encode_pass(new_password3, "SHA", thisSession.user.getProperty("salt", ""));
      } else if (user_password.startsWith("SHA512:")) {
        current_password = ServerStatus.thisObj.common_code.encode_pass(current_password, "SHA512", thisSession.user.getProperty("salt", ""));
        new_password3 = ServerStatus.thisObj.common_code.encode_pass(new_password3, "SHA512", thisSession.user.getProperty("salt", ""));
      } else if (user_password.startsWith("SHA256:")) {
        current_password = ServerStatus.thisObj.common_code.encode_pass(current_password, "SHA256", thisSession.user.getProperty("salt", ""));
        new_password3 = ServerStatus.thisObj.common_code.encode_pass(new_password3, "SHA256", thisSession.user.getProperty("salt", ""));
      } else if (user_password.startsWith("SHA3:")) {
        current_password = ServerStatus.thisObj.common_code.encode_pass(current_password, "SHA3", thisSession.user.getProperty("salt", ""));
        new_password3 = ServerStatus.thisObj.common_code.encode_pass(new_password3, "SHA3", thisSession.user.getProperty("salt", ""));
      } else if (user_password.startsWith("CRYPT3:")) {
        if (ServerStatus.thisObj.common_code.crypt3(current_password, user_password).equals(user_password))
          current_password = user_password; 
      } else if (user_password.startsWith("BCRYPT:")) {
        if (ServerStatus.thisObj.common_code.bcrypt(current_password, user_password).equals(user_password))
          current_password = user_password; 
      } else if (user_password.startsWith("MD5CRYPT:")) {
        if (ServerStatus.thisObj.common_code.md5crypt(current_password, user_password).equals(user_password))
          current_password = user_password; 
      } else if (user_password.startsWith("PBKDF2SHA256:")) {
        if (ServerStatus.thisObj.common_code.pbkdf2sha256(current_password, user_password).equals(user_password))
          current_password = user_password; 
      } else if (user_password.startsWith("SHA512CRYPT:")) {
        if (ServerStatus.thisObj.common_code.sha512crypt(current_password, user_password).equals(user_password))
          current_password = user_password; 
      } 
      if (current_password.length() > 0 && new_password1.length() > 0)
        if (current_password.equals(user_password) && new_password1.equals(new_password2) && !new_password3.equals(user_password) && !thisSession.uiSG("user_name").equalsIgnoreCase("anonymous")) {
          thisSession.uiPUT("current_password", user_password);
          result = thisSession.do_ChangePass(thisSession.uiSG("user_name"), new_password1);
        } else if (!current_password.equals(user_password)) {
          result = LOC.G("You did not enter the correct current password.");
        } else if (!new_password1.equals(new_password2)) {
          result = LOC.G("You did not enter the same password for verification the second time.");
        }  
    } 
    String response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n";
    response = String.valueOf(response) + "<commandResult><response>" + result + "</response></commandResult>";
    return response;
  }
  
  public void processHTML5Upload(Properties transfer_lock) throws Exception {
    long pos = Long.parseLong(transfer_lock.remove("start_resume_loc").toString());
    Properties metaInfo = (Properties)transfer_lock.remove("metaInfo");
    Properties result = this.thisSessionHTTP.getStorOutputStream(this.thisSessionHTTP.thisSession.getStandardizedDir(transfer_lock.getProperty("transfer_path")), pos, false, metaInfo);
    transfer_lock.putAll(result);
    OutputStream of_stream = (OutputStream)result.remove("out");
    STOR_handler stor2 = (STOR_handler)result.remove("stor");
    Properties active = (Properties)result.get("active");
    transfer_lock.put("stor", stor2);
    long transfer_size = Long.parseLong(transfer_lock.remove("transfer_size").toString());
    Properties html5_transfers = (Properties)this.thisSessionHTTP.thisSession.get("html5_uploads");
    html5_transfers.put(transfer_lock.getProperty("transfer_id"), transfer_lock);
    int num = 1;
    int end_loops = 0;
    long last_chunk_time1 = System.currentTimeMillis();
    long last_chunk_time2 = System.currentTimeMillis();
    int last_transfer_lock_size = 0;
    while (end_loops < 120) {
      try {
        if (!transfer_lock.containsKey((new StringBuffer(String.valueOf(num))).toString())) {
          if (transfer_lock.containsKey("total_chunks") || num < 20) {
            Thread.sleep(10L);
          } else {
            Thread.sleep(500L);
          } 
          if (transfer_lock.containsKey("total_chunks"))
            end_loops++; 
          if (last_transfer_lock_size != transfer_lock.size()) {
            last_chunk_time2 = System.currentTimeMillis();
            last_transfer_lock_size = transfer_lock.size();
          } 
        } else {
          end_loops = 0;
          byte[] b = (byte[])transfer_lock.remove((new StringBuffer(String.valueOf(num++))).toString());
          synchronized (transfer_lock) {
            transfer_lock.put("pending_bytes", (new StringBuffer(String.valueOf(Long.parseLong(transfer_lock.getProperty("pending_bytes", "0")) - b.length))).toString());
          } 
          of_stream.write(b);
          pos += b.length;
          last_chunk_time1 = System.currentTimeMillis();
          last_chunk_time2 = System.currentTimeMillis();
          transfer_lock.put("current_num", (new StringBuffer(String.valueOf(num))).toString());
        } 
        if (System.currentTimeMillis() - last_chunk_time1 > (ServerStatus.IG("html5_chunk_timeout") * 1000)) {
          String msg = "Transfer failure! " + transfer_lock.getProperty("transfer_path") + ": + Timeout1 waiting for chunk from browser chunked transferer:1=" + (System.currentTimeMillis() - last_chunk_time1) + ":2=" + (System.currentTimeMillis() - last_chunk_time2) + ":num=" + num + ":id=" + transfer_lock.getProperty("transfer_id");
          Log.log("SERVER", 0, msg);
          throw new IOException(msg);
        } 
        if (System.currentTimeMillis() - last_chunk_time2 > 1200000L) {
          String msg = "Transfer failure! " + transfer_lock.getProperty("transfer_path") + ": + Timeout2 waiting for chunk from browser chunked transferer:1=" + (System.currentTimeMillis() - last_chunk_time1) + ":2=" + (System.currentTimeMillis() - last_chunk_time2) + ":num=" + num + ":id=" + transfer_lock.getProperty("transfer_id");
          Log.log("SERVER", 0, msg);
          throw new IOException(msg);
        } 
        if (this.thisSessionHTTP.thisSession.getProperty("blockUploads", "false").equals("true"))
          throw new Exception("Transfer failed: User Cancelled"); 
      } catch (Exception e) {
        Log.log("SERVER", 1, e);
        stor2.inError = true;
        stor2.stop_message = "ERROR:" + e.getMessage();
        break;
      } 
      try {
        if (transfer_lock.containsKey("total_chunks") && num == Integer.parseInt(transfer_lock.getProperty("total_chunks", "-1")) + 1)
          break; 
      } catch (Exception e) {
        Log.log("SERVER", 0, e);
      } 
    } 
    try {
      of_stream.close();
    } catch (IOException e1) {
      Log.log("SERVER", 0, e1);
    } 
    if (pos < transfer_size && !stor2.inError) {
      String msg = "ERROR: Transfer failure! " + transfer_lock.getProperty("transfer_path") + ":" + "Transfer size mismatch:(" + num + ")" + pos + " != " + transfer_size + ":" + transfer_lock.getProperty("transfer_id");
      Log.log("SERVER", 0, msg);
      stor2.inError = true;
      stor2.stop_message = msg;
    } 
    try {
      int loops = 0;
      while (active.getProperty("active", "").equals("true"))
        Thread.sleep(((loops++ < 100) ? loops : 100L)); 
      stor2.c.close();
    } catch (Exception exception) {}
    if (end_loops >= 120) {
      transfer_lock.put("status", "ERROR:End of file not received:" + num + " != " + transfer_lock.getProperty("total_chunks"));
    } else {
      transfer_lock.put("status", stor2.stop_message);
    } 
    if (this.thisSessionHTTP.thisSession.uiPG("lastUploadStat") != null)
      ServerStatus.thisObj.statTools.insertMetaInfo(this.thisSessionHTTP.thisSession.uiSG("SESSION_RID"), metaInfo, this.thisSessionHTTP.thisSession.uiPG("lastUploadStat").getProperty("TRANSFER_RID")); 
    if (stor2.stop_message.equals(""))
      html5_transfers.remove(transfer_lock.getProperty("transfer_id")); 
    stor2.kill();
  }
  
  public void processHTML5Download(Properties transfer_lock) throws Exception {
    transfer_lock.put("status", "");
    long pos = Long.parseLong(transfer_lock.remove("start_resume_loc").toString());
    Properties metaInfo = (Properties)transfer_lock.remove("metaInfo");
    Properties result = this.thisSessionHTTP.getRetrInputStream(this.thisSessionHTTP.thisSession.getStandardizedDir(transfer_lock.getProperty("transfer_path")), pos, metaInfo);
    InputStream if_stream = (InputStream)result.remove("in");
    RETR_handler retr2 = (RETR_handler)result.remove("retr");
    Properties active = (Properties)result.get("active");
    long transfer_size = Long.parseLong(transfer_lock.remove("transfer_size").toString());
    Properties html5_transfers = (Properties)this.thisSessionHTTP.thisSession.get("html5_downloads");
    html5_transfers.put(transfer_lock.getProperty("transfer_id"), transfer_lock);
    int num = 1;
    int end_loops = 0;
    long last_chunk_time1 = System.currentTimeMillis();
    long last_chunk_time2 = System.currentTimeMillis();
    int last_transfer_lock_size = 0;
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    int chunk_size = 1048576;
    byte[] b = new byte[32768];
    while (true) {
      try {
        int loops = 1;
        while (transfer_lock.size() > 10) {
          if (last_transfer_lock_size != transfer_lock.size()) {
            last_chunk_time2 = System.currentTimeMillis();
            last_transfer_lock_size = transfer_lock.size();
          } 
          Thread.sleep(loops);
          if (loops < 100)
            loops++; 
        } 
        int bytes_read = if_stream.read(b);
        if (bytes_read >= 0)
          baos.write(b, 0, bytes_read); 
        if (baos.size() > chunk_size || (bytes_read < 0 && baos.size() > 0)) {
          if (Long.parseLong(transfer_lock.getProperty("pending_bytes", "0")) < 20971520L && chunk_size < 20971520)
            chunk_size += 524288; 
          synchronized (transfer_lock) {
            pos += baos.size();
            Properties chunk = new Properties();
            byte[] b2 = new byte[baos.size()];
            System.arraycopy(baos.toByteArray(), 0, b2, 0, baos.size());
            chunk.put("b", b2);
            chunk.put("bytes_read", (new StringBuffer(String.valueOf(b2.length))).toString());
            transfer_lock.put((new StringBuffer(String.valueOf(num))).toString(), chunk);
            transfer_lock.put("pending_bytes", (new StringBuffer(String.valueOf(Long.parseLong(transfer_lock.getProperty("pending_bytes", "0")) + baos.size()))).toString());
            if (Log.log("HTTP_SERVER", 2, ""))
              Log.log("HTTP_SERVER", 2, "Download segment generated:id=" + transfer_lock.getProperty("transfer_id") + ":num=" + num + ":bytes=" + bytes_read + ":pending=" + transfer_lock.getProperty("pending_bytes", "0") + ":transfer_lock_size=" + transfer_lock.size()); 
            transfer_lock.put("current_num", (new StringBuffer(String.valueOf(num))).toString());
            baos.reset();
          } 
          last_chunk_time1 = System.currentTimeMillis();
          last_chunk_time2 = System.currentTimeMillis();
          num++;
        } 
        if (bytes_read < 0) {
          num--;
          transfer_lock.put("total_chunks", (new StringBuffer(String.valueOf(num))).toString());
        } 
        if (System.currentTimeMillis() - last_chunk_time1 > (ServerStatus.IG("html5_chunk_timeout") * 1000) || System.currentTimeMillis() - last_chunk_time2 > 1200000L) {
          String msg = "Transfer failure! " + transfer_lock.getProperty("transfer_path") + ": + Timeout waiting for chunk from browser chunked transferer:1=" + (System.currentTimeMillis() - last_chunk_time1) + ":2=" + (System.currentTimeMillis() - last_chunk_time2) + ":num=" + num + ":id=" + transfer_lock.getProperty("transfer_id");
          Log.log("SERVER", 0, msg);
          throw new IOException(msg);
        } 
        if (this.thisSessionHTTP.thisSession.getProperty("blockDownloads", "false").equals("true"))
          throw new Exception("Transfer failed: User Cancelled"); 
        if (transfer_lock.getProperty("blockDownloads", "false").equals("true"))
          throw new Exception("Transfer failed: User Cancelled"); 
      } catch (Exception e) {
        Log.log("SERVER", 1, e);
        retr2.inError = true;
        retr2.stop_message = "ERROR:" + e.getMessage();
        break;
      } 
      try {
        if (transfer_lock.containsKey("total_chunks"))
          break; 
      } catch (Exception e) {
        Log.log("SERVER", 0, e);
      } 
    } 
    try {
      if_stream.close();
    } catch (IOException e1) {
      Log.log("SERVER", 0, e1);
    } 
    if (pos < transfer_size && !retr2.inError) {
      String msg = "ERROR: Transfer failure! " + transfer_lock.getProperty("transfer_path") + ":" + "Transfer size mismatch:(" + num + ")" + pos + " != " + transfer_size + ":" + transfer_lock.getProperty("transfer_id");
      Log.log("SERVER", 0, msg);
      retr2.inError = true;
      retr2.stop_message = msg;
    } 
    try {
      int loops = 0;
      while (active.getProperty("active", "").equals("true"))
        Thread.sleep(((loops++ < 100) ? loops : 100L)); 
      retr2.c.close();
    } catch (Exception exception) {}
    if (end_loops >= 120) {
      transfer_lock.put("status", "ERROR:End of file not received:" + num + " != " + transfer_lock.getProperty("total_chunks"));
    } else {
      transfer_lock.put("status", retr2.stop_message);
    } 
    if (this.thisSessionHTTP.thisSession.uiPG("lastDownloadStat") != null)
      ServerStatus.thisObj.statTools.insertMetaInfo(this.thisSessionHTTP.thisSession.uiSG("SESSION_RID"), metaInfo, this.thisSessionHTTP.thisSession.uiPG("lastDownloadStat").getProperty("TRANSFER_RID")); 
    retr2.kill();
  }
  
  public void addMissingButtons(Vector buttons) throws Exception {
    boolean found = false;
    for (int x = 0; x < buttons.size(); x++) {
      if (buttons.elementAt(x).toString().indexOf("admin") >= 0)
        found = true; 
    } 
    if (!found) {
      Properties properties = new Properties();
      properties.put("key", "(admin):Admin");
      properties.put("value", "");
      properties.put("for_menu", "true");
      properties.put("for_context_menu", "false");
      if (this.thisSessionHTTP.thisSession.SG("site").indexOf("(CONNECT)") >= 0 || this.thisSessionHTTP.thisSession.SG("site").indexOf("(SERVER_VIEW)") >= 0 || this.thisSessionHTTP.thisSession.SG("site").indexOf("(SERVER_EDIT)") >= 0 || this.thisSessionHTTP.thisSession.SG("site").indexOf("(UPDATE_RUN)") >= 0) {
        properties.put("value", String.valueOf(this.thisSessionHTTP.proxy) + "WebInterface/admin/index.html");
      } else if (this.thisSessionHTTP.thisSession.SG("site").indexOf("(USER_ADMIN)") >= 0 || this.thisSessionHTTP.thisSession.SG("site").indexOf("(USER_VIEW)") >= 0 || this.thisSessionHTTP.thisSession.SG("site").indexOf("(USER_EDIT)") >= 0 || this.thisSessionHTTP.thisSession.SG("site").indexOf("(UPDATE_RUN)") >= 0) {
        properties.put("value", String.valueOf(this.thisSessionHTTP.proxy) + "WebInterface/UserManager/index.html");
      } else if (this.thisSessionHTTP.thisSession.SG("site").indexOf("(PREF_VIEW)") >= 0 || this.thisSessionHTTP.thisSession.SG("site").indexOf("(PREF_EDIT)") >= 0) {
        properties.put("value", String.valueOf(this.thisSessionHTTP.proxy) + "WebInterface/Preferences/index.html");
      } else if (this.thisSessionHTTP.thisSession.SG("site").indexOf("(SHARE_VIEW)") >= 0 || this.thisSessionHTTP.thisSession.SG("site").indexOf("(SHARE_EDIT)") >= 0) {
        properties.put("value", String.valueOf(this.thisSessionHTTP.proxy) + "WebInterface/TempAccounts/index.html");
      } else if (this.thisSessionHTTP.thisSession.SG("site").indexOf("(REPORT_VIEW)") >= 0 || this.thisSessionHTTP.thisSession.SG("site").indexOf("(REPORT_EDIT)") >= 0) {
        properties.put("value", String.valueOf(this.thisSessionHTTP.proxy) + "WebInterface/admin/index.html");
      } else if (this.thisSessionHTTP.thisSession.SG("site").indexOf("(JOB_EDIT)") >= 0 || this.thisSessionHTTP.thisSession.SG("site").indexOf("(JOB_VIEW)") >= 0 || this.thisSessionHTTP.thisSession.SG("site").indexOf("(JOB_LIST)") >= 0 || this.thisSessionHTTP.thisSession.SG("site").indexOf("(JOB_LIST_HISTORY)") >= 0 || this.thisSessionHTTP.thisSession.SG("site").indexOf("(JOB_MONITOR)") >= 0) {
        properties.put("value", String.valueOf(this.thisSessionHTTP.proxy) + "WebInterface/Jobs/index.html");
      } 
      if (!properties.getProperty("value", "").equals(""))
        buttons.insertElementAt((E)properties, 0); 
    } 
    Properties button = new Properties();
    button.put("key", "(copyDirectLink):Copy Link");
    button.put("for_menu", "false");
    button.put("for_context_menu", "true");
    button.put("value", "javascript:performAction('copyDirectLink');");
    buttons.insertElementAt((E)button, 0);
  }
  
  public String getXmlListingResponse(String username, Properties request, String the_dir, boolean realPaths, VFS tmpVFS) throws Exception {
    Vector listing = null;
    the_dir = Common.dots(the_dir);
    Properties item = tmpVFS.get_item(the_dir);
    boolean exists = true;
    if (item == null) {
      item = tmpVFS.get_item_parent(the_dir);
      exists = false;
    } 
    String privs = "";
    if (item != null)
      privs = item.getProperty("privs", ""); 
    Properties listingProp = new Properties();
    if (!this.thisSessionHTTP.thisSession.BG("DisallowListingDirectories")) {
      if (item != null && item.getProperty("url", "").indexOf("|") >= 0)
        if (item.getProperty("proxy_item", "false").equals("true")) {
          if (item.getProperty("permissions").charAt(2) != 'w')
            privs = Common.replace_str(privs, "(write)", ""); 
          if (item.getProperty("permissions").charAt(2) == 'w')
            privs = Common.replace_str(privs, "(read)", ""); 
        }  
      listingProp = getListingInfo(listing, the_dir, privs, false, tmpVFS, realPaths, true, this.thisSessionHTTP.thisSession, false);
      if (ServerStatus.BG("ignore_failed_directory_listings")) {
        Log.log("SERVER", 1, "Ignoring file listing error:" + listingProp.remove("error"));
        listingProp.remove("error_msg");
        exists = true;
      } 
      if (listingProp.get("error") != null)
        throw (Exception)listingProp.get("error"); 
      if (listingProp.get("listing") == null)
        Log.log("HTTP_SERVER", 2, "getXMLListing:Got listing of:" + ((Vector)listingProp.get("listing")).size()); 
      if ((new VRL(item.getProperty("url", ""))).getProtocol().equalsIgnoreCase("file")) {
        File_U temp_dir = new File_U(String.valueOf((new VRL(item.getProperty("url"))).getPath()) + "/.message");
        if (temp_dir.exists()) {
          RandomAccessFile message_is = new RandomAccessFile(temp_dir, "r");
          byte[] temp_array = new byte[(int)message_is.length()];
          message_is.readFully(temp_array);
          message_is.close();
          listingProp.put("comment", Common.xss_strip(new String(temp_array)));
        } 
      } 
    } 
    if (ServerStatus.server_settings.get("defaultStrings") != null && ServerStatus.server_settings.get("defaultStrings") instanceof Properties)
      listingProp.put("defaultStrings", ServerStatus.server_settings.get("defaultStrings")); 
    listingProp.put("site", this.thisSessionHTTP.thisSession.SG("site"));
    listingProp.put("quota", "");
    long quota = -12345L;
    if (Common.dmz_mode) {
      Vector queue = (Vector)Common.System2.get("crushftp.dmz.queue");
      Properties action = new Properties();
      action.put("type", "GET:QUOTA");
      action.put("id", Common.makeBoundary());
      action.put("username", this.thisSessionHTTP.thisSession.uiSG("user_name"));
      action.put("password", this.thisSessionHTTP.thisSession.uiSG("current_password"));
      Properties root_item = this.thisSessionHTTP.thisSession.uVFS.get_item(this.thisSessionHTTP.thisSession.SG("root_dir"));
      GenericClient c = this.thisSessionHTTP.thisSession.uVFS.getClient(root_item);
      action.put("crushAuth", c.getConfig("crushAuth"));
      this.thisSessionHTTP.thisSession.uVFS.releaseClient(c);
      action.put("request", request);
      String the_dir2 = the_dir;
      if (the_dir2.startsWith(this.thisSessionHTTP.thisSession.SG("root_dir")))
        the_dir2 = the_dir2.substring(this.thisSessionHTTP.thisSession.SG("root_dir").length() - 1); 
      action.put("the_dir", the_dir2);
      action.put("clientid", this.thisSessionHTTP.thisSession.uiSG("clientid"));
      action.put("need_response", "true");
      queue.addElement(action);
      action = UserTools.waitResponse(action, 300);
      quota = Long.parseLong(action.remove("object_response").toString().split(":")[0]);
    } else {
      quota = this.thisSessionHTTP.thisSession.get_quota(the_dir);
    } 
    if (quota != -12345L) {
      listingProp.put("quota", Common.format_bytes_short2(quota));
      listingProp.put("quota_bytes", (new StringBuffer(String.valueOf(quota))).toString());
    } 
    listingProp.put("bytes_sent", (new StringBuffer(String.valueOf(this.thisSessionHTTP.thisSession.IG("bytes_sent")))).toString());
    listingProp.put("bytes_received", (new StringBuffer(String.valueOf(this.thisSessionHTTP.thisSession.IG("bytes_received")))).toString());
    listingProp.put("max_upload_size", (new StringBuffer(String.valueOf(this.thisSessionHTTP.thisSession.IG("max_upload_size")))).toString());
    listingProp.put("max_upload_amount_day", (new StringBuffer(String.valueOf(this.thisSessionHTTP.thisSession.IG("max_upload_amount_day")))).toString());
    listingProp.put("max_upload_amount_month", (new StringBuffer(String.valueOf(this.thisSessionHTTP.thisSession.IG("max_upload_amount_month")))).toString());
    listingProp.put("max_upload_amount", (new StringBuffer(String.valueOf(this.thisSessionHTTP.thisSession.IG("max_upload_amount")))).toString());
    listingProp.put("max_upload_amount_available", (new StringBuffer(String.valueOf(this.thisSessionHTTP.thisSession.IG("max_upload_amount") - this.thisSessionHTTP.thisSession.IG("bytes_received")))).toString());
    listingProp.put("max_download_amount", (new StringBuffer(String.valueOf(this.thisSessionHTTP.thisSession.IG("max_download_amount")))).toString());
    listingProp.put("max_download_amount_day", (new StringBuffer(String.valueOf(this.thisSessionHTTP.thisSession.IG("max_download_amount_day")))).toString());
    listingProp.put("max_download_amount_month", (new StringBuffer(String.valueOf(this.thisSessionHTTP.thisSession.IG("max_download_amount_month")))).toString());
    listingProp.put("max_download_amount_available", (new StringBuffer(String.valueOf(this.thisSessionHTTP.thisSession.IG("max_download_amount") - this.thisSessionHTTP.thisSession.IG("bytes_sent")))).toString());
    if (ServerStatus.BG("calculate_transfer_usage_listings")) {
      if (this.thisSessionHTTP.thisSession.IG("max_upload_amount_day") > 0)
        listingProp.put("max_upload_amount_day_available", (new StringBuffer(String.valueOf(this.thisSessionHTTP.thisSession.IG("max_upload_amount_day") * 1024L - ServerStatus.thisObj.statTools.getTransferAmountToday(this.thisSessionHTTP.thisSession.uiSG("user_ip"), this.thisSessionHTTP.thisSession.uiSG("user_name"), this.thisSessionHTTP.thisSession.uiPG("stat"), "uploads", this.thisSessionHTTP.thisSession)))).toString()); 
      if (this.thisSessionHTTP.thisSession.IG("max_upload_amount_month") > 0)
        listingProp.put("max_upload_amount_month_available", (new StringBuffer(String.valueOf(this.thisSessionHTTP.thisSession.IG("max_upload_amount_month") * 1024L - ServerStatus.thisObj.statTools.getTransferAmountThisMonth(this.thisSessionHTTP.thisSession.uiSG("user_ip"), this.thisSessionHTTP.thisSession.uiSG("user_name"), this.thisSessionHTTP.thisSession.uiPG("stat"), "uploads", this.thisSessionHTTP.thisSession)))).toString()); 
      if (this.thisSessionHTTP.thisSession.IG("max_download_amount_day") > 0)
        listingProp.put("max_download_amount_day_available", (new StringBuffer(String.valueOf(this.thisSessionHTTP.thisSession.IG("max_download_amount_day") * 1024L - ServerStatus.thisObj.statTools.getTransferAmountToday(this.thisSessionHTTP.thisSession.uiSG("user_ip"), this.thisSessionHTTP.thisSession.uiSG("user_name"), this.thisSessionHTTP.thisSession.uiPG("stat"), "downloads", this.thisSessionHTTP.thisSession)))).toString()); 
      if (this.thisSessionHTTP.thisSession.IG("max_download_amount_month") > 0)
        listingProp.put("max_download_amount_month_available", (new StringBuffer(String.valueOf(this.thisSessionHTTP.thisSession.IG("max_download_amount_month") * 1024L - ServerStatus.thisObj.statTools.getTransferAmountThisMonth(this.thisSessionHTTP.thisSession.uiSG("user_ip"), this.thisSessionHTTP.thisSession.uiSG("user_name"), this.thisSessionHTTP.thisSession.uiPG("stat"), "downloads", this.thisSessionHTTP.thisSession)))).toString()); 
      if (this.thisSessionHTTP.thisSession.IG("ratio") != 0)
        listingProp.put("ratio_available", (new StringBuffer(String.valueOf(((this.thisSessionHTTP.thisSession.uiLG("bytes_received") + this.thisSessionHTTP.thisSession.uiLG("ratio_bytes_received")) * this.thisSessionHTTP.thisSession.IG("ratio") - this.thisSessionHTTP.thisSession.uiLG("bytes_sent") + this.thisSessionHTTP.thisSession.uiLG("ratio_bytes_sent")) / 1024L))).toString()); 
    } 
    String altList = "";
    if (request.getProperty("format", "").equalsIgnoreCase("JSON")) {
      altList = AgentUI.getJsonList(listingProp, ServerStatus.BG("exif_listings"), false);
    } else if (request.getProperty("format", "").equalsIgnoreCase("JSONOBJ")) {
      altList = AgentUI.getJsonListObj(listingProp, ServerStatus.BG("exif_listings"));
    } else if (request.getProperty("format", "").equalsIgnoreCase("STAT")) {
      altList = AgentUI.getStatList(listingProp);
    } else if (request.getProperty("format", "").equalsIgnoreCase("STAT_DMZ")) {
      altList = AgentUI.getDmzList(listingProp);
    } 
    if (request.getProperty("format", "").equalsIgnoreCase("JSONOBJ")) {
      Properties combinedPermissions = tmpVFS.getCombinedPermissions();
      boolean aclPermissions = combinedPermissions.getProperty("acl_permissions", "false").equals("true");
      privs = listingProp.getProperty("privs", "");
      if (aclPermissions) {
        privs = tmpVFS.getPriv(the_dir, item);
      } else if ((new VRL(item.getProperty("url"))).getProtocol().toUpperCase().startsWith("HTTP")) {
        Vector list2 = new Vector();
        tmpVFS.getListing(list2, Common.all_but_last(the_dir), 1, 9999, true);
        for (int x = 0; x < list2.size(); x++) {
          Properties p = list2.elementAt(x);
          if (p != null && 
            p.getProperty("name", "").equals(item.getProperty("name", ""))) {
            privs = p.getProperty("privs");
            break;
          } 
        } 
      } 
      String info = "{\r\n";
      info = String.valueOf(info) + "\t\"privs\" : \"" + privs.trim().replaceAll("\\r", "%0D").replaceAll("\\n", "%0A").replaceAll("\"", "%22").replaceAll("\t", "%09") + "\",\r\n";
      info = String.valueOf(info) + "\t\"comment\" : \"" + Common.url_encode(listingProp.getProperty("comment", "").trim()) + "\",\r\n";
      info = String.valueOf(info) + "\t\"path\" : \"" + listingProp.getProperty("path", "").trim().replaceAll("\"", "%22").replaceAll("\t", "%09") + "\",\r\n";
      info = String.valueOf(info) + "\t\"defaultStrings\" : \"" + listingProp.getProperty("defaultStrings", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"site\" : \"" + listingProp.getProperty("site", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"quota\" : \"" + listingProp.getProperty("quota", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"quota_bytes\" : \"" + listingProp.getProperty("quota_bytes", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"bytes_sent\" : \"" + listingProp.getProperty("bytes_sent", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"bytes_received\" : \"" + listingProp.getProperty("bytes_received", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"max_upload_amount_day\" : \"" + listingProp.getProperty("max_upload_amount_day", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"max_upload_amount_month\" : \"" + listingProp.getProperty("max_upload_amount_month", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"max_upload_amount\" : \"" + listingProp.getProperty("max_upload_amount", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"max_upload_amount_available\" : \"" + listingProp.getProperty("max_upload_amount_available", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"max_upload_amount_day_available\" : \"" + listingProp.getProperty("max_upload_amount_day_available", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"max_upload_amount_month_available\" : \"" + listingProp.getProperty("max_upload_amount_month_available", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"max_download_amount\" : \"" + listingProp.getProperty("max_download_amount", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"max_download_amount_day\" : \"" + listingProp.getProperty("max_download_amount_day", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"max_download_amount_month\" : \"" + listingProp.getProperty("max_download_amount_month", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"max_download_amount_available\" : \"" + listingProp.getProperty("max_download_amount_available", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"max_download_amount_day_available\" : \"" + listingProp.getProperty("max_download_amount_day_available", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"max_download_amount_month_available\" : \"" + listingProp.getProperty("max_download_amount_month_available", "").trim() + "\",\r\n";
      info = String.valueOf(info) + "\t\"ratio_available\" : \"" + listingProp.getProperty("ratio_available", "0").trim() + "\",\r\n";
      if (!exists)
        info = String.valueOf(info) + " \"error_msg\" : \"invalid_item\",\r\n"; 
      info = String.valueOf(info) + "\t\"listing\" : " + altList + "\r\n";
      info = String.valueOf(info) + "}\r\n";
      return info;
    } 
    String response = "";
    try {
      response = Common.getXMLString(listingProp, "listingInfo", null);
    } catch (Exception e) {
      Log.log("HTTP_SERVER", 1, e);
    } 
    if (!altList.equals(""))
      response = String.valueOf(response.substring(0, response.indexOf("</privs>") + "</privs>".length())) + altList + response.substring(response.indexOf("</privs>") + "</privs>".length()); 
    return response;
  }
  
  public static Properties getListingInfo(Vector listing, String the_dir, String privs, boolean ignoreRootDir, VFS tmpVFS, boolean realPaths, boolean hideHidden, SessionCrush thisSession, boolean allowDuplicates) {
    Vector items = new Vector();
    Exception error = null;
    try {
      thisSession.date_time = SessionCrush.updateDateCustomizations(thisSession.date_time, thisSession.user);
      if (listing == null) {
        listing = new Vector();
        Log.log("HTTP_SERVER", 3, "Getting dir listing for:" + thisSession.uiSG("user_name") + " with VFS from:" + tmpVFS);
        Log.log("HTTP_SERVER", 3, Thread.currentThread().getName());
        Log.log("HTTP_SERVER", 3, new Exception("From where?"));
        tmpVFS.getListing(listing, the_dir);
        Log.log("HTTP_SERVER", 3, "Found " + listing.size() + " items in " + the_dir + ".");
      } 
      SimpleDateFormat date_time = (SimpleDateFormat)thisSession.date_time.clone();
      Properties pp = new Properties();
      pp.put("listing", listing);
      thisSession.runPlugin("list", pp);
      Properties name_hash = new Properties();
      Log.log("HTTP_SERVER", 3, "Going through listing checking filters...");
      Calendar cal = new GregorianCalendar();
      for (int i = 0; i < listing.size(); i++) {
        Properties list_item = (Properties)((Properties)listing.elementAt(i)).clone();
        if (LIST_handler.checkName(list_item, thisSession, false, false) && 
          !list_item.getProperty("hide_smb", "false").equals("true")) {
          if (thisSession.DG("timezone_offset") != 0.0D) {
            Date d = new Date(Long.parseLong(list_item.getProperty("modified")));
            cal.setTime(d);
            cal.setTimeInMillis((long)(cal.getTimeInMillis() + thisSession.DG("timezone_offset") * 1000.0D * 60.0D * 60.0D));
            list_item.put("modified", (new StringBuffer(String.valueOf(cal.getTime().getTime()))).toString());
          } 
          if (name_hash.get(list_item.getProperty("name")) == null || !hideHidden) {
            if (!allowDuplicates)
              name_hash.put(list_item.getProperty("name"), "DONE"); 
            if (!list_item.containsKey("preview")) {
              if (ServerStatus.BG("find_list_previews")) {
                String preview_the_dir = "/this_dir_does_not_exist";
                try {
                  if (list_item.getProperty("url").startsWith("virtual://")) {
                    Properties tmpItem = tmpVFS.get_item(String.valueOf(list_item.getProperty("root_dir")) + list_item.getProperty("name"));
                    if (tmpItem != null)
                      list_item = tmpItem; 
                  } 
                  preview_the_dir = SearchHandler.getPreviewPath(list_item.getProperty("url"), "1", 1);
                } catch (Exception e) {
                  Log.log("HTTP_SERVER", 1, e);
                  Log.log("HTTP_SERVER", 1, list_item.toString());
                } 
                String index = "";
                if (preview_the_dir != null) {
                  index = String.valueOf(ServerStatus.SG("previews_path")) + preview_the_dir.substring(1);
                  list_item.put("keywords", "");
                } 
                if (preview_the_dir != null && (new File_U(Common.all_but_last(Common.all_but_last(index)))).exists()) {
                  String preview_the_dir_parent = Common.all_but_last(Common.all_but_last(preview_the_dir));
                  int frames = 1;
                  while ((new File_U(String.valueOf(ServerStatus.SG("previews_path")) + preview_the_dir_parent + "p" + frames)).exists())
                    frames++; 
                  if (list_item.getProperty("name").toUpperCase().endsWith(".ZIP") && !ServerStatus.BG("zip_icon_preview_allowed")) {
                    list_item.put("preview", "0");
                  } else {
                    list_item.put("preview", (new StringBuffer(String.valueOf(frames - 1))).toString());
                  } 
                  String indexText = "";
                  if (ServerStatus.BG("exif_keywords")) {
                    if ((new File_U(String.valueOf(Common.all_but_last(Common.all_but_last(index))) + "info.xml")).exists()) {
                      Properties info = (Properties)Common.readXMLObject_U(new File_U(String.valueOf(Common.all_but_last(Common.all_but_last(index))) + "info.xml"));
                      if (info != null)
                        indexText = Common.xss_strip(info.getProperty("keywords", "")); 
                    } 
                  } else if ((new File_U(String.valueOf(Common.all_but_last(Common.all_but_last(index))) + "index.txt")).exists()) {
                    RandomAccessFile out = new RandomAccessFile(new File_U(String.valueOf(Common.all_but_last(Common.all_but_last(index))) + "index.txt"), "r");
                    byte[] b = new byte[(int)out.length()];
                    out.readFully(b);
                    out.close();
                    indexText = Common.xss_strip(new String(b));
                  } 
                  if (ServerStatus.BG("exif_listings")) {
                    String local_path = String.valueOf(Common.all_but_last(Common.all_but_last(index))) + "info.xml";
                    boolean found = false;
                    if (FileClient.memCache) {
                      Properties p = (Properties)PreviewWorker.exif_cache.get(local_path);
                      if (p != null)
                        if (list_item.getProperty("modified", "0").equals(p.getProperty("modified", "1"))) {
                          list_item.putAll(p);
                          found = true;
                        }  
                    } 
                    if (!found && (new File_U(local_path)).exists()) {
                      Properties info = (Properties)Common.readXMLObject_U(new File_U(String.valueOf(Common.all_but_last(Common.all_but_last(index))) + "info.xml"));
                      if (info != null) {
                        Properties p = new Properties();
                        p.put("width", info.getProperty("imagewidth", ""));
                        p.put("height", info.getProperty("imageheight", ""));
                        Enumeration keys = info.keys();
                        while (keys.hasMoreElements()) {
                          String key = (String)keys.nextElement();
                          if (key.startsWith("crushftp_"))
                            p.put(key, Common.xss_strip(info.getProperty(key))); 
                        } 
                        list_item.putAll(p);
                        if (FileClient.memCache) {
                          p.put("modified", list_item.getProperty("modified", "2"));
                          PreviewWorker.exif_cache.put(local_path, p);
                          synchronized (PreviewWorker.exif_cache) {
                            ServerStatus.siPUT("exif_item_count", (new StringBuffer(String.valueOf(ServerStatus.siLG("exif_item_count") + 1L))).toString());
                          } 
                        } 
                      } 
                    } else if (!found && FileClient.memCache) {
                      Properties p = new Properties();
                      p.put("modified", list_item.getProperty("modified", "3"));
                      PreviewWorker.exif_cache.put(local_path, p);
                      synchronized (PreviewWorker.exif_cache) {
                        ServerStatus.siPUT("exif_item_count", (new StringBuffer(String.valueOf(ServerStatus.siLG("exif_item_count") + 1L))).toString());
                      } 
                    } 
                  } 
                  list_item.put("keywords", (indexText == null) ? "" : indexText);
                  if (!(new File_U(String.valueOf(ServerStatus.SG("previews_path")) + preview_the_dir_parent + "p1/1.jpg")).exists())
                    list_item.put("preview", "0"); 
                } else {
                  list_item.put("preview", "0");
                } 
              } else {
                list_item.put("keywords", "");
                list_item.put("preview", "0");
              } 
              if (list_item.getProperty("type", "").equals("DIR") && thisSession.BG("dir_calc")) {
                Properties list_item2 = list_item;
                Vector inside_a_dir_list = new Vector();
                Properties status = new Properties();
                Worker.startWorker(new Runnable(thisSession, inside_a_dir_list, the_dir, list_item2, status) {
                      private final SessionCrush val$thisSession;
                      
                      private final Vector val$inside_a_dir_list;
                      
                      private final String val$the_dir;
                      
                      private final Properties val$list_item2;
                      
                      private final Properties val$status;
                      
                      public void run() {
                        try {
                          this.val$thisSession.uVFS.getListing(this.val$inside_a_dir_list, String.valueOf(this.val$the_dir) + this.val$list_item2.getProperty("name") + "/", Integer.parseInt(this.val$thisSession.uVFS.user.getProperty("dir_depth", "1")), 1000, true, null);
                        } catch (Exception e) {
                          Log.log("SERVER", 1, e);
                        } 
                        this.val$status.put("done", "true");
                      }
                    });
                long total_size = 0L;
                int count = 0;
                while (inside_a_dir_list.size() > 0 || !status.containsKey("done")) {
                  if (inside_a_dir_list.size() > 0) {
                    Properties p = inside_a_dir_list.remove(0);
                    if (!p.getProperty("type", "").toUpperCase().equals("DIR")) {
                      total_size += Long.parseLong(p.getProperty("size"));
                      count++;
                    } 
                    continue;
                  } 
                  Thread.sleep(100L);
                } 
                list_item.put("size", (new StringBuffer(String.valueOf(total_size))).toString());
                list_item.put("num_items", (new StringBuffer(String.valueOf(count))).toString());
              } else if (list_item.getProperty("type", "").equals("DIR") && thisSession.BG("dir_calc_count")) {
                Vector inside_a_dir_list = new Vector();
                Properties list_item2 = list_item;
                Properties status = new Properties();
                Worker.startWorker(new Runnable(thisSession, inside_a_dir_list, the_dir, list_item2, status) {
                      private final SessionCrush val$thisSession;
                      
                      private final Vector val$inside_a_dir_list;
                      
                      private final String val$the_dir;
                      
                      private final Properties val$list_item2;
                      
                      private final Properties val$status;
                      
                      public void run() {
                        try {
                          this.val$thisSession.uVFS.getListing(this.val$inside_a_dir_list, String.valueOf(this.val$the_dir) + this.val$list_item2.getProperty("name") + "/", 1, 1000, true);
                        } catch (Exception e) {
                          Log.log("SERVER", 1, e);
                        } 
                        this.val$status.put("done", "true");
                      }
                    });
                int count = 0;
                while (inside_a_dir_list.size() > 0 || !status.containsKey("done")) {
                  if (inside_a_dir_list.size() > 0) {
                    Properties p = inside_a_dir_list.remove(0);
                    if (LIST_handler.checkName(p, thisSession, false, false))
                      count++; 
                    continue;
                  } 
                  Thread.sleep(100L);
                } 
                list_item2.put("num_items", count - 1);
              } 
              list_item.put("sizeFormatted", Common.format_bytes2(list_item.getProperty("size")));
              list_item.put("date", String.valueOf(list_item.getProperty("month", "")) + " " + list_item.getProperty("day", "") + " " + list_item.getProperty("time_or_year", ""));
              Date d = new Date(Long.parseLong(list_item.getProperty("modified", "0")));
              if (d.getTime() < 30000000L) {
                list_item.put("dateFormatted", "");
              } else {
                list_item.put("dateFormatted", date_time.format(d));
              } 
              list_item.put("modified", list_item.getProperty("modified", "0"));
              if (list_item.getProperty("privs").indexOf("(comment") >= 0) {
                String comment = Common.url_decode(list_item.getProperty("privs").substring(list_item.getProperty("privs").indexOf("(comment") + 8, list_item.getProperty("privs").indexOf(")", list_item.getProperty("privs").indexOf("(comment"))));
                list_item.put("comment", ServerStatus.thisObj.change_vars_to_values(comment.trim(), thisSession));
              } 
            } 
            list_item.remove("url");
            list_item.put("itemType", list_item.getProperty("type"));
            String the_dir2 = list_item.getProperty("root_dir", "/");
            if (the_dir2.equals("/"))
              the_dir2 = thisSession.SG("root_dir"); 
            if (!ignoreRootDir) {
              if (the_dir2.startsWith("/") && !the_dir2.toUpperCase().startsWith(thisSession.SG("root_dir").toUpperCase()))
                the_dir2 = String.valueOf(thisSession.SG("root_dir")) + the_dir2.substring(1); 
              the_dir2 = the_dir2.substring(thisSession.SG("root_dir").length() - 1);
            } 
            list_item.put("root_dir", the_dir2);
            if (list_item.getProperty("privs").indexOf("(inherited)") < 0 && thisSession.uVFS.getCombinedPermissions().getProperty("acl_permissions", "false").equals("false")) {
              list_item.put("privs", Common.replace_str(list_item.getProperty("privs", ""), "(delete)", ""));
              list_item.put("privs", Common.replace_str(list_item.getProperty("privs", ""), "(rename)", ""));
            } 
            items.addElement(list_item);
          } 
        } 
      } 
    } catch (Exception e) {
      thisSession.uVFS.reset();
      tmpVFS.reset();
      Log.log("HTTP_SERVER", 1, e);
      error = e;
    } 
    Common.do_sort(items, "name");
    for (int x = 0; x < items.size(); x++) {
      Properties lp = items.elementAt(x);
      if (lp.getProperty("dir", "").indexOf("\"") >= 0)
        lp.put("dir", lp.getProperty("dir", "").replaceAll("\\\"", "%22").replaceAll("\t", "%09")); 
      if (lp.getProperty("name", "").indexOf("\"") >= 0)
        lp.put("name", lp.getProperty("name", "").replaceAll("\\\"", "%22").replaceAll("\t", "%09")); 
      if (lp.getProperty("name", "").endsWith(" ") || lp.getProperty("name", "").startsWith(" "))
        lp.put("name", lp.getProperty("name", "").replaceAll(" ", "%20")); 
      if (lp.getProperty("path", "").indexOf("\"") >= 0)
        lp.put("path", lp.getProperty("path", "").replaceAll("\\\"", "%22").replaceAll("\t", "%09")); 
      if (lp.getProperty("root_dir", "").indexOf("\"") >= 0)
        lp.put("root_dir", lp.getProperty("root_dir", "").replaceAll("\\\"", "%22").replaceAll("\t", "%09")); 
      String itemName = lp.getProperty("name");
      String str1 = String.valueOf(the_dir) + lp.getProperty("name");
      if (realPaths)
        try {
          Properties tmpItem = tmpVFS.get_item(str1);
          VRL vrl = new VRL(tmpItem.getProperty("url"));
          lp.put("root_dir", Common.all_but_last(vrl.getPath()));
        } catch (Exception exception) {} 
      String root_dir = lp.getProperty("root_dir");
      String href_path = String.valueOf(lp.getProperty("root_dir")) + lp.getProperty("name");
      if (href_path.startsWith("//") && !href_path.startsWith("////"))
        href_path = "//" + href_path; 
      try {
        lp.put("source", "/WebInterface/function/?command=getPreview&size=3&path=" + str1);
      } catch (Exception exception) {}
      try {
        lp.put("href_path", href_path);
      } catch (Exception exception) {}
      try {
        lp.put("root_dir", root_dir);
      } catch (Exception exception) {}
      try {
        lp.put("name", itemName);
      } catch (Exception exception) {}
    } 
    Properties listingProp = new Properties();
    listingProp.put("privs", privs);
    String itemPath = the_dir;
    try {
      listingProp.put("path", itemPath);
    } catch (Exception exception) {}
    listingProp.put("listing", items);
    if (error != null)
      listingProp.put("error", error); 
    return listingProp;
  }
  
  public String downloadItem(VRL otherFile, Properties item, String fileName, Vector byteRanges, boolean simpleRanges, String mimeType) throws Exception {
    if (byteRanges.size() > 0) {
      write_command_http("HTTP/1.1 206 Partial Content");
    } else {
      write_command_http("HTTP/1.1 200 OK");
    } 
    this.thisSessionHTTP.write_standard_headers();
    String byteRangeBoundary = Common.makeBoundary();
    String contentType = "application/binary";
    if (!mimeType.equals(""))
      contentType = mimeType; 
    if (byteRanges.size() <= 1 || simpleRanges) {
      write_command_http("Content-Type: " + contentType);
    } else if (byteRanges.size() > 1) {
      write_command_http("Content-Type: multipart/byteranges; boundary=" + byteRangeBoundary);
    } 
    fileName = Common.replace_str(Common.url_decode(fileName), "\r", "_");
    if (contentType.equals("application/binary"))
      write_command_http("Content-Disposition: attachment; filename=\"" + ((this.thisSessionHTTP.thisSession.uiSG("header_user-agent").toUpperCase().indexOf("MSIE") >= 0 || this.thisSessionHTTP.thisSession.uiSG("header_user-agent").toUpperCase().indexOf("TRIDENT") >= 0) ? Common.url_encode(fileName) : fileName) + "\""); 
    write_command_http("X-UA-Compatible: chrome=1");
    GenericClient c = this.thisSessionHTTP.thisSession.uVFS.getClient(item);
    Properties stat = null;
    try {
      stat = c.stat(otherFile.getPath());
    } finally {
      c = this.thisSessionHTTP.thisSession.uVFS.releaseClient(c);
    } 
    write_command_http("Last-Modified: " + this.thisSessionHTTP.sdf_rfc1123.format(new Date(Long.parseLong(stat.getProperty("modified")))));
    write_command_http("ETag: " + Long.parseLong(stat.getProperty("modified")));
    String amountEnd = stat.getProperty("size");
    for (int x = 0; x < byteRanges.size(); x++) {
      Properties pp = byteRanges.elementAt(x);
      if (pp.getProperty("end", "").equals(""))
        pp.put("end", (new StringBuffer(String.valueOf(Long.parseLong(amountEnd) - 1L))).toString()); 
    } 
    if (stat == null && otherFile.getName().toUpperCase().endsWith(".ZIP")) {
      Common.startMultiThreadZipper(this.thisSessionHTTP.thisSession.uVFS, this.thisSessionHTTP.retr, Common.dots(this.thisSessionHTTP.pwd()), 2000, !(!item.getProperty("url").toUpperCase().startsWith("FTP:/") && !item.getProperty("url").toUpperCase().startsWith("HTTP:/")), new Vector());
      write_command_http("Connection: close");
      this.thisSessionHTTP.done = true;
    } else {
      long l = 0L;
      try {
        l = Long.parseLong(stat.getProperty("size"));
      } catch (Exception exception) {}
      if (byteRanges.size() == 1) {
        Properties pp = byteRanges.elementAt(0);
        write_command_http("Content-Range: bytes " + pp.getProperty("start") + "-" + Long.parseLong(pp.getProperty("end")) + "/" + l);
        long calculatedContentLength = Long.parseLong(pp.getProperty("end")) - Long.parseLong(pp.getProperty("start"));
        if (calculatedContentLength == 0L)
          calculatedContentLength = 1L; 
        write_command_http("Content-Length: " + calculatedContentLength);
      } else if (byteRanges.size() <= 1) {
        boolean ok = true;
        if (!this.thisSessionHTTP.thisSession.user.getProperty("filePublicEncryptionKey", "").equals("") || ServerStatus.BG("fileEncryption"))
          if (otherFile != null && otherFile.getProtocol().equalsIgnoreCase("file")) {
            byte[] b = new byte[200];
            try {
              FileInputStream tempIn = new FileInputStream(new File_U(Common.url_decode(otherFile.getFile())));
              tempIn.read(b);
              tempIn.close();
              String s = new String(b);
              if (s.indexOf("CRUSHFTP#") >= 0) {
                s = s.substring(s.indexOf("CRUSHFTP#") + "CRUSHFTP#".length());
                if (s.indexOf("\r") >= 0)
                  s = s.substring(0, s.indexOf("\r")).trim(); 
                if (s.indexOf("\n") >= 0)
                  s = s.substring(0, s.indexOf("\n")).trim(); 
                if (s.equals(""))
                  ok = false; 
              } 
            } catch (Exception e) {
              ok = false;
              Log.log("SERVER", 1, e);
            } 
          }  
        if (ok) {
          write_command_http("Content-Length: " + l);
        } else {
          this.thisSessionHTTP.done = true;
          write_command_http("Connection: close");
        } 
      } else if (byteRanges.size() > 1) {
        if (simpleRanges) {
          long calculatedContentLength = 0L;
          for (int j = 0; j < byteRanges.size(); j++) {
            Properties pp = byteRanges.elementAt(j);
            calculatedContentLength += Long.parseLong(pp.getProperty("end")) - Long.parseLong(pp.getProperty("start"));
          } 
          write_command_http("Content-Length: " + calculatedContentLength);
        } else {
          long calculatedContentLength = 2L;
          for (int j = 0; j < byteRanges.size(); j++) {
            Properties pp = byteRanges.elementAt(j);
            calculatedContentLength += (("--" + byteRangeBoundary).length() + 2);
            calculatedContentLength += (("Content-Type: " + contentType).length() + 2);
            calculatedContentLength += (("Content-range: bytes " + pp.getProperty("start") + "-" + pp.getProperty("end") + "/" + l).length() + 2);
            calculatedContentLength += 2L;
            calculatedContentLength += Long.parseLong(pp.getProperty("end")) - Long.parseLong(pp.getProperty("start"));
            calculatedContentLength += 2L;
          } 
          calculatedContentLength += (("--" + byteRangeBoundary + "--").length() + 2);
          if (calculatedContentLength == 0L)
            calculatedContentLength = 1L; 
          write_command_http("Content-Length: " + calculatedContentLength);
        } 
      } 
      write_command_http("Accept-Ranges: bytes");
    } 
    if (this.thisSessionHTTP.thisSession.uiSG("header_user-agent").toUpperCase().indexOf("MSIE") >= 0 || this.thisSessionHTTP.thisSession.uiSG("header_user-agent").toUpperCase().indexOf("TRIDENT") >= 0)
      fileName = Common.url_encode(fileName); 
    write_command_http("");
    if (byteRanges.size() == 0) {
      Properties pp = new Properties();
      pp.put("start", "0");
      pp.put("end", "-1");
      byteRanges.addElement(pp);
    } 
    long content_length = 0L;
    try {
      content_length = Long.parseLong(stat.getProperty("size"));
    } catch (Exception exception) {}
    for (int i = 0; i < byteRanges.size(); i++) {
      Properties pp = byteRanges.elementAt(i);
      if (byteRanges.size() > 1 && !simpleRanges) {
        if (i == 0)
          write_command_http(""); 
        write_command_http("--" + byteRangeBoundary);
        write_command_http("Content-Type: " + contentType);
        write_command_http("Content-range: bytes " + pp.getProperty("start") + "-" + pp.getProperty("end") + "/" + content_length);
        write_command_http("");
      } 
      this.thisSessionHTTP.thisSession.uiPUT("file_transfer_mode", "BINARY");
      this.thisSessionHTTP.retr.data_os = this.thisSessionHTTP.original_os;
      this.thisSessionHTTP.retr.httpDownload = true;
      String the_dir = this.thisSessionHTTP.pwd();
      Properties ppp = new Properties();
      ppp.put("the_dir", the_dir);
      this.thisSessionHTTP.thisSession.runPlugin("transfer_path", ppp);
      the_dir = ppp.getProperty("the_dir", the_dir);
      this.thisSessionHTTP.retr.init_vars(the_dir, Long.parseLong(pp.getProperty("start")), Long.parseLong(pp.getProperty("end")) + 1L, this.thisSessionHTTP.thisSession, item, false, "", otherFile, null);
      this.thisSessionHTTP.retr.runOnce = true;
      this.thisSessionHTTP.retr.run();
      if (this.thisSessionHTTP.retr.stop_message.length() > 0)
        return this.thisSessionHTTP.retr.stop_message; 
      if (byteRanges.size() > 1 && !simpleRanges)
        write_command_http(""); 
    } 
    if (byteRanges.size() > 1 && !simpleRanges)
      write_command_http("--" + byteRangeBoundary + "--"); 
    return "";
  }
  
  public static void processAs2HeaderLine(String key, String val, String data, Properties as2Info) {
    as2Info.put(key.trim().toLowerCase(), val.trim());
    if (data.toLowerCase().startsWith("message-id:")) {
      String as2Filename = data.substring(data.indexOf(":") + 1).trim();
      as2Filename = as2Filename.substring(1);
      if (as2Filename.indexOf("@") >= 0)
        as2Filename = as2Filename.substring(0, as2Filename.indexOf("@")); 
      as2Info.put("as2Filename", as2Filename);
    } else if (data.toLowerCase().startsWith("content-type:")) {
      as2Info.put("contentType", data.substring(data.indexOf(":") + 1).trim());
    } else if (data.toLowerCase().startsWith("disposition-notification-options:")) {
      as2Info.put("signMdn", (new StringBuffer(String.valueOf((data.substring(data.indexOf(":") + 1).trim().indexOf("pkcs7-signature") >= 0)))).toString());
    } 
  }
  
  public boolean buildPostItem(Properties request, long http_len_max, Vector headers, String req_id) throws Exception {
    Properties as2Info = new Properties();
    boolean write100Continue = false;
    for (int x = 1; x < headers.size(); x++) {
      String data = headers.elementAt(x).toString();
      String key = data;
      String val = "";
      try {
        val = data.substring(data.indexOf(":") + 1).trim();
        key = data.substring(0, data.indexOf(":")).trim().toLowerCase();
      } catch (Exception e) {
        Log.log("HTTP_SERVER", 3, e);
      } 
      as2Info.put(key, val);
      if (data.toLowerCase().startsWith("expect: 100-continue")) {
        write100Continue = true;
      } else {
        processAs2HeaderLine(key, val, data, as2Info);
      } 
    } 
    if (!as2Info.getProperty("as2-to", "").equals("")) {
      if (!this.thisSessionHTTP.thisSession.uiBG("user_logged_in"))
        return false; 
      if (write100Continue) {
        this.thisSessionHTTP.writeCookieAuth = false;
        write_command_http("HTTP/1.1 100 Continue");
        write_command_http("");
      } 
      Vector payloads = new Vector();
      String messageId = as2Info.getProperty("message-id", "-NONE-");
      if (messageId.startsWith("<"))
        messageId = messageId.substring(1, messageId.length() - 1); 
      String contentType = as2Info.getProperty("contentType");
      boolean mdnResponse = false;
      if (as2Info.getProperty("contentType").toLowerCase().indexOf("disposition-notification") >= 0 || as2Info.getProperty("subject", "").toUpperCase().indexOf("DELIVERY NOTIFICATION") >= 0 || !as2Info.getProperty("mdnbytes", "0").equals("0"))
        mdnResponse = true; 
      if (as2Info.containsKey("filename"))
        as2Info.put("as2Filename", as2Info.getProperty("filename")); 
      this.thisSessionHTTP.thisSession.user_info.putAll(as2Info);
      String data0 = headers.elementAt(0).toString();
      data0 = data0.substring(data0.indexOf(" ") + 1, data0.lastIndexOf(" "));
      if (!data0.endsWith("/"))
        data0 = String.valueOf(data0) + "/"; 
      this.thisSessionHTTP.cd(data0);
      this.thisSessionHTTP.setupSession();
      String the_dir = this.thisSessionHTTP.pwd();
      if (!the_dir.startsWith(this.thisSessionHTTP.thisSession.SG("root_dir")))
        the_dir = String.valueOf(this.thisSessionHTTP.thisSession.SG("root_dir")) + the_dir.substring(1); 
      Properties site_item = this.thisSessionHTTP.thisSession.uVFS.get_item(the_dir);
      String boundary = "";
      String mdn = null;
      As2Msg m = new As2Msg();
      Properties info = new Properties();
      Properties user = this.thisSessionHTTP.thisSession.user;
      Object outData = null;
      boolean inerror = false;
      String keystorePass = user.getProperty("as2EncryptKeystorePassword", this.thisSessionHTTP.thisSession.getProperty("as2EncryptKeystorePassword", ""));
      String signstorePass = user.getProperty("as2SignKeystorePassword", this.thisSessionHTTP.thisSession.getProperty("as2SignKeystorePassword", ""));
      String keyPass = user.getProperty("as2EncryptKeystorePassword", this.thisSessionHTTP.thisSession.getProperty("as2EncryptKeystorePassword", ""));
      if (user.getProperty("userVersion", "4").equals("4") || user.getProperty("userVersion", "4").equals("5")) {
        keystorePass = ServerStatus.thisObj.common_code.encode_pass(keystorePass, "DES", "");
        keyPass = ServerStatus.thisObj.common_code.encode_pass(keyPass, "DES", "");
      } 
      try {
        try {
          GenericClient c = this.thisSessionHTTP.thisSession.uVFS.getClient(site_item);
          try {
            c.doCommand("CWD " + this.thisSessionHTTP.pwd());
          } finally {
            c = this.thisSessionHTTP.thisSession.uVFS.releaseClient(c);
          } 
          getUserInfo("USERINFO", site_item, the_dir);
        } catch (Exception e) {
          Log.log("HTTP_SERVER", 2, e);
        } 
        this.thisSessionHTTP.cd(String.valueOf(the_dir) + as2Info.getProperty("as2Filename"));
        Object inData = null;
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        this.thisSessionHTTP.doPutFile(http_len_max, this.thisSessionHTTP.done, headers, baos, String.valueOf(the_dir) + as2Info.getProperty("as2Filename"), false, 0L, null);
        inData = baos.toByteArray();
        String tmpFilename = String.valueOf(System.currentTimeMillis()) + ".as2dump";
        if (Log.log("HTTP_SERVER", 4, "Raw File Data Dumped to disk:" + tmpFilename)) {
          RandomAccessFile tmp = new RandomAccessFile(new File_U(tmpFilename), "rw");
          tmp.write((byte[])inData);
          tmp.close();
        } 
        this.thisSessionHTTP.done = true;
        this.thisSessionHTTP.keepGoing = false;
        outData = m.decryptData(info, inData, as2Info.getProperty("contentType"), user.getProperty("as2EncryptKeystoreFormat", this.thisSessionHTTP.thisSession.getProperty("as2EncryptKeystoreFormat", "PKCS12")), user.getProperty("as2EncryptKeystorePath", this.thisSessionHTTP.thisSession.getProperty("as2EncryptKeystorePath", ".keystore")), keystorePass, keyPass, user.getProperty("as2EncryptKeyAlias", this.thisSessionHTTP.thisSession.getProperty("as2EncryptKeyAlias", "")));
        info.put("content-disposition", as2Info.getProperty("content-disposition", ""));
        info.put("as2Filename", as2Info.getProperty("as2Filename"));
        String[] dnos = as2Info.getProperty("Disposition-Notification-Options".toLowerCase(), "").split(";");
        String mic_alg = null;
        try {
          for (int j = 0; j < dnos.length && mic_alg == null; j++) {
            if (dnos[j].trim().toLowerCase().startsWith("signed-receipt-micalg")) {
              String[] mic_algs = dnos[j].trim().toLowerCase().split("=")[1].trim().split(",");
              for (int xx = 0; xx < mic_algs.length && mic_alg == null; xx++) {
                if (mic_algs[xx].trim().equalsIgnoreCase("sha-256")) {
                  mic_alg = "sha-256";
                } else if (mic_algs[xx].trim().equalsIgnoreCase("sha256")) {
                  mic_alg = "sha256";
                } else if (mic_algs[xx].trim().equalsIgnoreCase("sha1")) {
                  mic_alg = "sha1";
                } else if (mic_algs[xx].trim().equalsIgnoreCase("md5")) {
                  mic_alg = "md5";
                } 
              } 
            } 
          } 
        } catch (Exception e) {
          Log.log("SERVER", 1, e);
        } 
        if (mic_alg == null)
          mic_alg = "sha1"; 
        info.put("mic_alg", mic_alg);
        payloads = m.getPayloadsAndMic(info, outData, user.getProperty("as2SignKeystoreFormat", this.thisSessionHTTP.thisSession.getProperty("as2SignKeystoreFormat", "PKCS12")), user.getProperty("as2SignKeystorePath", this.thisSessionHTTP.thisSession.getProperty("as2SignKeystorePath", "")), signstorePass, user.getProperty("as2SignKeyAlias", this.thisSessionHTTP.thisSession.getProperty("as2SignKeyAlias", "")), mic_alg);
        if (info.getProperty("contentType", "").toLowerCase().indexOf("disposition-notification") >= 0 || mdnResponse) {
          mdnResponse = true;
          if (contentType.toLowerCase().indexOf("disposition-notification") < 0 && info.getProperty("contentType", "").toLowerCase().indexOf("disposition-notification") >= 0)
            contentType = info.getProperty("contentType", ""); 
        } 
      } catch (Exception e) {
        this.thisSessionHTTP.thisSession.user_info.putAll(as2Info);
        Log.log("SERVER", 0, e);
        payloads = new Vector();
        inerror = true;
        this.thisSessionHTTP.thisSession.doErrorEvent(e);
      } 
      if (!mdnResponse) {
        Log.log("AS2_SERVER", 1, "AS2:Payloads:" + payloads.size() + ":" + payloads);
        Log.log("AS2_SERVER", 1, "AS2:info:" + info);
        Log.log("AS2_SERVER", 2, "AS2:as2Info:" + as2Info);
        String disp_state = "automatic-action/MDN-sent-automatically; " + (inerror ? "failed" : "processed");
        mdn = m.createMDN(info.getProperty("mic", ""), info.getProperty("mic_alg", "sha1"), as2Info.getProperty("signMdn", "false").equals("true"), as2Info.getProperty("as2-to", ""), messageId, disp_state, "Received AS2 message.", user.getProperty("as2EncryptKeystoreFormat", this.thisSessionHTTP.thisSession.getProperty("as2EncryptKeystoreFormat", "PKCS12")), user.getProperty("as2EncryptKeystorePath", this.thisSessionHTTP.thisSession.getProperty("as2EncryptKeystorePath", ".keystore")), keystorePass, keyPass, user.getProperty("as2EncryptKeyAlias", this.thisSessionHTTP.thisSession.getProperty("as2EncryptKeyAlias", "")));
        Log.log("AS2_SERVER", 1, "AS2:MDN:" + mdn);
        BufferedReader sr = new BufferedReader(new StringReader(mdn));
        while (boundary.equals(""))
          boundary = sr.readLine().trim(); 
        sr.close();
      } 
      this.thisSessionHTTP.thisSession.user_info.putAll(as2Info);
      for (int i = 0; i < payloads.size(); i++) {
        boolean ok = false;
        if (this.thisSessionHTTP.thisSession.check_access_privs(this.thisSessionHTTP.pwd(), "STOR") && Common.filter_check("U", Common.last(this.thisSessionHTTP.pwd()), String.valueOf(ServerStatus.SG("filename_filters_str")) + "\r\n" + this.thisSessionHTTP.thisSession.SG("file_filter")))
          ok = true; 
        if (ok) {
          Properties uploadStat1 = null;
          Properties uploadStat2 = null;
          Object o = payloads.elementAt(i);
          if (o instanceof File_U) {
            File_U f = (File_U)o;
            this.thisSessionHTTP.cd(String.valueOf(Common.all_but_last(this.thisSessionHTTP.pwd())) + f.getName());
            Properties result = this.thisSessionHTTP.getStorOutputStream(String.valueOf(Common.all_but_last(this.thisSessionHTTP.pwd())) + f.getName(), 0L, false, null);
            STOR_handler stor = (STOR_handler)result.remove("stor");
            OutputStream of_stream = (OutputStream)result.remove("out");
            Common.copyStreams(new FileInputStream(f), of_stream, true, true);
            while (stor != null && stor.active2.getProperty("active", "").equals("true"))
              Thread.sleep(100L); 
            stor = null;
            uploadStat1 = this.thisSessionHTTP.thisSession.uiPG("lastUploadStat");
          } else {
            Properties payload = (Properties)o;
            byte[] b = (byte[])payload.get("data");
            Properties mdnInfo = null;
            String ext = "";
            if (mdnResponse) {
              ext = ".mdn";
              try {
                try {
                  mdnInfo = m.parseMDN(b, contentType);
                } catch (Exception e) {
                  this.thisSessionHTTP.thisSession.doErrorEvent(e);
                  Log.log("HTTP_SERVER", 1, e);
                } 
                if (mdnInfo == null) {
                  mdnInfo = new Properties();
                  BufferedReader br = new BufferedReader(new StringReader(new String(b)));
                  String line = "";
                  while ((line = br.readLine()) != null) {
                    if (line.indexOf(":") > 0) {
                      String key = line.substring(0, line.indexOf(":")).toLowerCase().trim();
                      mdnInfo.put(key, line.substring(line.indexOf(":") + 1).trim());
                    } 
                  } 
                } 
                payload.put("name", mdnInfo.getProperty("Original-Message-ID".toLowerCase()).replace('<', '_').replace('>', '_').replace('/', '_'));
                b = mdnInfo.toString().getBytes("UTF8");
              } catch (Exception e) {
                this.thisSessionHTTP.thisSession.user_info.putAll(as2Info);
                this.thisSessionHTTP.thisSession.doErrorEvent(e);
                Log.log("HTTP_SERVER", 1, e);
              } 
            } 
            String originalDir = Common.all_but_last(this.thisSessionHTTP.pwd());
            String filename = String.valueOf(originalDir) + payload.getProperty("name", "");
            if (filename.endsWith(".") && ext.startsWith(".")) {
              filename = String.valueOf(filename) + ext.substring(1);
            } else {
              filename = String.valueOf(filename) + ext;
            } 
            this.thisSessionHTTP.cd(filename);
            Properties result = this.thisSessionHTTP.getStorOutputStream(String.valueOf(filename) + ".zipstream", 0L, false, null);
            STOR_handler stor = (STOR_handler)result.remove("stor");
            Properties active = (Properties)result.get("active");
            OutputStream of_stream = (OutputStream)result.remove("out");
            ZipOutputStream zout = new ZipOutputStream(of_stream);
            zout.setLevel(0);
            String tmp_path = filename;
            if (tmp_path.startsWith(this.thisSessionHTTP.thisSession.SG("root_dir")))
              tmp_path = Common.last(tmp_path); 
            zout.putNextEntry(new ZipEntry(tmp_path));
            Common.copyStreams(new ByteArrayInputStream(b), zout, true, false);
            while (!active.getProperty("streamOpenStatus", "").equals("PENDING") && !active.getProperty("streamOpenStatus", "").equals("OPEN"))
              Thread.sleep(100L); 
            zout.closeEntry();
            if (!mdnResponse) {
              String filename2 = String.valueOf(originalDir) + messageId.replace('<', '_').replace('>', '_').replace('/', '_') + ".out.mdn";
              this.thisSessionHTTP.cd(filename2);
              tmp_path = filename2;
              if (tmp_path.startsWith(this.thisSessionHTTP.thisSession.SG("root_dir")))
                tmp_path = Common.last(tmp_path); 
              zout.putNextEntry(new ZipEntry(tmp_path));
              Common.copyStreams(new ByteArrayInputStream(mdn.getBytes("UTF8")), zout, true, false);
              zout.closeEntry();
              uploadStat2 = this.thisSessionHTTP.thisSession.uiPG("lastUploadStat");
            } 
            zout.finish();
            zout.close();
            while (active.getProperty("active", "").equals("true"))
              Thread.sleep(100L); 
            stor = null;
            this.thisSessionHTTP.thisSession.user_info.putAll(as2Info);
            try {
              if (mdnInfo != null) {
                mdnInfo.put("b", b);
                mdnInfo.put("item", this.thisSessionHTTP.thisSession.uVFS.get_item(filename));
                As2Msg.mdnResponses.put(mdnInfo.getProperty("Original-Message-ID".toLowerCase()), mdnInfo);
                if (Common.dmz_mode) {
                  Vector queue = (Vector)Common.System2.get("crushftp.dmz.queue");
                  Properties action = new Properties();
                  action.put("type", "PUT:AS2MDN");
                  action.put("id", Common.makeBoundary());
                  action.put("mdnInfo", mdnInfo);
                  action.put("need_response", "false");
                  queue.addElement(action);
                } 
                Thread.sleep(5000L);
                As2Msg.mdnResponses.remove(mdnInfo.getProperty("Original-Message-ID".toLowerCase()));
              } 
            } catch (Exception e) {
              this.thisSessionHTTP.thisSession.doErrorEvent(e);
              Log.log("HTTP_SERVER", 1, e);
            } 
            uploadStat1 = this.thisSessionHTTP.thisSession.uiPG("lastUploadStat");
          } 
          try {
            if (uploadStat1 != null)
              uploadStat1.putAll(as2Info); 
            if (uploadStat2 != null)
              uploadStat2.putAll(as2Info); 
            int loops = 0;
            while (this.thisSessionHTTP.thisSession.uiPG("lastUploadStat") == null && loops++ < 100)
              Thread.sleep(100L); 
            if (this.thisSessionHTTP.thisSession.uiPG("lastUploadStat") == null) {
              this.thisSessionHTTP.thisSession.user_info.putAll(as2Info);
              write_command_http("HTTP/1.1 500 Error");
              write_command_http("Pragma: no-cache");
              this.thisSessionHTTP.write_standard_headers();
              write_command_http("Content-Length: " + ("file transfer error".length() + 2));
              write_command_http("");
              write_command_http("file transfer error");
              return false;
            } 
          } catch (Exception e) {
            this.thisSessionHTTP.thisSession.doErrorEvent(e);
            Log.log("HTTP_SERVER", 0, e);
          } 
        } 
      } 
      String destUrl = null;
      if (!as2Info.getProperty("receipt-delivery-option", "").equals(""))
        destUrl = as2Info.getProperty("receipt-delivery-option", ""); 
      write_command_http("HTTP/1.1 200 OK");
      this.thisSessionHTTP.write_standard_headers();
      write_command_http("From: AS2");
      write_command_http("Message-ID: <AS2-" + (new Date()).getTime() + "-" + Common.makeBoundary(3) + "@" + as2Info.getProperty("as2-to", "") + "_" + as2Info.getProperty("as2-from", "") + ">");
      Thread.sleep(1L);
      write_command_http("Mime-Version: 1.0");
      if (boundary.length() > 0) {
        write_command_http("AS2-To: " + as2Info.getProperty("as2-from", ""));
        write_command_http("AS2-From: " + as2Info.getProperty("as2-to", ""));
        write_command_http("Subject: Message Delivery Notification");
        write_command_http("AS2-Version: 1.1");
        if (as2Info.getProperty("signMdn", "false").equals("true")) {
          write_command_http("Content-Type: multipart/signed; boundary=\"" + boundary.substring(2) + "\"; protocol=\"application/pkcs7-signature\"; report-type=disposition-notification; micalg=" + info.getProperty("mic_alg", "sha1") + "; charset=utf-8");
        } else {
          write_command_http("Content-Type: multipart/report; boundary=\"" + boundary.substring(2) + "\"; report-type=disposition-notification; micalg=" + info.getProperty("mic_alg", "sha1") + "; charset=utf-8");
        } 
      } 
      if (destUrl == null && mdn != null) {
        write_command_http("Content-Length: " + mdn.length());
        write_command_http("");
        write_command_http(mdn);
      } else {
        write_command_http("Content-Length: 0");
        write_command_http("");
        if (mdn != null) {
          String results = m.doAsyncMDNPost(null, "", "", as2Info, false, mdn, boundary, destUrl, user.getProperty("as2EncryptKeystorePath", this.thisSessionHTTP.thisSession.getProperty("as2EncryptKeystorePath", ".keystore")), keystorePass, keyPass, true, "(current_server)");
          this.thisSessionHTTP.thisSession.add_log("[" + this.thisSessionHTTP.thisSession.uiSG("user_number") + ":" + this.thisSessionHTTP.thisSession.uiSG("user_name") + ":" + this.thisSessionHTTP.thisSession.uiSG("user_ip") + "] DATA: *" + results.trim() + "*", "HTTP");
        } 
      } 
      if (outData != null && outData instanceof File_U) {
        int loops = 0;
        while (!((File_U)outData).delete() && loops++ < 10)
          Thread.sleep(100L); 
      } 
      if (this.thisSessionHTTP.thisSession != null)
        if (Common.dmz_mode) {
          Vector queue = (Vector)Common.System2.get("crushftp.dmz.queue");
          Properties action = new Properties();
          action.put("type", "PUT:BATCH_COMPLETE");
          action.put("id", Common.makeBoundary());
          Properties root_item = this.thisSessionHTTP.thisSession.uVFS.get_item(this.thisSessionHTTP.thisSession.SG("root_dir"));
          GenericClient c = this.thisSessionHTTP.thisSession.uVFS.getClient(root_item);
          action.put("crushAuth", c.getConfig("crushAuth"));
          this.thisSessionHTTP.thisSession.uVFS.releaseClient(c);
          action.put("user_ip", this.thisSessionHTTP.thisSession.uiSG("user_ip"));
          action.put("request", request);
          action.put("need_response", "false");
          queue.addElement(action);
          this.thisSessionHTTP.thisSession.uVFS.releaseClient(c);
        } else {
          this.thisSessionHTTP.thisSession.do_event5("BATCH_COMPLETE", null);
        }  
      return false;
    } 
    if (http_len_max < 10240000L) {
      if (as2Info.getProperty("content-type", "").indexOf("multipart") >= 0) {
        String boundary = as2Info.getProperty("content-type", "").substring(as2Info.getProperty("content-type", "").toUpperCase().indexOf("BOUNDARY=") + "BOUNDARY=".length()).trim();
        Vector items = this.thisSessionHTTP.parsePostArguments(boundary, http_len_max, false, req_id);
        for (int i = 0; i < items.size(); i++) {
          Properties pp = items.elementAt(i);
          request.putAll(pp);
        } 
      } else {
        this.thisSessionHTTP.start_idle_timer(-20);
        String postData = this.thisSessionHTTP.get_raw_http_command((int)http_len_max);
        this.thisSessionHTTP.stop_idle_timer();
        String[] postItems = postData.split("&");
        request.put("type", "text");
        boolean noResult = false;
        boolean merged_line = false;
        String merged = "";
        for (int i = 0; i < postItems.length; i++) {
          if (!postItems[i].trim().equals("")) {
            String name = Common.url_decode(postItems[i].substring(0, postItems[i].indexOf("=")));
            String data_item = Common.url_decode(postItems[i].substring(postItems[i].indexOf("=") + 1));
            request.put(name, data_item);
            if (name.toUpperCase().indexOf("PASS") >= 0)
              data_item = "***********"; 
            if (data_item.indexOf("<password>") >= 0 && data_item.indexOf("</password>") >= 0) {
              data_item = String.valueOf(data_item.substring(0, data_item.indexOf("<password>") + "<password>".length())) + "*******" + data_item.substring(data_item.indexOf("</password>"));
            } else if (data_item.toUpperCase().indexOf("PASS") >= 0) {
              data_item = String.valueOf(data_item.substring(0, data_item.indexOf(":") + 1)) + "*******";
            } 
            if (name.equals("command") && data_item.equals("syncCommandResult"))
              noResult = true; 
            if (name.equals("command") && data_item.equals("getServerItem"))
              merged_line = true; 
            if (name.equals("command") && data_item.equals("getJobsSummary"))
              merged_line = true; 
            if (merged_line)
              merged = String.valueOf(merged) + "," + name + ":" + data_item; 
            if (noResult && name.equals("result")) {
              this.thisSessionHTTP.thisSession.add_log_formatted(String.valueOf(name) + ": len=" + data_item.length(), "POST", req_id);
            } else if (!merged_line) {
              this.thisSessionHTTP.thisSession.add_log_formatted(String.valueOf(name) + ":" + data_item, "POST", req_id);
            } 
          } 
        } 
        if (merged_line)
          this.thisSessionHTTP.thisSession.add_log_formatted(merged.substring(1), "POST", req_id); 
      } 
      if (request.getProperty("encoded", "false").equals("true")) {
        Enumeration keys = request.keys();
        while (keys.hasMoreElements()) {
          String key = keys.nextElement().toString();
          request.put(key, Common.url_decode(request.getProperty(key)));
        } 
      } 
    } 
    return true;
  }
  
  public void getUserInfo(String command, Properties site_item, String the_dir) throws Exception {
    String[] lines = new String[0];
    String vfsRootItem = this.thisSessionHTTP.thisSession.uVFS.getRootVFS(the_dir, -1);
    if (the_dir.startsWith(vfsRootItem))
      the_dir = the_dir.substring(vfsRootItem.length() - 1); 
    if ((new VRL(site_item.getProperty("url"))).getProtocol().equalsIgnoreCase("FTP")) {
      GenericClient c = this.thisSessionHTTP.thisSession.uVFS.getClient(site_item);
      try {
        String linesStr = c.doCommand("SITE " + command + " " + the_dir);
        if (linesStr != null)
          lines = linesStr.substring(4).split(";;;"); 
        Properties extraCustomizations = (Properties)this.thisSessionHTTP.thisSession.get("extraCustomizations");
        if (extraCustomizations == null)
          extraCustomizations = new Properties(); 
        for (int x = 0; x < lines.length; x++) {
          String key = lines[x].substring(0, lines[x].indexOf("=")).trim();
          String val = lines[x].substring(lines[x].indexOf("=") + 1).trim();
          extraCustomizations.put(key, val);
        } 
        this.thisSessionHTTP.thisSession.put("extraCustomizations", extraCustomizations);
      } finally {
        c = this.thisSessionHTTP.thisSession.uVFS.releaseClient(c);
      } 
    } 
  }
  
  public void write_command_http(String s) throws Exception {
    write_command_http(s, true);
  }
  
  public void write_command_http(String s, boolean log) throws Exception {
    this.thisSessionHTTP.write_command_http(s, log, true);
  }
  
  public boolean writeResponse(String response) throws Exception {
    return writeResponse(response, true, 200, true, false, true);
  }
  
  public boolean writeResponse(String response, boolean json) throws Exception {
    return writeResponse(response, true, 200, true, json, true);
  }
  
  public boolean writeResponse(String response, boolean log, int code, boolean convertVars, boolean json, boolean log_header) throws Exception {
    boolean acceptsGZIP = false;
    return writeResponse(response, log, code, convertVars, json, acceptsGZIP, log_header);
  }
  
  public boolean writeResponse(String response, boolean log, int code, boolean convertVars, boolean json, boolean acceptsGZIP, boolean log_header) throws Exception {
    if (convertVars)
      response = ServerStatus.thisObj.change_vars_to_values(response, this.thisSessionHTTP.thisSession); 
    write_command_http("HTTP/1.1 " + code + " OK", log_header);
    write_command_http("Cache-Control: no-store", log_header);
    write_command_http("Pragma: no-cache", log_header);
    if (json) {
      write_command_http("Content-Type: application/jsonrequest;charset=utf-8");
    } else {
      write_command_http("Content-Type: text/" + ((response.indexOf("<?xml") >= 0) ? "xml" : "plain") + ";charset=utf-8");
    } 
    if (acceptsGZIP) {
      this.thisSessionHTTP.write_command_http("Vary: Accept-Encoding");
      this.thisSessionHTTP.write_command_http("Content-Encoding: gzip");
      this.thisSessionHTTP.write_command_http("Transfer-Encoding: chunked");
      this.thisSessionHTTP.write_command_http("Date: " + this.thisSessionHTTP.sdf_rfc1123.format(new Date()), log, true);
      this.thisSessionHTTP.write_command_http("Server: " + ServerStatus.SG("http_server_header"), log, true);
      this.thisSessionHTTP.write_command_http("P3P: CP=\"IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT\"", log, true);
      if (!ServerStatus.SG("Access-Control-Allow-Origin").equals("")) {
        String origin = this.thisSessionHTTP.headerLookup.getProperty("ORIGIN", "");
        for (int x = 0; x < (ServerStatus.SG("Access-Control-Allow-Origin").split(",")).length; x++) {
          boolean ok = false;
          if (origin.equals("")) {
            ok = true;
          } else if (ServerStatus.SG("Access-Control-Allow-Origin").split(",")[x].toUpperCase().trim().equalsIgnoreCase(origin.toUpperCase().trim())) {
            ok = true;
          } 
          if (ok)
            write_command_http("Access-Control-Allow-Origin: " + ServerStatus.SG("Access-Control-Allow-Origin").split(",")[x].trim()); 
        } 
        write_command_http("Access-Control-Allow-Headers: authorization,content-type");
        write_command_http("Access-Control-Allow-Credentials: true");
        write_command_http("Access-Control-Allow-Methods: GET,POST,OPTIONS,PUT,PROPFIND,DELETE,MKCOL,MOVE,COPY,HEAD,PROPPATCH,LOCK,UNLOCK,ACL,TR");
      } 
      write_command_http("", log);
      ByteArrayOutputStream baos = new ByteArrayOutputStream();
      byte[] b = response.getBytes("UTF8");
      OutputStream out = new GZIPOutputStream(baos);
      out.write(b);
      ((GZIPOutputStream)out).finish();
      if (baos.size() > 0) {
        this.thisSessionHTTP.original_os.write((String.valueOf(Long.toHexString(baos.size())) + "\r\n").getBytes());
        baos.writeTo(this.thisSessionHTTP.original_os);
        this.thisSessionHTTP.original_os.write("\r\n".getBytes());
        baos.reset();
      } 
      this.thisSessionHTTP.original_os.write("0\r\n\r\n".getBytes());
      this.thisSessionHTTP.original_os.flush();
    } else {
      this.thisSessionHTTP.write_standard_headers(log);
      int len = (response.getBytes("UTF8")).length + 2;
      if (len == 2)
        len = 0; 
      write_command_http("Content-Length: " + len, log_header);
      write_command_http("", log);
      if (len > 0)
        this.thisSessionHTTP.write_command_http(response, log, convertVars); 
    } 
    this.thisSessionHTTP.thisSession.drain_log();
    return true;
  }
  
  public static String processKeywords(SessionCrush thisSession, String[] names, String keywords_raw) throws Exception {
    String response = "";
    String keyword = Common.xss_strip(keywords_raw.trim());
    response = String.valueOf(response) + "<commandResult><response>";
    boolean ok = false;
    for (int x = 0; x < names.length; x++) {
      String the_dir = Common.url_decode(Common.all_but_last(names[x]));
      if (the_dir.startsWith(thisSession.SG("root_dir")))
        the_dir = the_dir.substring(thisSession.SG("root_dir").length() - 1); 
      String path = thisSession.getStandardizedDir(the_dir);
      Properties item = thisSession.uVFS.get_item(String.valueOf(path) + Common.last(names[x]));
      the_dir = SearchHandler.getPreviewPath(item.getProperty("url"), "1", 1);
      String index = String.valueOf(ServerStatus.SG("previews_path")) + the_dir.substring(1);
      (new File_S(Common.all_but_last(index))).mkdirs();
      if (ServerStatus.BG("exif_keywords")) {
        String srcFile = Common.dots((new VRL(item.getProperty("url"))).getPath());
        for (int xx = 0; xx < ServerStatus.thisObj.previewWorkers.size(); xx++) {
          PreviewWorker preview = ServerStatus.thisObj.previewWorkers.elementAt(xx);
          if (preview.prefs.getProperty("preview_enabled", "false").equalsIgnoreCase("true") && preview.checkExtension(Common.last(the_dir), item)) {
            preview.setExifInfo(srcFile, PreviewWorker.getDestPath2(String.valueOf(item.getProperty("url")) + "/p1/"), "keywords", Common.xss_strip(keywords_raw).trim());
            ok = true;
            break;
          } 
        } 
      } else if ((new File_S(Common.all_but_last(Common.all_but_last(index)))).exists()) {
        RandomAccessFile out = new RandomAccessFile(new File_S(String.valueOf(Common.all_but_last(Common.all_but_last(index))) + "index.txt"), "rw");
        out.seek(out.length());
        out.write((String.valueOf(keyword) + "\r\n").getBytes());
        out.close();
        ok = true;
        if (FileClient.memCache)
          synchronized (SearchHandler.keywords_cache) {
            String s = (String)SearchHandler.keywords_cache.remove(index);
            if (s != null) {
              long total_size = ServerStatus.siLG("keywords_cache_size") - s.length() - index.length() - 10L;
              ServerStatus.siPUT("keywords_cache_size", (new StringBuffer(String.valueOf(total_size))).toString());
            } 
          }  
      } else {
        response = String.valueOf(response) + "Keyword not added.  This file is not indexed. (" + names[x] + ")\r\n";
      } 
      SearchHandler.buildEntry(item, thisSession.uVFS, false, false);
    } 
    if (ok)
      response = String.valueOf(response) + "Keyword Added.\r\n"; 
    return response;
  }
  
  public static void fixButtons(Vector buttons) {
    for (int x = buttons.size() - 1; x >= 0; x--) {
      Properties button = buttons.elementAt(x);
      button.put("requiredPriv", "");
      if (!button.containsKey("for_menu"))
        button.put("for_menu", button.getProperty("forMenu", "true")); 
      if (!button.containsKey("for_context_menu"))
        button.put("for_context_menu", button.getProperty("forContextMenu", "true")); 
      if (button.getProperty("key").equals("(upload):Crush Uploader") || button.getProperty("value").startsWith("javascript:loadCrushUpplet")) {
        buttons.remove(x);
      } else if (button.getProperty("key").equals("(zip):.ZIP") || button.getProperty("value").startsWith("javascript:zip_items")) {
        button.put("requiredPriv", "(read)");
        button.put("key", "(zip):ZipDownload");
        button.put("value", "javascript:performAction('zip');");
      } else if (button.getProperty("key").equals("(custom):Manage Download Basket") || button.getProperty("value").startsWith("javascript:manageBasket")) {
        button.put("requiredPriv", "(read)");
        button.put("key", "(showbasket):Show Basket");
        button.put("value", "javascript:performAction('showBasket');");
      } else if (button.getProperty("key").equals("(custom):Add To Download Basket")) {
        button.put("requiredPriv", "(read)");
        button.put("key", "(addbasket):Add To Basket");
        button.put("value", "javascript:performAction('addToBasket');");
      } else if (button.getProperty("key").startsWith("(rename):")) {
        button.put("requiredPriv", "(rename)");
      } else if (button.getProperty("key").startsWith("(delete):")) {
        button.put("requiredPriv", "(delete)");
      } else if (button.getProperty("key").startsWith("(download):")) {
        button.put("requiredPriv", "(read)");
      } else if (button.getProperty("key").startsWith("(zip):")) {
        button.put("requiredPriv", "(read)");
      } else if (button.getProperty("key").startsWith("(mkdir):")) {
        button.put("requiredPriv", "(makedir)");
      } else if (button.getProperty("key").startsWith("(upload):")) {
        button.put("requiredPriv", "(write)");
      } else if (button.getProperty("key").startsWith("(search):")) {
        button.put("requiredPriv", "(view)");
      } else if (button.getProperty("key").startsWith("(cut):")) {
        button.put("requiredPriv", "(rename)");
      } else if (button.getProperty("key").startsWith("(copy):")) {
        button.put("requiredPriv", "(read)");
      } else if (button.getProperty("key").startsWith("(paste):")) {
        button.put("requiredPriv", "(write)");
      } else if (button.getProperty("key").startsWith("(slideshow):")) {
        button.put("requiredPriv", "(slideshow)");
      } else if (button.getProperty("key").startsWith("(share):")) {
        button.put("requiredPriv", "(share)");
      } else if (button.getProperty("key").indexOf("Logout") >= 0) {
        button.put("for_menu", "true");
        button.put("for_context_menu", "false");
      } 
      if (button.getProperty("value").indexOf("showPopup") >= 0)
        button.put("value", Common.replace_str(button.getProperty("value"), "showPopup", "performAction")); 
      if (button.getProperty("value").indexOf("showDownloadBasket") >= 0) {
        button.put("value", "javascript:performAction('showBasket');");
        button.put("requiredPriv", "(read)");
      } 
      if (button.getProperty("value").indexOf("addToBasket") >= 0) {
        button.put("value", "javascript:performAction('addToBasket');");
        button.put("requiredPriv", "(read)");
      } 
      if (button.getProperty("value").indexOf("download()") >= 0) {
        button.put("value", "javascript:performAction('download');");
        button.put("requiredPriv", "(read)");
      } 
      if (button.getProperty("value").indexOf("shareOption") >= 0 || button.getProperty("value").indexOf("shareDiv") >= 0) {
        button.put("value", "javascript:performAction('share');");
        button.put("requiredPriv", "(share)");
      } 
      if (button.getProperty("value").indexOf("deleteDiv") >= 0) {
        button.put("value", "javascript:performAction('delete');");
        button.put("requiredPriv", "(delete)");
      } 
      if (button.getProperty("value").indexOf("doCut") >= 0) {
        button.put("value", "javascript:performAction('cut');");
        button.put("requiredPriv", "(rename)");
      } 
      if (button.getProperty("value").indexOf("doPaste") >= 0) {
        button.put("value", "javascript:performAction('paste');");
        button.put("requiredPriv", "(write)");
      } 
      if (button.getProperty("value").indexOf("userOptions") >= 0)
        button.put("value", "javascript:performAction('userOptions');"); 
      if (button.getProperty("value").indexOf("slideshow") >= 0)
        button.put("value", "javascript:performAction('slideshow');"); 
      if (button.getProperty("value").indexOf("makedir") >= 0 || button.getProperty("value").indexOf("createFolder") >= 0)
        button.put("value", "javascript:performAction('createFolder');"); 
      if (button.getProperty("value").indexOf("search") >= 0)
        button.put("value", "javascript:performAction('search');"); 
      if (button.getProperty("value").indexOf("Login") >= 0)
        button.put("value", "javascript:doLogout();"); 
      if (button.getProperty("value").indexOf("/login.html") >= 0)
        button.put("value", "javascript:doLogout();"); 
      if (button.getProperty("value").indexOf("Logout") >= 0)
        button.put("value", "javascript:doLogout();"); 
    } 
  }
  
  public static String createShare(Vector path_items, Properties request, Vector web_customizations, String user_name, String linkedServer, Properties user, SimpleDateFormat date_time, SessionCrush thisSession) throws Exception {
    return createShare(path_items, request, web_customizations, user_name, linkedServer, user, date_time, thisSession, false);
  }
  
  public static String createShare(Vector path_items, Properties request, Vector web_customizations, String user_name, String linkedServer, Properties user, SimpleDateFormat date_time, SessionCrush thisSession, boolean publish_attach) throws Exception {
    if (date_time == null)
      date_time = new SimpleDateFormat("MM/dd/yy", Locale.US); 
    String response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n";
    String[] paths = (String[])null;
    if (request.getProperty("paths").indexOf(";") >= 0) {
      paths = Common.url_decode(request.getProperty("paths")).trim().split(";");
    } else {
      paths = Common.url_decode(request.getProperty("paths")).trim().split("\r\n");
    } 
    String tempUsername = Common.url_decode(request.getProperty("temp_username", ""));
    String tempPassword = Common.url_decode(request.getProperty("temp_password", ""));
    if (tempUsername.equals("")) {
      tempUsername = Common.makeBoundary(ServerStatus.IG("temp_accounts_length"));
      tempPassword = Common.makeBoundary(ServerStatus.IG("temp_accounts_length"));
    } else if (((new File_U(String.valueOf(ServerStatus.SG("temp_accounts_path")) + "storage/" + tempUsername + tempPassword + "/")).exists() && !publish_attach) || tempUsername.length() + tempPassword.length() < ServerStatus.IG("temp_accounts_length") * 2 || (new File_S(String.valueOf(System.getProperty("crushftp.users")) + linkedServer + "/" + tempUsername)).exists()) {
      response = String.valueOf(response) + "<commandResult><response>";
      response = String.valueOf(response) + "<username></username>";
      response = String.valueOf(response) + "<password></password>";
      response = String.valueOf(response) + "<message>Denied.</message>";
      response = String.valueOf(response) + "<url></url>";
      response = String.valueOf(response) + "<error_response>denied</error_response>";
      response = String.valueOf(response) + "</response></commandResult>";
      return response;
    } 
    SimpleDateFormat ex1 = new SimpleDateFormat("MM/dd/yyyy HH:mm", Locale.US);
    SimpleDateFormat ex2 = new SimpleDateFormat("MMddyyyyHHmm", Locale.US);
    String shareToDomain = "";
    String shareBodyEmailClient = "";
    String shareFromDomain = "";
    int maxLen = 255;
    if (Common.machine_is_windows())
      maxLen -= (new File_U(String.valueOf(ServerStatus.SG("temp_accounts_path")) + "accounts/")).getCanonicalPath().length(); 
    String flash_shareAllowUploadsPrivs = "(read)(view)(resume)(write)(delete)(slideshow)(rename)(makedir)(deletedir)";
    int maxExpireDays = 0;
    if (web_customizations != null)
      for (int i = 0; i < web_customizations.size(); i++) {
        Properties cust = web_customizations.elementAt(i);
        if (cust.getProperty("key").equals("shareToDomain"))
          shareToDomain = cust.getProperty("value"); 
        if (cust.getProperty("key").equals("shareBodyEmailClient"))
          shareBodyEmailClient = cust.getProperty("value"); 
        if (cust.getProperty("key").equals("shareFromDomain"))
          shareFromDomain = cust.getProperty("value"); 
        if (cust.getProperty("key").equals("flash_shareAllowUploadsPrivs"))
          flash_shareAllowUploadsPrivs = cust.getProperty("value"); 
        if (cust.getProperty("key").equals("EXPIREDAYSMAX"))
          maxExpireDays = Integer.parseInt(cust.getProperty("value").trim()); 
      }  
    Date requestExpire = ex1.parse(request.getProperty("expire", "1/1/1970 00:01").replace('+', ' '));
    Calendar gc = new GregorianCalendar();
    gc.setTime(new Date());
    gc.add(5, maxExpireDays);
    if (maxExpireDays > 0 && (!request.containsKey("expire") || requestExpire.getTime() > gc.getTime().getTime()))
      requestExpire = gc.getTime(); 
    String expire_date = ex2.format(requestExpire);
    request.put("expire", ex1.format(requestExpire));
    String temp2 = Common.dots(Common.url_decode(request.getProperty("TempAccount", ""))).replace('/', '_').replace(',', '_').replace('=', '_');
    if (!temp2.equals("") && !temp2.startsWith("_") && temp2.indexOf("_") > 0)
      temp2 = temp2.substring(temp2.indexOf("_")); 
    String folderName = "u=" + tempUsername + ",,p=" + tempPassword + ",,m=" + user_name + ",,t=TempAccount" + temp2 + ",,ex=" + expire_date;
    if (request.getProperty("logins", "").trim().equals("-1"))
      request.remove("logins"); 
    if (!request.getProperty("logins", "").equals(""))
      folderName = String.valueOf(folderName) + ",,i=" + request.getProperty("logins", ""); 
    String userHome = String.valueOf(ServerStatus.SG("temp_accounts_path")) + "accounts/" + folderName + "/";
    String userStorage = String.valueOf(ServerStatus.SG("temp_accounts_path")) + "storage/" + tempUsername + tempPassword + "/";
    Properties permissions = new Properties();
    String msg = "";
    String baseUrl = Common.url_decode(request.getProperty("baseUrl"));
    baseUrl = Common.replace_str(baseUrl, "{username}", tempUsername);
    baseUrl = Common.replace_str(baseUrl, "{password}", tempPassword);
    baseUrl = Common.replace_str(baseUrl, "{user}", tempUsername);
    baseUrl = Common.replace_str(baseUrl, "{pass}", tempPassword);
    String webLink = String.valueOf(baseUrl) + "?u=" + tempUsername + "&p=" + tempPassword;
    String webLinkEnd = "?u=" + tempUsername + "&p=" + tempPassword;
    if (request.getProperty("direct_link", "false").equalsIgnoreCase("true") && paths.length == 1 && !paths[0].trim().endsWith("/")) {
      webLink = String.valueOf(webLink) + "&path=/" + Common.url_encode(Common.last(paths[0]));
      webLinkEnd = String.valueOf(webLinkEnd) + "&path=/" + Common.url_encode(Common.last(paths[0]));
    } 
    request.put("account_path", userHome);
    request.put("storage_path", userStorage);
    request.put("master", user_name);
    request.put("created", ex1.format(new Date()));
    request.put("username", tempUsername);
    request.put("password", tempPassword);
    request.put("web_link", webLink);
    request.put("web_link_end", webLinkEnd);
    boolean stop_share = false;
    if (!shareToDomain.equals("") && request.getProperty("sendEmail", "").equals("true")) {
      String emails = String.valueOf(request.getProperty("emailTo")) + "," + request.getProperty("emailCc") + "," + request.getProperty("emailBcc");
      String[] tos = emails.replace('+', ' ').trim().replace(';', ',').split(",");
      boolean ok = true;
      for (int i = 0; i < tos.length && ok; i++) {
        String to = tos[i];
        if (!to.trim().equals("")) {
          boolean allowed_domain = false;
          for (int xx = 0; xx < (shareToDomain.split(",")).length; xx++) {
            if (to.toUpperCase().trim().endsWith(shareToDomain.split(",")[xx].toUpperCase().trim())) {
              allowed_domain = true;
              break;
            } 
          } 
          if (!allowed_domain) {
            ok = false;
            break;
          } 
        } 
      } 
      if (!ok)
        msg = "The To, Cc, or Bcc email does not end with one of the required domain(s): " + shareToDomain; 
      if (!msg.equals(""))
        stop_share = true; 
    } 
    if (!shareFromDomain.equals("") && request.getProperty("sendEmail", "").equals("true")) {
      boolean ok = false;
      String from = request.getProperty("emailFrom", "").replace('+', ' ').trim();
      for (int xx = 0; xx < (shareFromDomain.split(",")).length; xx++) {
        if (from.toUpperCase().trim().endsWith(shareFromDomain.split(",")[xx].toUpperCase().trim())) {
          ok = true;
          break;
        } 
      } 
      if (!ok)
        msg = String.valueOf(msg) + "The FROM: email does not end with one of the required domain(s): " + shareFromDomain + "."; 
      if (ok) {
        ok = false;
        String reply_to = request.getProperty("emailReplyTo", "").replace('+', ' ').trim();
        for (int i = 0; i < (shareFromDomain.split(",")).length; i++) {
          if (!shareFromDomain.split(",")[i].toUpperCase().trim().equals("") && (
            reply_to.toUpperCase().trim().endsWith(shareFromDomain.split(",")[i].toUpperCase().trim()) || reply_to.trim().equals(""))) {
            ok = true;
            break;
          } 
        } 
        if (!ok)
          msg = String.valueOf(msg) + "The REPLY TO: email does not end with one of the required domain(s): " + shareFromDomain + "."; 
      } 
      if (!msg.equals(""))
        stop_share = true; 
    } 
    String last_name = Common.url_encode(Common.last(paths[0]));
    Vector files = new Vector();
    Properties lastStat = null;
    long total_size = 0L;
    int x;
    for (x = 0; x < path_items.size() && msg.equals(""); x++) {
      Properties stat = path_items.elementAt(x);
      VRL vrl = new VRL(stat.getProperty("url"));
      String privs = stat.getProperty("privs", "(read)(share)(delete)(view)");
      String pgp_addon = "";
      for (int xx = 0; xx < (privs.split("\\(")).length; xx++) {
        String priv = privs.split("\\(")[xx];
        if (!priv.equals("")) {
          priv = priv.substring(0, priv.length() - 1).trim();
          if (priv.indexOf("=") >= 0 && priv.indexOf("pgp") >= 0)
            pgp_addon = String.valueOf(pgp_addon) + "(" + priv.split("=")[0] + "=" + priv.substring(priv.indexOf("=") + 1) + ")"; 
        } 
      } 
      permissions.put("/", "(read)(view)(resume)(slideshow)" + pgp_addon);
      if (privs.indexOf("(share)") < 0) {
        msg = String.valueOf(msg) + "Not allowed to share these files:" + stat.getProperty("root_dir") + stat.getProperty("name") + "\r\n<br/>";
        stop_share = true;
      } 
      if (request.getProperty("shareUsername", "false").equalsIgnoreCase("true")) {
        if (ServerStatus.siIG("enterprise_level") <= 0) {
          msg = String.valueOf(msg) + "The server does not have an enterprise license, so sharing to usernames is not allowed.\r\n<br/>";
          stop_share = true;
        } else {
          tempUsername = "";
          tempPassword = "";
          webLink = String.valueOf(baseUrl) + "Shares/" + user_name + "/";
          webLinkEnd = "Shares/" + user_name + "/";
          if (request.getProperty("direct_link", "false").equalsIgnoreCase("true") && paths.length == 1 && !paths[0].trim().endsWith("/")) {
            webLink = String.valueOf(baseUrl) + "Shares/" + user_name + "/" + Common.url_encode(Common.last(paths[0]));
            webLinkEnd = String.valueOf(webLinkEnd) + "Shares/" + user_name + "/" + Common.url_encode(Common.last(paths[0]));
          } 
          request.put("master", user_name);
          request.put("username", tempUsername);
          request.put("password", tempPassword);
          request.put("web_link", webLink);
          request.put("web_link_end", webLinkEnd);
          String[] shareUsernames = Common.url_decode(request.getProperty("shareUsernames").replace('+', ' ').trim()).split(",");
          String share_to_emails = "";
          for (int j = 0; j < shareUsernames.length; j++) {
            String toUser = String.valueOf(shareUsernames[j].trim()) + ".SHARED";
            toUser = toUser.replace('/', '_').replace('\\', '_').replace('%', '_').replace(':', '_').replace(';', '_');
            VFS shareVFS = null;
            try {
              if (!UserTools.ut.getUser(linkedServer, toUser, false).getProperty("user_name").equals(toUser))
                throw new NullPointerException(); 
              shareVFS = UserTools.ut.getVFS(linkedServer, toUser);
            } catch (NullPointerException e) {
              Properties sharedUser = new Properties();
              sharedUser.put("password", "");
              sharedUser.put("version", "1.0");
              sharedUser.put("root_dir", "/");
              sharedUser.put("userVersion", "5");
              sharedUser.put("max_logins", "-1");
              UserTools.writeUser(linkedServer, toUser, sharedUser);
              shareVFS = UserTools.ut.getVFS(linkedServer, toUser);
            } 
            if (user != null) {
              String user_email = user.getProperty("email", "");
              if (user_email.equals(""))
                user_email = user.getProperty("ldap_mail", ""); 
              request.put("emailFrom", user_email);
            } 
            request.put("emailCc", "");
            request.put("emailBcc", "");
            UserTools.addPriv(linkedServer, toUser, "/Shares/", "(view)(read)", 0, shareVFS);
            String sPrivs1 = request.getProperty("shareUsernamePermissions").toLowerCase();
            String sPrivs2 = "";
            String[] priv_parts = stat.getProperty("privs").toLowerCase().split("\\(");
            for (int loop = 0; loop < priv_parts.length; loop++) {
              String priv = priv_parts[loop];
              priv = priv.trim();
              if (!priv.equals("")) {
                priv = priv.substring(0, priv.lastIndexOf(")"));
                if (sPrivs1.indexOf("(" + priv + ")") >= 0) {
                  sPrivs2 = String.valueOf(sPrivs2) + "(" + priv + ")";
                } else if (priv.startsWith("quota") && sPrivs1.indexOf("(quota") >= 0) {
                  sPrivs2 = String.valueOf(sPrivs2) + "(" + priv + ")";
                } 
              } 
            } 
            Log.log("HTTP_SERVER", 2, "Requested privs:" + sPrivs1);
            Log.log("HTTP_SERVER", 2, "Adding privs:" + sPrivs2);
            Properties existingItem = shareVFS.get_item("/Shares/" + user_name + "/" + stat.getProperty("name"));
            if (existingItem != null)
              for (int xxx = 1; xxx < 999; xxx++) {
                String tmp_name = stat.getProperty("name");
                if (tmp_name.indexOf(".") < 0) {
                  tmp_name = String.valueOf(tmp_name) + "_(" + xxx + ")";
                } else {
                  tmp_name = String.valueOf(tmp_name.substring(0, tmp_name.lastIndexOf("."))) + "_(" + xxx + ")" + tmp_name.substring(tmp_name.lastIndexOf("."));
                } 
                if (shareVFS.get_item("/Shares/" + user_name + "/" + tmp_name) == null) {
                  if (request.getProperty("emailSubject", "").contains(stat.getProperty("name")))
                    request.put("emailSubject", Common.replace_str(request.getProperty("emailSubject", ""), stat.getProperty("name"), tmp_name)); 
                  if (request.getProperty("emailBody", "").contains(stat.getProperty("name")))
                    request.put("emailBody", Common.replace_str(request.getProperty("emailBody", ""), stat.getProperty("name"), tmp_name)); 
                  stat.put("name", tmp_name);
                  break;
                } 
              }  
            Log.log("HTTP_SERVER", 2, "Adding priv to path:/Shares/" + user_name + "/" + stat.getProperty("name"));
            UserTools.addPriv(linkedServer, toUser, "/Shares/" + user_name + "/" + stat.getProperty("name") + (stat.getProperty("type", "DIR").equalsIgnoreCase("DIR") ? "/" : ""), String.valueOf(sPrivs2) + pgp_addon, 0, shareVFS);
            UserTools.addFolder(linkedServer, toUser, "/", "Shares");
            UserTools.addFolder(linkedServer, toUser, "/Shares/", user_name);
            Properties moreItems = new Properties();
            moreItems.put("expires_on", UserTools.expire_vfs.format(ex1.parse(request.getProperty("expire").replace('+', ' '))));
            moreItems.put("created_on", UserTools.expire_vfs.format(new Date()));
            moreItems.put("share_comments", request.getProperty("share_comments", ""));
            UserTools.addItem(linkedServer, toUser, "/Shares/" + user_name + "/", stat.getProperty("name"), stat.getProperty("url"), stat.getProperty("type", "FILE"), moreItems, false, "");
            Properties real_to_user = UserTools.ut.getUser(linkedServer, shareUsernames[j].trim(), false);
            if (real_to_user != null && !real_to_user.getProperty("email", "").equals("")) {
              share_to_emails = String.valueOf(share_to_emails) + "," + real_to_user.getProperty("email", "");
            } else if (shareUsernames[j].trim().indexOf("@") >= 0) {
              share_to_emails = String.valueOf(share_to_emails) + "," + shareUsernames[j].trim();
            } else {
              String user_email = user.getProperty("email", "");
              if (user_email.equals(""))
                user_email = user.getProperty("ldap_mail", ""); 
              if (!user_email.equals(""))
                share_to_emails = String.valueOf(share_to_emails) + "," + shareUsernames[j].trim() + user_email.substring(user_email.indexOf("@")); 
            } 
            UserTools.ut.forceMemoryReload(shareUsernames[j].trim());
          } 
          if (share_to_emails.length() > 1)
            share_to_emails = share_to_emails.substring(1); 
          request.put("emailTo", share_to_emails);
          lastStat = stat;
        } 
        request.put("publishType", "directShare");
      } 
      if (stop_share)
        break; 
      String uid = "";
      int same_count = 0;
      for (int i = 0; i < path_items.size() && msg.equals(""); i++) {
        if (x != i) {
          Properties stat2 = path_items.elementAt(i);
          if (stat.getProperty("name").equalsIgnoreCase(stat2.getProperty("name")))
            same_count++; 
        } 
      } 
      if (same_count > 0) {
        uid = "_" + Common.makeBoundary(4);
        if (vrl.getName().indexOf(".") >= 0)
          uid = String.valueOf(uid) + vrl.getName().substring(vrl.getName().lastIndexOf(".")); 
      } 
      if (user != null) {
        Enumeration keys = user.keys();
        while (keys.hasMoreElements()) {
          String key = keys.nextElement().toString();
          if (key.startsWith("ldap_"))
            request.put(key, user.get(key)); 
        } 
        if (ServerStatus.BG("temp_account_share_web_javascript") && !user.getProperty("javascript", "").equals(""))
          request.put("javascript", user.getProperty("javascript", "")); 
        if (ServerStatus.BG("temp_account_share_web_css") && !user.getProperty("css", "").equals(""))
          request.put("css", user.getProperty("css", "")); 
        if (ServerStatus.BG("temp_account_share_web_customizations") && user.get("web_customizations") != null)
          request.put("web_customizations", user.get("web_customizations")); 
        if (ServerStatus.BG("temp_account_share_web_buttons") && user.get("web_buttons") != null)
          request.put("web_buttons", user.get("web_buttons")); 
        if (ServerStatus.BG("temp_account_share_web_forms") && user.get("uploadForm") != null)
          request.put("uploadForm", user.get("uploadForm")); 
        if (ServerStatus.BG("temp_account_share_web_forms") && user.get("messageForm") != null)
          request.put("messageForm", user.get("messageForm")); 
        Vector events = (Vector)user.get("events");
        if (events != null) {
          Vector events2 = new Vector();
          for (int j = 0; j < events.size(); j++) {
            Properties event = events.elementAt(j);
            String event_user_action_list = String.valueOf(event.getProperty("event_user_action_list", "")) + "(";
            if (event_user_action_list.indexOf("(share_") >= 0) {
              event = (Properties)event.clone();
              event.put("linkUser", user.getProperty("username"));
              event.put("linkEvent", event.getProperty("name"));
              event.put("resolveShareEvent", "true");
              events2.addElement(event);
            } 
          } 
          if (events2.size() > 0)
            request.put("events", events2); 
        } 
      } 
      if (request.getProperty("allowUploads", "false").equals("true")) {
        String custom_privs = request.getProperty("shareUsernamePermissions", "").toLowerCase();
        if (custom_privs.equals(""))
          custom_privs = flash_shareAllowUploadsPrivs; 
        if (!custom_privs.equals("")) {
          String sPrivs1 = custom_privs;
          String sPrivs2 = "";
          String[] priv_parts = stat.getProperty("privs").toLowerCase().split("\\(");
          for (int loop = 0; loop < priv_parts.length; loop++) {
            String priv = priv_parts[loop];
            priv = priv.trim();
            if (!priv.equals("")) {
              priv = priv.substring(0, priv.lastIndexOf(")"));
              if (sPrivs1.indexOf("(" + priv + ")") >= 0) {
                sPrivs2 = String.valueOf(sPrivs2) + "(" + priv + ")";
              } else if (priv.startsWith("quota") && sPrivs1.indexOf("(quota") >= 0) {
                sPrivs2 = String.valueOf(sPrivs2) + "(" + priv + ")";
              } 
            } 
          } 
          flash_shareAllowUploadsPrivs = sPrivs2;
        } 
      } 
      if (request.getProperty("publishType").equalsIgnoreCase("copy")) {
        if (privs.indexOf("(read)") >= 0) {
          (new File_U(String.valueOf(userHome) + "VFS/")).mkdirs();
          (new File_U(userStorage)).mkdirs();
          String itemName = vrl.getName();
          if (itemName.endsWith("/"))
            itemName = itemName.substring(0, itemName.length() - 1); 
          if (request.getProperty("allowUploads", "false").equals("true")) {
            if (privs.contains("(quota"))
              flash_shareAllowUploadsPrivs = String.valueOf(flash_shareAllowUploadsPrivs) + privs.substring(privs.indexOf("(quota"), privs.indexOf(")", privs.indexOf("(quota") + "(quota".length()) + 1); 
            if (privs.contains("(real_quota)"))
              flash_shareAllowUploadsPrivs = String.valueOf(flash_shareAllowUploadsPrivs) + "(real_quota)"; 
            permissions.put("/" + itemName.toUpperCase() + "/", String.valueOf(flash_shareAllowUploadsPrivs) + pgp_addon);
          } 
          try {
            Common.writeXMLObject_U(String.valueOf(userHome) + "VFS.XML", permissions, "VFS");
          } catch (Exception exception) {}
          try {
            Common.writeXMLObject_U(String.valueOf(userHome) + "INFO.XML", request, "INFO");
          } catch (Exception exception) {}
          if (vrl.getProtocol().equalsIgnoreCase("FILE")) {
            Common.recurseCopyThreaded_U(vrl.getPath(), String.valueOf(userStorage) + vrl.getName() + (stat.getProperty("type", "FILE").equalsIgnoreCase("DIR") ? "/" : ""), true, false);
          } else {
            GenericClient c1 = thisSession.uVFS.getClient(stat);
            if (c1 instanceof com.crushftp.client.S3CrushClient) {
              c1.login(vrl.getUsername(), vrl.getPassword(), Common.all_but_last(vrl.getPath()));
            } else {
              c1.login(vrl.getUsername(), vrl.getPassword(), null);
            } 
            VRL vrl_dest = new VRL(String.valueOf((new File_U(String.valueOf(userStorage) + vrl.getName())).toURI().toString()) + (stat.getProperty("type", "FILE").equalsIgnoreCase("DIR") ? "/" : ""));
            Common.recurseCopy(vrl, vrl_dest, c1, null, 0, true, new StringBuffer());
            c1 = thisSession.uVFS.releaseClient(c1);
          } 
          if (request.getProperty("attach_real", "").equalsIgnoreCase("true"))
            files.addElement(new File_U(vrl.getPath())); 
          Properties vItem = new Properties();
          String url = (new File_U(String.valueOf(userStorage) + vrl.getName())).toURI().toURL().toExternalForm();
          if (stat.getProperty("type", "FILE").equalsIgnoreCase("DIR") && !url.endsWith("/"))
            url = String.valueOf(url) + "/"; 
          vItem.put("url", url);
          vItem.put("type", stat.getProperty("type", "FILE").toLowerCase());
          Vector v = new Vector();
          v.addElement(vItem);
          try {
            Common.writeXMLObject_U(String.valueOf(userHome) + "VFS/" + itemName + uid, v, "VFS");
          } catch (Exception exception) {}
        } else {
          msg = String.valueOf(msg) + "Not allowed to read from this location.\r\n<br/>";
          stop_share = true;
        } 
      } else if (request.getProperty("publishType").equalsIgnoreCase("move")) {
        if (privs.indexOf("(read)") >= 0 && privs.indexOf("(delete)") >= 0) {
          (new File_U(String.valueOf(userHome) + "VFS/")).mkdirs();
          (new File_U(userStorage)).mkdirs();
          String itemName = "storage";
          if (paths.length > 1 || stat.getProperty("type", "FILE").equalsIgnoreCase("FILE"))
            itemName = vrl.getName(); 
          if (itemName.endsWith("/"))
            itemName = itemName.substring(0, itemName.length() - 1); 
          if (request.getProperty("allowUploads", "false").equals("true"))
            permissions.put("/" + itemName.toUpperCase() + "/", String.valueOf(flash_shareAllowUploadsPrivs) + pgp_addon); 
          try {
            Common.writeXMLObject_U(String.valueOf(userHome) + "VFS.XML", permissions, "VFS");
          } catch (Exception exception) {}
          try {
            Common.writeXMLObject_U(String.valueOf(userHome) + "INFO.XML", request, "INFO");
          } catch (Exception exception) {}
          Common.recurseCopyThreaded_U(vrl.getPath(), String.valueOf(userStorage) + vrl.getName(), true, true);
          if (request.getProperty("attach_real", "").equalsIgnoreCase("true"))
            files.addElement(new File_U(String.valueOf(userStorage) + vrl.getName())); 
          Properties vItem = new Properties();
          vItem.put("url", (new File_U(String.valueOf(userStorage) + vrl.getName())).toURI().toURL().toExternalForm());
          vItem.put("type", stat.getProperty("type", "FILE").toLowerCase());
          Vector v = new Vector();
          v.addElement(vItem);
          try {
            Common.writeXMLObject_U(String.valueOf(userHome) + "VFS/" + itemName + uid, v, "VFS");
          } catch (Exception exception) {}
        } else {
          msg = String.valueOf(msg) + "Not allowed to read and delete from this location.\r\n<br/>";
          stop_share = true;
        } 
      } else if (request.getProperty("publishType").equalsIgnoreCase("reference")) {
        if (user != null && privs.contains("(quota") && privs.contains("(real_quota)")) {
          VFS vfs = UserTools.ut.getVFS(linkedServer, user_name);
          if (vfs != null) {
            String test = vfs.getPrivPath(paths[x]);
            Properties parent_quota_item = vfs.get_item_parent(test);
            request.put("parent_quota_dir", parent_quota_item.getProperty("url", ""));
          } 
        } 
        if (privs.indexOf("(read)") >= 0) {
          (new File_U(String.valueOf(userHome) + "VFS/")).mkdirs();
          (new File_U(userStorage)).mkdirs();
          String itemName = vrl.getName();
          if (itemName.endsWith("/"))
            itemName = itemName.substring(0, itemName.length() - 1); 
          String privs2 = "";
          if (request.getProperty("allowUploads", "false").equals("true")) {
            if (privs.contains("(quota"))
              flash_shareAllowUploadsPrivs = String.valueOf(flash_shareAllowUploadsPrivs) + "(quota)"; 
            if (privs.contains("(real_quota)"))
              flash_shareAllowUploadsPrivs = String.valueOf(flash_shareAllowUploadsPrivs) + "(real_quota)"; 
            String privs3 = flash_shareAllowUploadsPrivs;
            privs3 = Common.replace_str(privs3, "(", "");
            privs3 = Common.replace_str(privs3, ")", ",");
            if (privs3.endsWith(","))
              privs3 = privs3.substring(0, privs3.length() - 1); 
            for (int j = 0; j < (privs3.split(",")).length; j++) {
              String s = "(" + privs3.split(",")[j] + ")";
              if (privs.indexOf(s) >= 0) {
                privs2 = String.valueOf(privs2) + s;
              } else if (s.startsWith("(quota") && privs.indexOf("(quota") >= 0) {
                privs2 = String.valueOf(privs2) + s.substring(0, s.length() - 1) + privs.substring(privs.indexOf("(quota") + "(quota".length(), privs.indexOf(")", privs.indexOf("(quota") + "(quota".length()) + 1);
              } 
            } 
            permissions.put("/" + itemName.toUpperCase() + "/", String.valueOf(privs2) + pgp_addon);
          } 
          try {
            Common.writeXMLObject_U(String.valueOf(userHome) + "VFS.XML", permissions, "VFS");
          } catch (Exception exception) {}
          try {
            Common.writeXMLObject_U(String.valueOf(userHome) + "INFO.XML", request, "INFO");
          } catch (Exception exception) {}
          if (request.getProperty("attach_real", "").equalsIgnoreCase("true"))
            files.addElement(new File_U(vrl.getPath())); 
          Properties vItem = new Properties();
          if (!vrl.getProtocol().equalsIgnoreCase("FILE")) {
            String url = vrl.getOriginalUrl();
            if (stat.get("type").equals("DIR") && !url.endsWith("/"))
              url = String.valueOf(url) + "/"; 
            vItem.put("url", ServerStatus.thisObj.common_code.encode_pass(url, "DES", ""));
            vItem.put("encrypted", "true");
          } else {
            vItem.put("url", vrl.getOriginalUrl());
            if (stat.get("type").equals("DIR") && !vItem.getProperty("url").endsWith("/"))
              vItem.put("url", String.valueOf(vrl.getOriginalUrl()) + "/"); 
          } 
          vItem.put("type", stat.get("type"));
          if (user != null) {
            VFS vfs = UserTools.ut.getVFS(linkedServer, user_name);
            UserTools.setupVFSLinking(linkedServer, user_name, vfs, user);
            Properties p = new Properties();
            try {
              p = vfs.get_item_parent(paths[x]);
              if (p != null) {
                Enumeration enumeration = p.propertyNames();
                while (enumeration.hasMoreElements()) {
                  String key = (String)enumeration.nextElement();
                  if (key.equals("url") || key.equals("type") || key.equals("vItem"))
                    continue; 
                  vItem.put(key, p.get(key));
                } 
              } 
            } catch (Exception e) {
              Log.log("HTTP_SERVER", 2, e);
            } 
          } 
          Vector v = new Vector();
          v.addElement(vItem);
          try {
            Common.writeXMLObject_U(String.valueOf(userHome) + "VFS/" + itemName + uid, v, "VFS");
          } catch (Exception exception) {}
        } else {
          msg = String.valueOf(msg) + "Not allowed to read from this location.\r\n<br/>";
          stop_share = true;
        } 
      } 
      if (stop_share)
        break; 
      lastStat = stat;
      total_size += Long.parseLong(stat.getProperty("size", "0"));
      stat.put("temp_home", (new VRL(String.valueOf((new File_U(userHome)).getCanonicalPath().replace('\\', '/')) + "/")).toString());
      stat.put("web_link", webLink);
      stat.put("web_link_end", webLinkEnd);
      stat.put("temp_username", tempUsername);
      stat.put("temp_password", tempPassword);
      stat.put("expire_date", expire_date);
      String emailTo_tmp = Common.url_decode(request.getProperty("emailTo", "").replace('+', ' ').trim()).replace(';', ',');
      String emailFrom_tmp = Common.url_decode(request.getProperty("emailFrom", "").replace('+', ' ').trim());
      emailTo_tmp = Common.replace_str(emailTo_tmp, "{from}", emailFrom_tmp);
      stat.put("name", emailTo_tmp);
      stat.put("the_file_name", stat.getProperty("name"));
      doEventItem(stat, thisSession, "SHARE");
      if (request.getProperty("attach", "").equalsIgnoreCase("true"))
        try {
          String newPath = SearchHandler.getPreviewPath(stat.getProperty("url"), "2", 1);
          File_U f = new File_U(String.valueOf(ServerStatus.SG("previews_path")) + newPath.substring(1));
          if (f.exists())
            files.addElement(f); 
        } catch (Exception e) {
          Log.log("HTTP_SERVER", 2, e);
        }  
    } 
    response = String.valueOf(response) + "<commandResult><response>";
    if (!stop_share) {
      for (x = files.size() - 1; x >= 0; x--) {
        File_U f = files.elementAt(x);
        if (f.isDirectory() || f.length() > (1048576 * ServerStatus.IG("share_attached_file_size_limit")))
          files.removeElementAt(x); 
      } 
      File_B[] files2 = (File_B[])null;
      if (files.size() > 0)
        files2 = new File_B[files.size()]; 
      for (int i = 0; i < files.size(); i++)
        files2[i] = new File_B(files.elementAt(i)); 
      String emailFrom = Common.url_decode(request.getProperty("emailFrom", "").replace('+', ' ').trim());
      String emailReplyTo = Common.url_decode(request.getProperty("emailReplyTo", "").replace('+', ' ').trim());
      String emailTo = Common.url_decode(request.getProperty("emailTo", "").replace('+', ' ').trim()).replace(';', ',');
      String emailCc = Common.url_decode(request.getProperty("emailCc", "").replace('+', ' ').trim()).replace(';', ',');
      String emailBcc = Common.url_decode(request.getProperty("emailBcc", "").replace('+', ' ').trim()).replace(';', ',');
      emailTo = Common.replace_str(emailTo, "{from}", emailFrom);
      emailCc = Common.replace_str(emailCc, "{from}", emailFrom);
      emailBcc = Common.replace_str(emailBcc, "{from}", emailFrom);
      emailReplyTo = Common.replace_str(emailReplyTo, "{from}", emailFrom);
      String emailSubject = Common.url_decode(request.getProperty("emailSubject", "").replace('+', ' ').trim());
      String emailBody = String.valueOf(Common.url_decode(request.getProperty("emailBody", ""))) + "\r\n\r\n";
      emailBody = Common.replace_str(emailBody, "&lt;", "<");
      emailBody = Common.replace_str(emailBody, "&gt;", ">");
      if (emailBody.indexOf("<") < 0)
        emailBody = emailBody.replace('+', ' ').trim(); 
      if (shareBodyEmailClient.equals(""))
        shareBodyEmailClient = emailBody; 
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "&lt;", "<");
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "&gt;", ">");
      SimpleDateFormat sdf_time = new SimpleDateFormat("HH:mm", Locale.US);
      Date d = ex2.parse(expire_date);
      String loginCount = request.getProperty("logins", "");
      if (loginCount.trim().equals(""))
        loginCount = "unlimited"; 
      emailBody = Common.replace_str(emailBody, "<LINE>", "{line_start}");
      emailBody = Common.replace_str(emailBody, "<line>", "{line_start}");
      emailBody = Common.replace_str(emailBody, "</LINE>", "{line_end}");
      emailBody = Common.replace_str(emailBody, "</line>", "{line_end}");
      if (emailBody.indexOf("{line_start}") >= 0)
        while (emailBody.indexOf("{line_start}") >= 0 && emailBody.indexOf("{line_end}") >= 0) {
          String line = emailBody.substring(emailBody.indexOf("{line_start}") + "{line_start}".length(), emailBody.indexOf("{line_end}"));
          String lines = "";
          for (int xx = 0; xx < paths.length; xx++) {
            String line2 = line;
            if (!paths[xx].trim().equals("")) {
              line2 = Common.replace_str(line2, "{web_link}", webLink);
              line2 = Common.replace_str(line2, "{web_link_end}", webLinkEnd);
              line2 = Common.replace_str(line2, "{username}", tempUsername);
              line2 = Common.replace_str(line2, "{password}", tempPassword);
              line2 = Common.replace_str(line2, "{user}", tempUsername);
              line2 = Common.replace_str(line2, "{pass}", tempPassword);
              line2 = Common.replace_str(line2, "{url}", Common.url_decode(request.getProperty("baseUrl")));
              line2 = Common.replace_str(line2, "{to}", emailTo);
              line2 = Common.replace_str(line2, "{to_all}", request.getProperty("to_all", ""));
              line2 = Common.replace_str(line2, "{from}", emailFrom);
              line2 = Common.replace_str(line2, "{reply_to}", emailReplyTo);
              line2 = Common.replace_str(line2, "{cc}", emailCc);
              line2 = Common.replace_str(line2, "{bcc}", emailBcc);
              line2 = Common.replace_str(line2, "{subject}", emailSubject);
              line2 = Common.replace_str(line2, "{paths}", Common.url_decode(request.getProperty("paths")));
              line2 = Common.replace_str(line2, "{path}", Common.all_but_last(paths[xx].trim()));
              line2 = Common.replace_str(line2, "{name}", Common.url_decode(Common.last(paths[xx].trim())));
              line2 = Common.replace_str(line2, "{datetime}", ex1.format(d).trim());
              line2 = Common.replace_str(line2, "{date}", date_time.format(d).trim());
              line2 = Common.replace_str(line2, "{time}", sdf_time.format(d).trim());
              line2 = Common.replace_str(line2, "{comments}", request.getProperty("share_comments", ""));
              if (lastStat != null)
                line2 = Common.replace_str(line2, "{size}", Common.format_bytes_short2(Long.parseLong(lastStat.getProperty("size", "0")))); 
              line2 = Common.replace_str(line2, "{total_size}", Common.format_bytes_short2(total_size));
              line2 = Common.replace_str(line2, "{logins}", loginCount);
              int k;
              for (k = 0; k < 100; k++) {
                String s = "";
                if ((paths[xx].split("/")).length > k)
                  s = paths[xx].split("/")[k]; 
                line2 = Common.replace_str(line2, "{" + k + "path}", s);
              } 
              for (k = 0; k < 100; k++) {
                String s = "";
                int m = (paths[xx].split("/")).length - 1 - k;
                if (m >= 0)
                  s = paths[xx].split("/")[m]; 
                line2 = Common.replace_str(line2, "{path" + k + "}", s);
              } 
              lines = String.valueOf(lines) + line2;
            } 
          } 
          emailBody = Common.replace_str(emailBody, "{line_start}" + line + "{line_end}", lines);
        }  
      int j;
      for (j = 0; j < 100; j++) {
        String s = "";
        if ((paths[0].split("/")).length > j)
          s = paths[0].split("/")[j]; 
        emailBody = Common.replace_str(emailBody, "{" + j + "path}", s);
      } 
      for (j = 0; j < 100; j++) {
        String s = "";
        int k = (paths[0].split("/")).length - 1 - j;
        if (k >= 0)
          s = paths[0].split("/")[k]; 
        emailBody = Common.replace_str(emailBody, "{path" + j + "}", s);
      } 
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "<LINE>", "{line_start}");
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "<line>", "{line_start}");
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "</LINE>", "{line_end}");
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "</line>", "{line_end}");
      if (shareBodyEmailClient.indexOf("{line_start}") >= 0)
        while (shareBodyEmailClient.indexOf("{line_start}") >= 0 && shareBodyEmailClient.indexOf("{line_end}") >= 0) {
          String line = shareBodyEmailClient.substring(shareBodyEmailClient.indexOf("{line_start}") + "{line_start}".length(), shareBodyEmailClient.indexOf("{line_end}"));
          String lines = "";
          for (int xx = 0; xx < paths.length; xx++) {
            String line2 = line;
            if (!paths[xx].trim().equals("")) {
              line2 = Common.replace_str(line2, "{web_link}", webLink);
              line2 = Common.replace_str(line2, "{web_link_end}", webLinkEnd);
              line2 = Common.replace_str(line2, "{username}", tempUsername);
              line2 = Common.replace_str(line2, "{password}", tempPassword);
              line2 = Common.replace_str(line2, "{user}", tempUsername);
              line2 = Common.replace_str(line2, "{pass}", tempPassword);
              line2 = Common.replace_str(line2, "{url}", Common.url_decode(request.getProperty("baseUrl")));
              line2 = Common.replace_str(line2, "{to}", emailTo);
              line2 = Common.replace_str(line2, "{to_all}", request.getProperty("to_all", ""));
              line2 = Common.replace_str(line2, "{from}", emailFrom);
              line2 = Common.replace_str(line2, "{reply_to}", emailReplyTo);
              line2 = Common.replace_str(line2, "{cc}", emailCc);
              line2 = Common.replace_str(line2, "{bcc}", emailBcc);
              line2 = Common.replace_str(line2, "{subject}", emailSubject);
              line2 = Common.replace_str(line2, "{paths}", Common.url_decode(request.getProperty("paths")));
              line2 = Common.replace_str(line2, "{path}", Common.all_but_last(paths[xx].trim()));
              line2 = Common.replace_str(line2, "{name}", Common.url_decode(Common.last(paths[xx].trim())));
              line2 = Common.replace_str(line2, "{datetime}", ex1.format(d).trim());
              line2 = Common.replace_str(line2, "{date}", date_time.format(d).trim());
              line2 = Common.replace_str(line2, "{time}", sdf_time.format(d).trim());
              line2 = Common.replace_str(line2, "{comments}", request.getProperty("share_comments", ""));
              if (lastStat != null)
                line2 = Common.replace_str(line2, "{size}", Common.format_bytes_short2(Long.parseLong(lastStat.getProperty("size", "0")))); 
              line2 = Common.replace_str(line2, "{total_size}", Common.format_bytes_short2(total_size));
              line2 = Common.replace_str(line2, "{logins}", loginCount);
              int k;
              for (k = 0; k < 100; k++) {
                String s = "";
                if ((paths[xx].split("/")).length > k)
                  s = paths[xx].split("/")[k]; 
                line2 = Common.replace_str(line2, "{" + k + "path}", s);
              } 
              for (k = 0; k < 100; k++) {
                String s = "";
                int m = (paths[xx].split("/")).length - 1 - k;
                if (m >= 0)
                  s = paths[xx].split("/")[m]; 
                line2 = Common.replace_str(line2, "{path" + k + "}", s);
              } 
              lines = String.valueOf(lines) + line2;
            } 
          } 
          shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{line_start}" + line + "{line_end}", lines);
        }  
      for (j = 0; j < 100; j++) {
        String s = "";
        if ((paths[0].split("/")).length > j)
          s = paths[0].split("/")[j]; 
        shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{" + j + "path}", s);
      } 
      for (j = 0; j < 100; j++) {
        String s = "";
        int k = (paths[0].split("/")).length - 1 - j;
        if (k >= 0)
          s = paths[0].split("/")[k]; 
        shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{path" + j + "}", s);
      } 
      emailBody = Common.replace_str(emailBody, "<web_link>", webLink);
      emailBody = Common.replace_str(emailBody, "<web_link_end>", webLinkEnd);
      emailBody = Common.replace_str(emailBody, "<username>", tempUsername);
      emailBody = Common.replace_str(emailBody, "<password>", tempPassword);
      emailBody = Common.replace_str(emailBody, "%user%", tempUsername);
      emailBody = Common.replace_str(emailBody, "%pass%", tempPassword);
      emailBody = Common.replace_str(emailBody, "{user}", tempUsername);
      emailBody = Common.replace_str(emailBody, "{pass}", tempPassword);
      emailBody = Common.replace_str(emailBody, "<url>", Common.url_decode(request.getProperty("baseUrl")));
      emailBody = Common.replace_str(emailBody, "{web_link}", webLink);
      emailBody = Common.replace_str(emailBody, "{web_link_end}", webLinkEnd);
      emailBody = Common.replace_str(emailBody, "{username}", tempUsername);
      emailBody = Common.replace_str(emailBody, "{password}", tempPassword);
      emailBody = Common.replace_str(emailBody, "{url}", Common.url_decode(request.getProperty("baseUrl")));
      emailBody = Common.replace_str(emailBody, "{to}", emailTo);
      emailBody = Common.replace_str(emailBody, "{to_all}", request.getProperty("to_all", ""));
      emailBody = Common.replace_str(emailBody, "{from}", emailFrom);
      emailBody = Common.replace_str(emailBody, "{reply_to}", emailReplyTo);
      emailBody = Common.replace_str(emailBody, "{cc}", emailCc);
      emailBody = Common.replace_str(emailBody, "{bcc}", emailBcc);
      emailBody = Common.replace_str(emailBody, "{subject}", emailSubject);
      emailBody = Common.replace_str(emailBody, "{paths}", Common.url_decode(request.getProperty("paths")));
      emailBody = Common.replace_str(emailBody, "{name}", Common.url_decode(last_name));
      emailBody = Common.replace_str(emailBody, "{comments}", Common.url_decode(request.getProperty("share_comments")));
      if (lastStat != null)
        emailBody = Common.replace_str(emailBody, "{size}", Common.format_bytes_short2(Long.parseLong(lastStat.getProperty("size", "0")))); 
      emailBody = Common.replace_str(emailBody, "{total_size}", Common.format_bytes_short2(total_size));
      emailBody = Common.replace_str(emailBody, "{logins}", loginCount);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "<web_link>", webLink);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "<web_link_end>", webLinkEnd);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "<username>", tempUsername);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "<password>", tempPassword);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "%user%", tempUsername);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "%pass%", tempPassword);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{user}", tempUsername);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{pass}", tempPassword);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "<url>", Common.url_decode(request.getProperty("baseUrl")));
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{web_link}", webLink);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{web_link_end}", webLinkEnd);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{username}", tempUsername);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{password}", tempPassword);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{url}", Common.url_decode(request.getProperty("baseUrl")));
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{to}", emailTo);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{to_all}", request.getProperty("to_all", ""));
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{from}", emailFrom);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{reply_to}", emailReplyTo);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{cc}", emailCc);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{bcc}", emailBcc);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{subject}", emailSubject);
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{paths}", Common.url_decode(request.getProperty("paths")));
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{name}", Common.url_decode(last_name));
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{comments}", Common.url_decode(request.getProperty("share_comments", "")));
      if (lastStat != null)
        shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{size}", Common.format_bytes_short2(Long.parseLong(lastStat.getProperty("size", "0")))); 
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{total_size}", Common.format_bytes_short2(total_size));
      shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{logins}", loginCount);
      for (j = 0; j < 100; j++) {
        String s = "";
        if ((paths[0].split("/")).length > j)
          s = paths[0].split("/")[j]; 
        emailSubject = Common.replace_str(emailSubject, "{" + j + "path}", s);
      } 
      for (j = 0; j < 100; j++) {
        String s = "";
        int k = (paths[0].split("/")).length - 1 - j;
        if (k >= 0)
          s = paths[0].split("/")[k]; 
        emailSubject = Common.replace_str(emailSubject, "{path" + j + "}", s);
      } 
      emailSubject = Common.replace_str(emailSubject, "{username}", tempUsername);
      emailSubject = Common.replace_str(emailSubject, "{password}", tempPassword);
      emailSubject = Common.replace_str(emailSubject, "{web_link}", webLink);
      emailSubject = Common.replace_str(emailSubject, "{web_link_end}", webLinkEnd);
      emailSubject = Common.replace_str(emailSubject, "{to}", emailTo);
      emailSubject = Common.replace_str(emailSubject, "{to_all}", request.getProperty("to_all", ""));
      emailSubject = Common.replace_str(emailSubject, "{from}", emailFrom);
      emailSubject = Common.replace_str(emailSubject, "{reply_to}", emailReplyTo);
      emailSubject = Common.replace_str(emailSubject, "{cc}", emailCc);
      emailSubject = Common.replace_str(emailSubject, "{bcc}", emailBcc);
      emailSubject = Common.replace_str(emailSubject, "{logins}", loginCount);
      emailSubject = Common.textFunctions(emailSubject, "{", "}");
      emailSubject = Common.textFunctions(emailSubject, "[", "]");
      emailSubject = Common.replace_str(emailSubject, "{total_size}", Common.format_bytes_short2(total_size));
      request.put("logins", loginCount);
      try {
        if (user != null)
          date_time = SessionCrush.updateDateCustomizations(date_time, user); 
        emailBody = Common.replace_str(emailBody, "<datetime>", ex1.format(d).trim());
        emailBody = Common.replace_str(emailBody, "<date>", date_time.format(d).trim());
        emailBody = Common.replace_str(emailBody, "<time>", sdf_time.format(d).trim());
        emailBody = Common.replace_str(emailBody, "{datetime}", ex1.format(d).trim());
        emailBody = Common.replace_str(emailBody, "{date}", date_time.format(d).trim());
        emailBody = Common.replace_str(emailBody, "{time}", sdf_time.format(d).trim());
        emailBody = Common.replace_str(emailBody, "{logins}", loginCount);
        emailBody = Common.textFunctions(emailBody, "{", "}");
        emailBody = Common.textFunctions(emailBody, "[", "]");
      } catch (Exception e) {
        Log.log("HTTP_SERVER", 1, e);
      } 
      request.put("date", date_time.format(d).trim());
      request.put("datetime", ex1.format(d).trim());
      request.put("time", sdf_time.format(d).trim());
      try {
        if (user != null)
          date_time = SessionCrush.updateDateCustomizations(date_time, user); 
        request.put("date", date_time.format(d).trim());
        request.put("datetime", ex1.format(d).trim());
        request.put("time", sdf_time.format(d).trim());
        shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "<datetime>", ex1.format(d).trim());
        shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "<date>", date_time.format(d).trim());
        shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "<time>", sdf_time.format(d).trim());
        shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{datetime}", ex1.format(d).trim());
        shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{date}", date_time.format(d).trim());
        shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{time}", sdf_time.format(d).trim());
        shareBodyEmailClient = Common.replace_str(shareBodyEmailClient, "{logins}", loginCount);
        shareBodyEmailClient = Common.textFunctions(shareBodyEmailClient, "{", "}");
        shareBodyEmailClient = Common.textFunctions(shareBodyEmailClient, "[", "]");
      } catch (Exception e) {
        Log.log("HTTP_SERVER", 1, e);
      } 
      if (request.getProperty("sendEmail", "").equals("true")) {
        String result = Common.send_mail(ServerStatus.SG("discovered_ip"), emailTo, emailCc, emailBcc, emailFrom, emailReplyTo, emailSubject, emailBody, ServerStatus.SG("smtp_server"), ServerStatus.SG("smtp_user"), ServerStatus.SG("smtp_pass"), ServerStatus.SG("smtp_ssl").equals("true"), ServerStatus.SG("smtp_html").equals("true"), files2);
        if (result.toUpperCase().indexOf("SUCCESS") < 0) {
          msg = "ERROR: {share_complete} {email_failed} " + msg;
        } else {
          msg = "{share_complete}  {share_email_sent}. &nbsp;&nbsp;&nbsp;" + msg;
        } 
      } else {
        msg = "{share_complete} &nbsp;&nbsp;&nbsp;" + msg;
      } 
      msg = String.valueOf(msg) + "<a href=\"mailto:" + emailTo + "?ignore=false";
      if (!emailCc.trim().equals(""))
        msg = String.valueOf(msg) + "&cc=" + emailCc; 
      if (!emailBcc.trim().equals(""))
        msg = String.valueOf(msg) + "&bcc=" + emailBcc; 
      if (!emailSubject.trim().equals(""))
        msg = String.valueOf(msg) + "&subject=" + Common.url_encode(emailSubject); 
      if (!shareBodyEmailClient.trim().equals(""))
        msg = String.valueOf(msg) + "&body=" + Common.url_encode(shareBodyEmailClient); 
      msg = String.valueOf(msg) + "\">{share_open_in_email_client}</a>";
      if (thisSession != null)
        thisSession.do_event5("BATCH_COMPLETE", null); 
    } else if (request.getProperty("shareUsername", "false").equalsIgnoreCase("false")) {
      msg = "ERROR: " + msg;
    } 
    response = String.valueOf(response) + "<username>" + tempUsername + "</username>";
    response = String.valueOf(response) + "<password>" + tempPassword + "</password>";
    response = String.valueOf(response) + "<expire_date>" + expire_date + "</expire_date>";
    response = String.valueOf(response) + "<expire>" + request.getProperty("expire") + "</expire>";
    response = String.valueOf(response) + "<date>" + request.getProperty("date") + "</date>";
    response = String.valueOf(response) + "<datetime>" + request.getProperty("datetime") + "</datetime>";
    response = String.valueOf(response) + "<time>" + request.getProperty("time") + "</time>";
    response = String.valueOf(response) + "<logins>" + request.getProperty("logins") + "</logins>";
    response = String.valueOf(response) + "<message>" + Common.url_encode(msg) + "</message>";
    response = String.valueOf(response) + "<url>" + Common.url_encode(webLink) + "</url>";
    response = String.valueOf(response) + "<error_response></error_response>";
    response = String.valueOf(response) + "</response></commandResult>";
    return response;
  }
  
  public static void doEventItem(Properties fileItem, SessionCrush theSession, String event_type) {
    if (theSession == null)
      return; 
    fileItem = TaskBridge.doEventItem(fileItem, event_type, theSession.uiSG("user_ip"), theSession.uiSG("sessionID"), theSession.user_info.getProperty("SESSION_RID"));
    theSession.do_event5(event_type, fileItem);
  }
  
  public static String createCustom(Vector path_items, Properties request, SessionCrush thisSession) throws Exception {
    String response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n";
    if (request.getProperty("json", "false").equals("true"))
      response = ""; 
    for (int x = 0; x < path_items.size(); x++) {
      Properties stat = path_items.elementAt(x);
      request.putAll(stat);
      stat.putAll(request);
      doEventItem(stat, thisSession, "CUSTOM");
    } 
    if (thisSession != null)
      thisSession.do_event5("BATCH_COMPLETE", null); 
    if (request.getProperty("json", "false").equals("true")) {
      response = "{\r\n\"success\": true\r\n}\r\n";
    } else {
      response = String.valueOf(response) + "<commandResult><response>SUCCESS</response></commandResult>";
    } 
    return response;
  }
  
  public static String getHistory(Properties request, SessionCrush thisSession) throws Exception {
    String the_dir = Common.url_decode(request.getProperty("path", ""));
    the_dir = Common.dots(the_dir);
    if (the_dir.equals("/"))
      the_dir = thisSession.SG("root_dir"); 
    if (the_dir.toUpperCase().startsWith("/") && !the_dir.toUpperCase().startsWith(thisSession.SG("root_dir").toUpperCase()))
      the_dir = String.valueOf(thisSession.SG("root_dir")) + the_dir.substring(1); 
    Properties item = thisSession.uVFS.get_item(the_dir);
    String info = "";
    if (item != null && item.getProperty("type", "").equalsIgnoreCase("FILE") && item.getProperty("privs", "").indexOf("(sync") >= 0) {
      thisSession.uiPUT("current_dir", the_dir);
      String path = the_dir;
      String revPath = Common.parseSyncPart(item.getProperty("privs", ""), "revisionsPath");
      FileClient fc = new FileClient("file:///", "", new Vector());
      Vector listing = new Vector();
      for (int rev = 0; rev < 100; rev++) {
        if (!revPath.equals("")) {
          if (path.startsWith(thisSession.SG("root_dir")))
            path = path.substring(thisSession.SG("root_dir").length() - 1); 
          VRL vrl = new VRL(String.valueOf(revPath) + path + "/" + rev + "/" + item.getProperty("name"));
          if (!(new File_U(vrl.getPath())).exists())
            break; 
          Properties lp = fc.stat(vrl.getPath());
          lp.remove("url");
          lp.put("root_dir", item.getProperty("root_dir"));
          lp.put("href_path", String.valueOf(lp.getProperty("root_dir")) + lp.getProperty("name"));
          lp.put("crushftp_rev", (new StringBuffer(String.valueOf(rev))).toString());
          File_U info_xml = new File_U(String.valueOf(revPath) + path + "/" + rev + "/info.XML");
          if (info_xml.exists()) {
            Properties info2 = (Properties)Common.readXMLObject_U(info_xml);
            if (info2 != null)
              lp.putAll(info2); 
          } 
          listing.addElement(lp);
        } 
      } 
      Properties listingProp = new Properties();
      listingProp.put("listing", listing);
      String altList = AgentUI.getJsonListObj(listingProp, true);
      info = String.valueOf(info) + "{\r\n";
      info = String.valueOf(info) + "\t\"listing\" : " + altList + "\r\n";
      info = String.valueOf(info) + "}\r\n";
    } else {
      info = String.valueOf(info) + "{\r\n";
      info = String.valueOf(info) + "\t\"listing\" : []\r\n";
      info = String.valueOf(info) + "}\r\n";
    } 
    return info;
  }
  
  public static String manageShares(SessionCrush thisSession) throws Exception {
    Vector listing = new Vector();
    try {
      String tempAccountsPath = ServerStatus.SG("temp_accounts_path");
      File_U[] accounts = (File_U[])(new File_U(String.valueOf(tempAccountsPath) + "accounts/")).listFiles();
      thisSession.date_time = SessionCrush.updateDateCustomizations(thisSession.date_time, thisSession.user);
      if (accounts != null)
        for (int i = 0; i < accounts.length; i++) {
          try {
            File_U f = accounts[i];
            if (f.getName().indexOf(",,") >= 0 && f.isDirectory()) {
              String[] tokens = f.getName().split(",,");
              Properties pp = new Properties();
              for (int xx = 0; xx < tokens.length; xx++) {
                String key = tokens[xx].substring(0, tokens[xx].indexOf("="));
                String val = tokens[xx].substring(tokens[xx].indexOf("=") + 1);
                pp.put(key.toUpperCase(), val);
              } 
              if (thisSession.uiSG("user_name").equalsIgnoreCase(pp.getProperty("M"))) {
                SimpleDateFormat sdf1 = new SimpleDateFormat("MMddyyyyHHmm", Locale.US);
                SimpleDateFormat sdf2 = new SimpleDateFormat("MM/dd/yyyy HH:mm", Locale.US);
                Properties info = (Properties)Common.readXMLObject_U(String.valueOf(f.getPath()) + "/INFO.XML");
                info.putAll(pp);
                info.put("password", pp.getProperty("P"));
                info.remove("type");
                info.remove("master");
                try {
                  info.put("expire", thisSession.date_time.format(sdf1.parse(info.getProperty("EX"))));
                  info.put("expireMillis", (new StringBuffer(String.valueOf(sdf1.parse(info.getProperty("EX")).getTime()))).toString());
                } catch (Exception e) {
                  Log.log("HTTP_SERVER", 1, e);
                } 
                try {
                  info.put("createdMillis", (new StringBuffer(String.valueOf(sdf2.parse(info.getProperty("created")).getTime()))).toString());
                } catch (Exception e) {
                  Log.log("HTTP_SERVER", 1, e);
                } 
                info.remove("EX");
                info.remove("T");
                info.remove("P");
                info.remove("M");
                info.remove("U");
                info.put("downloads", "?");
                info.put("login_allowance", pp.getProperty("I", "-1"));
                try {
                  if (Common.dmz_mode) {
                    Vector queue = (Vector)Common.System2.get("crushftp.dmz.queue");
                    Properties action = new Properties();
                    action.put("type", "GET:DOWNLOAD_COUNT");
                    action.put("id", Common.makeBoundary());
                    action.put("username", info.getProperty("username"));
                    action.put("need_response", "true");
                    queue.addElement(action);
                    action = UserTools.waitResponse(action, 60);
                    if (action != null)
                      info.put("downloads", action.get("responseText")); 
                  } else {
                    info.put("downloads", (new StringBuffer(String.valueOf(ServerStatus.thisObj.statTools.getUserDownloadCount(info.getProperty("username"))))).toString());
                  } 
                } catch (Exception e) {
                  Log.log("HTTP_SERVER", 1, e);
                } 
                String details = "";
                Enumeration keys = info.keys();
                while (keys.hasMoreElements()) {
                  String key = keys.nextElement().toString();
                  String val = info.getProperty(key, "");
                  val = Common.url_decode(val);
                  info.put(key, val);
                  details = String.valueOf(details) + key + ":" + val + "\r-------------------------------\r";
                  if (key.startsWith("ldap_"))
                    info.remove(key); 
                } 
                String details2 = details;
                info.put("details", details2);
                info.put("usernameShare", "false");
                listing.addElement(info);
              } 
            } 
          } catch (Exception e) {
            Log.log("HTTP_SERVER", 1, e);
          } 
        }  
    } catch (Exception e) {
      Log.log("HTTP_SERVER", 1, e);
    } 
    Vector user_list = new Vector();
    UserTools.refreshUserList(thisSession.server_item.getProperty("linkedServer"), user_list);
    for (int x = 0; x < user_list.size(); x++) {
      String newUser = Common.dots(user_list.elementAt(x).toString());
      if (newUser.toUpperCase().endsWith(".SHARED")) {
        Log.log("SERVER", 2, "ManageShares:Checking username:" + newUser + " (" + (x + 1) + "/" + user_list.size() + ")");
        VFS tempVFS = UserTools.ut.getVFS(thisSession.server_item.getProperty("linkedServer"), newUser);
        if (tempVFS != null) {
          Vector items = new Vector();
          tempVFS.getListing(items, "/Shares/" + thisSession.uiSG("user_name") + "/");
          for (int xx = 0; xx < items.size(); xx++) {
            Properties item_info2 = items.elementAt(xx);
            Properties item_info = tempVFS.get_item(String.valueOf(item_info2.getProperty("root_dir")) + item_info2.getProperty("name"));
            if (item_info == null)
              item_info = item_info2; 
            VRL vrl = new VRL(item_info.getProperty("url"));
            if (vrl.getProtocol().equalsIgnoreCase("virtual") || (vrl.getProtocol().equalsIgnoreCase("file") && !(new File_U(vrl.getPath())).exists())) {
              Properties request_fake = new Properties();
              request_fake.put("tempUsername", String.valueOf(newUser.substring(0, newUser.lastIndexOf("."))) + ":" + Common.url_encode((String)vrl));
              deleteShare(request_fake, thisSession);
            } else {
              Log.log("SERVER", 2, "ManageShares:Checking username:" + newUser + ":with item(" + (xx + 1) + ":" + items.size() + ")");
              Properties vItem = (Properties)item_info.get("vItem");
              Properties sharedUser = new Properties();
              sharedUser.put("web_link", "");
              sharedUser.put("username", newUser.substring(0, newUser.lastIndexOf(".")));
              sharedUser.put("password", "");
              sharedUser.put("emailFrom", "");
              sharedUser.put("emailReplyTo", "");
              sharedUser.put("emailTo", "Username Share : " + newUser.substring(0, newUser.lastIndexOf(".")));
              sharedUser.put("emailCc", "");
              sharedUser.put("emailBcc", "");
              sharedUser.put("emailSubject", "");
              sharedUser.put("emailBody", "");
              sharedUser.put("paths", String.valueOf(Common.all_but_last((new VRL(item_info.getProperty("url", ""))).safe())) + item_info.getProperty("name"));
              if (vItem != null)
                sharedUser.put("expire", vItem.getProperty("expires_on", "never")); 
              if (sharedUser.getProperty("expire", "").trim().equals(""))
                sharedUser.put("expire", "never"); 
              sharedUser.put("details", "");
              sharedUser.put("attach", "false");
              sharedUser.put("usernameShare", "true");
              sharedUser.put("allowUploads", tempVFS.getCombinedPermissions().getProperty(("/Shares/" + thisSession.uiSG("user_name") + "/" + item_info.getProperty("name") + "/").toUpperCase(), "(none)"));
              sharedUser.put("publishType", "Internal Username Share");
              if (vItem != null && vItem.containsKey("created_on")) {
                sharedUser.put("created", vItem.getProperty("created_on"));
                sharedUser.put("createdMillis", (new StringBuffer(String.valueOf(UserTools.expire_vfs.parse(vItem.getProperty("created_on")).getTime()))).toString());
              } else {
                sharedUser.put("created", thisSession.date_time.format(new Date(Long.parseLong(item_info.getProperty("modified")))));
                sharedUser.put("createdMillis", item_info.getProperty("modified"));
              } 
              sharedUser.put("details", "");
              if (vItem != null)
                sharedUser.put("share_comments", vItem.getProperty("share_comments", "")); 
              listing.addElement(sharedUser);
            } 
          } 
        } 
      } 
    } 
    Log.log("SERVER", 2, "ManageShares:list size:" + listing.size());
    String response = "";
    try {
      response = Common.getXMLString(listing, "listingInfo", null);
    } catch (Exception e) {
      Log.log("HTTP_SERVER", 1, e);
    } 
    return response;
  }
  
  public static String deleteShare(Properties request, SessionCrush thisSession) {
    try {
      String tempAccountsPath = ServerStatus.SG("temp_accounts_path");
      File_U[] accounts = (File_U[])(new File_U(String.valueOf(tempAccountsPath) + "accounts/")).listFiles();
      String[] tempUsers = request.getProperty("tempUsername").split(";");
      for (int loop = 0; loop < tempUsers.length; loop++) {
        String curTempUser = tempUsers[loop].trim().replace('+', ' ');
        if (curTempUser.indexOf(":") >= 0) {
          String userid = Common.dots(Common.url_decode(curTempUser.substring(0, curTempUser.indexOf(":")))).replace('/', '_').replace('\\', '_');
          Log.log("HTTP_SERVER", 2, "Deleting userid:" + userid);
          String paths = curTempUser.substring(curTempUser.indexOf(":") + 1).trim();
          paths = Common.dots(Common.last(Common.url_decode(paths)));
          Log.log("HTTP_SERVER", 2, "Deleting userid paths:" + paths);
          VFS tempVFS = UserTools.ut.getVFS(thisSession.server_item.getProperty("linkedServer"), String.valueOf(userid) + ".SHARED");
          Properties virtual = tempVFS.homes.elementAt(0);
          Log.log("HTTP_SERVER", 2, "Loaded VFS:" + virtual);
          virtual.remove("/Shares/" + thisSession.uiSG("user_name") + "/" + paths);
          virtual.remove("/Shares/" + thisSession.uiSG("user_name") + "/" + paths.substring(0, paths.length() - 1));
          Properties permissions = ((Vector)virtual.get("vfs_permissions_object")).elementAt(0);
          if (permissions != null) {
            permissions.remove(("/Shares/" + thisSession.uiSG("user_name") + "/" + paths).toUpperCase());
            permissions.remove(("/Shares/" + thisSession.uiSG("user_name") + "/" + paths.substring(0, paths.length() - 1)).toUpperCase());
          } 
          Log.log("HTTP_SERVER", 2, "Removing entry:/Shares/" + thisSession.uiSG("user_name") + "/" + paths);
          Vector tempList = new Vector();
          tempVFS.getListing(tempList, "/Shares/" + thisSession.uiSG("user_name") + "/");
          if (tempList.size() == 0) {
            virtual.remove("/Shares/" + thisSession.uiSG("user_name") + "/");
            virtual.remove("/Shares/" + thisSession.uiSG("user_name"));
            if (permissions != null) {
              permissions.remove(("/Shares/" + thisSession.uiSG("user_name") + "/").toUpperCase());
              permissions.remove(("/Shares/" + thisSession.uiSG("user_name")).toUpperCase());
            } 
          } 
          tempList = new Vector();
          tempVFS.getListing(tempList, "/Shares/");
          if (tempList.size() == 0) {
            virtual.remove("/Shares/");
            virtual.remove("/Shares");
            if (permissions != null) {
              permissions.remove("/Shares/".toUpperCase());
              permissions.remove("/Shares".toUpperCase());
            } 
          } 
          Properties sharedUser = new Properties();
          sharedUser.put("password", "");
          sharedUser.put("version", "1.0");
          sharedUser.put("root_dir", "/");
          sharedUser.put("userVersion", "5");
          sharedUser.put("max_logins", "-1");
          UserTools.writeUser(thisSession.server_item.getProperty("linkedServer"), String.valueOf(userid) + ".SHARED", sharedUser);
          UserTools.writeVFS(thisSession.server_item.getProperty("linkedServer"), String.valueOf(userid) + ".SHARED", tempVFS);
        } else {
          for (int x = 0; accounts != null && x < accounts.length; x++) {
            try {
              File_U f = accounts[x];
              if (f.getName().indexOf(",,") >= 0 && f.isDirectory()) {
                String[] tokens = f.getName().split(",,");
                Properties pp = new Properties();
                for (int xx = 0; xx < tokens.length; xx++) {
                  String key = tokens[xx].substring(0, tokens[xx].indexOf("="));
                  String val = tokens[xx].substring(tokens[xx].indexOf("=") + 1);
                  pp.put(key.toUpperCase(), val);
                } 
                if (thisSession.uiSG("user_name").equalsIgnoreCase(pp.getProperty("M")) && curTempUser.equalsIgnoreCase(pp.getProperty("U"))) {
                  Common.recurseDelete_U(String.valueOf(tempAccountsPath) + "storage/" + pp.getProperty("U") + pp.getProperty("P"), false);
                  Common.recurseDelete_U(f.getCanonicalPath(), false);
                } 
              } 
            } catch (Exception e) {
              Log.log("HTTP_SERVER", 1, e);
            } 
          } 
        } 
      } 
    } catch (Exception e) {
      Log.log("HTTP_SERVER", 1, e);
    } 
    String response = "";
    try {
      response = Common.getXMLString(request, "listingInfo", null, true);
    } catch (Exception e) {
      Log.log("HTTP_SERVER", 1, e);
    } 
    return response;
  }
  
  public static String selfRegistration(Properties request, SessionCrush thisSession, String req_id) {
    String response = "Success";
    try {
      Common.urlDecodePost(request);
      Enumeration keys = request.keys();
      Properties metaInfo = new Properties();
      while (keys.hasMoreElements()) {
        String key = keys.nextElement().toString();
        if (key.toUpperCase().startsWith("META_")) {
          String val = request.getProperty(key);
          key = key.substring("META_".length());
          metaInfo.put(key, val);
          if (key.toUpperCase().startsWith("GLOBAL_")) {
            if (ServerStatus.thisObj.server_info.get("global_variables") == null)
              ServerStatus.thisObj.server_info.put("global_variables", new Properties()); 
            Properties global_variables = (Properties)ServerStatus.thisObj.server_info.get("global_variables");
            global_variables.put(key, val);
            continue;
          } 
          if (key.toUpperCase().startsWith("USER_INFO_"))
            thisSession.user_info.put(key, val); 
        } 
      } 
      Properties newUser = new Properties();
      String username = metaInfo.getProperty("registration_username");
      Properties customForm = null;
      Vector customForms = (Vector)ServerStatus.server_settings.get("CustomForms");
      String pendingSelfRegistration = "pendingSelfRegistration";
      if (customForms != null) {
        for (int x = 0; x < customForms.size(); x++) {
          Properties p = customForms.elementAt(x);
          if (p.getProperty("name", "").equals(metaInfo.getProperty("form_name")) && thisSession.SG("messageForm").indexOf(metaInfo.getProperty("form_name")) >= 0) {
            customForm = p;
            break;
          } 
        } 
        if (customForm != null) {
          if (!customForm.containsKey("entries"))
            customForm.put("entries", new Vector()); 
          Vector entries = (Vector)customForm.get("entries");
          for (int i = 0; i < entries.size(); i++) {
            Properties p = entries.elementAt(i);
            if (!p.getProperty("type").trim().equals("label")) {
              String val = metaInfo.getProperty(p.getProperty("name", "").trim());
              if (val != null && p.getProperty("name").trim().startsWith("registration_")) {
                newUser.put(p.getProperty("name").trim().substring("registration_".length()), val);
              } else if (p.getProperty("name").trim().startsWith("pendingSelfRegistration")) {
                pendingSelfRegistration = val.trim();
              } 
            } 
          } 
        } 
      } 
      newUser.put("root_dir", "/");
      newUser.put("user_name", username);
      newUser.put("max_logins", "-1");
      String originalPass = newUser.getProperty("password", newUser.getProperty("password_hidden", Common.makeBoundary()));
      newUser.put("password", ServerStatus.thisObj.common_code.encode_pass(newUser.getProperty("password", newUser.getProperty("password_hidden", Common.makeBoundary())), ServerStatus.SG("password_encryption"), ""));
      Properties password_rules = SessionCrush.build_password_rules(thisSession.user);
      if (!Common.checkPasswordRequirements(originalPass, "", password_rules).equals("")) {
        response = "Failure:" + Common.checkPasswordRequirements(originalPass, "", password_rules);
        thisSession.add_log_formatted("Attempt to register a username using a weak password:" + username + ":" + response, "POST", req_id);
      } else if (UserTools.ut.getUser(thisSession.server_item.getProperty("linkedServer"), username, false) == null || UserTools.ut.getUser(thisSession.server_item.getProperty("linkedServer"), username, false).getProperty("username").equals("template")) {
        UserTools.writeUser(thisSession.server_item.getProperty("linkedServer"), username, newUser);
        Properties groups = UserTools.getGroups(thisSession.server_item.getProperty("linkedServer"));
        Vector groupUsers = (Vector)groups.get(pendingSelfRegistration);
        if (groupUsers == null)
          groupUsers = new Vector(); 
        groups.put(pendingSelfRegistration, groupUsers);
        if (groupUsers.indexOf(username) < 0)
          groupUsers.addElement(username); 
        if (!pendingSelfRegistration.equals("pendingSelfRegistration")) {
          Properties inheritance = UserTools.getInheritance(request.getProperty("serverGroup"));
          Vector vv = new Vector();
          vv.addElement(pendingSelfRegistration);
          inheritance.put(username, vv);
          UserTools.writeInheritance(thisSession.server_item.getProperty("linkedServer"), inheritance);
        } else {
          pendingSelfRegistration = "pendingSelfRegistration";
          groupUsers = (Vector)groups.get(pendingSelfRegistration);
          if (groupUsers == null)
            groupUsers = new Vector(); 
          groups.put(pendingSelfRegistration, groupUsers);
          if (groupUsers.indexOf(username) < 0)
            groupUsers.addElement(username); 
        } 
        UserTools.writeGroups(thisSession.server_item.getProperty("linkedServer"), groups);
        ServerStatus.thisObj.statTools.insertMetaInfo(thisSession.uiSG("SESSION_RID"), metaInfo, "0");
        Properties metaInfo2 = (Properties)metaInfo.clone();
        metaInfo2.remove("registration_password");
        thisSession.add_log("[" + thisSession.uiSG("user_number") + ":" + thisSession.uiSG("user_name") + ":" + thisSession.uiSG("user_ip") + "] DATA: *messageForm confirmed:" + metaInfo2 + "*", "HTTP");
        Properties fileItem = new Properties();
        fileItem.put("url", "ftp://127.0.0.1:56789/");
        fileItem.put("the_file_path", "/");
        fileItem.put("the_file_size", "1");
        fileItem.put("event_name", "registration");
        fileItem.put("the_file_name", "registration");
        fileItem.putAll(metaInfo);
        fileItem.put("metaInfo", metaInfo);
        thisSession.uiVG("lastUploadStats").addElement(fileItem);
        thisSession.do_event5("WELCOME", fileItem);
      } else {
        thisSession.add_log_formatted("Attempt to register an existing username:" + username, "POST", req_id);
        response = "Failure";
      } 
    } catch (Exception e) {
      Log.log("HTTP_SERVER", 1, e);
    } 
    return response;
  }
  
  public static String editShare(Properties request, SessionCrush thisSession) {
    try {
      String tempAccountsPath = ServerStatus.SG("temp_accounts_path");
      File_U[] accounts = (File_U[])(new File_U(String.valueOf(tempAccountsPath) + "accounts/")).listFiles();
      String[] tempUsers = request.getProperty("tempUsername").split(";");
      for (int loop = 0; loop < tempUsers.length; loop++) {
        String curTempUser = tempUsers[loop].trim().replace('+', ' ');
        for (int x = 0; accounts != null && x < accounts.length; x++) {
          try {
            File_U f = accounts[x];
            if (f.getName().indexOf(",,") >= 0 && f.isDirectory()) {
              String[] tokens = f.getName().split(",,");
              Properties pp = new Properties();
              for (int xx = 0; xx < tokens.length; xx++) {
                String key = tokens[xx].substring(0, tokens[xx].indexOf("="));
                String val = tokens[xx].substring(tokens[xx].indexOf("=") + 1);
                pp.put(key.toUpperCase(), val);
              } 
              if (thisSession.uiSG("user_name").equalsIgnoreCase(pp.getProperty("M")) && curTempUser.equalsIgnoreCase(pp.getProperty("U"))) {
                int maxExpireDays = 0;
                Vector web_customizations = (Vector)thisSession.user.get("web_customizations");
                if (web_customizations != null)
                  for (int i = 0; i < web_customizations.size(); i++) {
                    Properties cust = web_customizations.elementAt(i);
                    if (cust.getProperty("key").equals("EXPIREDAYSMAX"))
                      maxExpireDays = Integer.parseInt(cust.getProperty("value").trim()); 
                  }  
                SimpleDateFormat ex1 = new SimpleDateFormat("MM/dd/yyyy HH:mm", Locale.US);
                SimpleDateFormat ex2 = new SimpleDateFormat("MMddyyyyHHmm", Locale.US);
                Date requestExpire = ex1.parse(request.getProperty("expire", "1/1/1970 00:01").replace('+', ' '));
                Calendar gc = new GregorianCalendar();
                gc.setTime(new Date());
                gc.add(5, maxExpireDays);
                if (maxExpireDays > 0 && (!request.containsKey("expire") || requestExpire.getTime() > gc.getTime().getTime()))
                  requestExpire = gc.getTime(); 
                String expire_date = ex2.format(requestExpire);
                request.put("expire", ex1.format(requestExpire));
                String folderName = "u=" + pp.getProperty("U") + ",,p=" + pp.getProperty("P") + ",,m=" + pp.getProperty("M") + ",,t=" + pp.getProperty("T") + ",,ex=" + expire_date;
                if (request.getProperty("logins", "").trim().equals("-1"))
                  request.remove("logins"); 
                if (!request.getProperty("logins", "").equals(""))
                  folderName = String.valueOf(folderName) + ",,i=" + request.getProperty("logins", ""); 
                Properties info = (Properties)Common.readXMLObject_U(String.valueOf(f.getPath()) + "/INFO.XML");
                info.put("EX", expire_date);
                Common.writeXMLObject_U(String.valueOf(f.getPath()) + "/INFO.XML", info, "INFO");
                f.renameTo(new File_U(String.valueOf(Common.all_but_last(f.getPath())) + folderName));
              } 
            } 
          } catch (Exception e) {
            Log.log("HTTP_SERVER", 1, e);
          } 
        } 
      } 
    } catch (Exception e) {
      Log.log("HTTP_SERVER", 1, e);
    } 
    String response = "";
    try {
      response = Common.getXMLString(request, "listingInfo", null, true);
    } catch (Exception e) {
      Log.log("HTTP_SERVER", 1, e);
    } 
    return response;
  }
  
  public static String processKeywordsEdit(Properties request, SessionCrush thisSession) throws Exception {
    String response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n";
    String[] names = (String[])null;
    if (request.getProperty("names").indexOf(";") >= 0) {
      names = Common.url_decode(request.getProperty("names")).replace('>', '_').replace('<', '_').split(";");
    } else {
      names = Common.url_decode(request.getProperty("names")).replace('>', '_').replace('<', '_').split("\r\n");
    } 
    String keyword = Common.xss_strip(request.getProperty("keywords").trim());
    response = String.valueOf(response) + "<commandResult><response>";
    boolean ok = false;
    for (int x = 0; x < names.length; x++) {
      String the_dir = Common.url_decode(Common.all_but_last(names[x]));
      if (the_dir.startsWith(thisSession.SG("root_dir")))
        the_dir = the_dir.substring(thisSession.SG("root_dir").length() - 1); 
      thisSession.uiPUT("current_dir", thisSession.getStandardizedDir(the_dir));
      Properties item = thisSession.uVFS.get_item(String.valueOf(thisSession.uiSG("current_dir")) + Common.last(names[x]));
      the_dir = SearchHandler.getPreviewPath(item.getProperty("url"), "1", 1);
      String index = String.valueOf(ServerStatus.SG("previews_path")) + the_dir.substring(1);
      if (!(new File_U(Common.all_but_last(index))).exists())
        (new File_U(Common.all_but_last(index))).mkdirs(); 
      if (ServerStatus.BG("exif_keywords")) {
        String srcFile = Common.dots((new VRL(item.getProperty("url"))).getPath());
        for (int xx = 0; xx < ServerStatus.thisObj.previewWorkers.size(); xx++) {
          PreviewWorker preview = ServerStatus.thisObj.previewWorkers.elementAt(xx);
          if (preview.prefs.getProperty("preview_enabled", "false").equalsIgnoreCase("true") && preview.checkExtension(Common.last(the_dir), item)) {
            preview.setExifInfo(srcFile, PreviewWorker.getDestPath2(String.valueOf(item.getProperty("url")) + "/p1/"), "keywords", Common.url_decode(request.getProperty("keywords")).trim());
            ok = true;
            break;
          } 
        } 
      } else {
        (new File_U(String.valueOf(Common.all_but_last(Common.all_but_last(index))) + "index.txt")).delete();
        RandomAccessFile out = new RandomAccessFile(new File_U(String.valueOf(Common.all_but_last(Common.all_but_last(index))) + "index.txt"), "rw");
        out.write((String.valueOf(keyword) + "\r\n").getBytes());
        out.close();
        ok = true;
      } 
      SearchHandler.buildEntry(item, thisSession.uVFS, false, false);
    } 
    if (ok)
      response = String.valueOf(response) + "Keywords Edited.\r\n"; 
    response = String.valueOf(response) + "</response></commandResult>";
    return response;
  }
  
  public static String handle_message_form(Properties request, SessionCrush thisSession) {
    Enumeration keys = request.keys();
    Properties metaInfo = new Properties();
    while (keys.hasMoreElements()) {
      String key = keys.nextElement().toString();
      if (key.toUpperCase().startsWith("META_")) {
        String val = request.getProperty(key);
        key = key.substring("META_".length());
        metaInfo.put(key, val);
        if (key.toUpperCase().startsWith("GLOBAL_")) {
          if (ServerStatus.thisObj.server_info.get("global_variables") == null)
            ServerStatus.thisObj.server_info.put("global_variables", new Properties()); 
          Properties global_variables = (Properties)ServerStatus.thisObj.server_info.get("global_variables");
          global_variables.put(key, val);
          continue;
        } 
        if (key.toUpperCase().startsWith("USER_INFO_"))
          thisSession.user_info.put(key, val); 
      } 
    } 
    ServerStatus.thisObj.statTools.insertMetaInfo(thisSession.uiSG("SESSION_RID"), metaInfo, "0");
    thisSession.add_log("[" + thisSession.uiSG("user_number") + ":" + thisSession.uiSG("user_name") + ":" + thisSession.uiSG("user_ip") + "] DATA: *messageForm confirmed:" + metaInfo + "*", "HTTP");
    Properties fileItem = new Properties();
    fileItem.put("url", "ftp://127.0.0.1:56789/");
    fileItem.put("the_file_path", "/");
    fileItem.put("the_file_size", "1");
    fileItem.put("event_name", "welcome");
    fileItem.put("the_file_name", "welcome");
    fileItem.putAll(metaInfo);
    Properties info = thisSession.do_event5("WELCOME", fileItem);
    if (info == null)
      info = new Properties(); 
    String response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n<commandResult><response>Success</response><new_job_id>" + info.getProperty("new_job_id", "") + "</new_job_id></commandResult>";
    return response;
  }
  
  public static String search(Properties request, SessionCrush thisSession) throws IOException, Exception, InterruptedException {
    thisSession.put("search_status", "0/1");
    String the_dir = Common.url_decode(request.getProperty("path"));
    if (the_dir.startsWith(thisSession.SG("root_dir")))
      the_dir = the_dir.substring(thisSession.SG("root_dir").length() - 1); 
    thisSession.uiPUT("current_dir", thisSession.getStandardizedDir(the_dir));
    String[] keywords = Common.url_decode(request.getProperty("keyword").replace('+', ' ')).trim().split(" ");
    boolean exact = request.getProperty("exact", "").equalsIgnoreCase("true");
    boolean all_keywords = request.getProperty("all_keywords", "false").equalsIgnoreCase("true");
    boolean date1 = request.getProperty("date1", "").equalsIgnoreCase("true");
    String date1_action = Common.url_decode(request.getProperty("date1_action", "").replace('+', ' '));
    String date1_value = request.getProperty("date1_value", "");
    boolean date2 = request.getProperty("date2", "").equalsIgnoreCase("true");
    String date2_action = Common.url_decode(request.getProperty("date2_action", "").replace('+', ' '));
    String date2_value = request.getProperty("date2_value", "");
    boolean size1 = request.getProperty("size1", "").equalsIgnoreCase("true");
    String size1_action = Common.url_decode(request.getProperty("size1_action", "").replace('+', ' '));
    String size1_value = request.getProperty("size1_value", "");
    boolean size2 = request.getProperty("size2", "").equalsIgnoreCase("true");
    String size2_action = Common.url_decode(request.getProperty("size2_action", "").replace('+', ' '));
    String size2_value = request.getProperty("size2_value", "");
    boolean type1 = request.getProperty("type1", "").equalsIgnoreCase("true");
    String type1_action = Common.url_decode(request.getProperty("type1_action", "").replace('+', ' '));
    boolean or_type = request.getProperty("include_type", "or").equalsIgnoreCase("or");
    boolean keywords_only = request.getProperty("keywords_only", "false").equals("true");
    thisSession.uiPUT("the_command", "LIST");
    thisSession.uiPUT("the_command_data", the_dir);
    Vector foundItems = new Vector();
    SimpleDateFormat mmddyyyy = new SimpleDateFormat("MM/dd/yyyy", Locale.US);
    long processedCount = 0L;
    int errors = 0;
    Vector listing = new Vector();
    SearchHandler searchHandler = new SearchHandler(thisSession, listing, thisSession.uiSG("current_dir"), Integer.parseInt(request.getProperty("depth", "20")));
    Worker.startWorker(searchHandler);
    Properties root_item = thisSession.uVFS.get_item(thisSession.uiSG("root_dir"));
    while (searchHandler.isActive() || listing.size() > 0) {
      while (searchHandler.isActive() && listing.size() == 0)
        Thread.sleep(100L); 
      if (listing.size() == 0)
        break; 
      Properties pp = listing.elementAt(0);
      listing.removeElementAt(0);
      processedCount++;
      thisSession.put("search_status", String.valueOf(processedCount) + "/" + (listing.size() + processedCount));
      try {
        boolean date_ok = true;
        boolean size_ok = true;
        boolean type_ok = true;
        int name_count = 0;
        if (date1) {
          long modified1 = Long.parseLong(pp.getProperty("modified"));
          long modified2 = mmddyyyy.parse(date1_value).getTime();
          if (date1_action.equalsIgnoreCase("before") && modified2 <= modified1) {
            date_ok = false;
          } else if (date1_action.equalsIgnoreCase("after") && modified2 >= modified1) {
            date_ok = false;
          } 
        } 
        if (date2) {
          long modified1 = Long.parseLong(pp.getProperty("modified"));
          long modified2 = mmddyyyy.parse(date2_value).getTime();
          if (date2_action.equalsIgnoreCase("before") && modified2 <= modified1) {
            date_ok = false;
          } else if (date2_action.equalsIgnoreCase("after") && modified2 >= modified1) {
            date_ok = false;
          } 
        } 
        if (size1) {
          long file_size1 = Long.parseLong(pp.getProperty("size"));
          long file_size2 = Long.parseLong(size1_value) * 1024L;
          if (size1_action.equalsIgnoreCase("bigger than") && file_size2 >= file_size1) {
            size_ok = false;
          } else if (size1_action.equalsIgnoreCase("smaller than") && file_size2 <= file_size1) {
            size_ok = false;
          } 
        } 
        if (size2) {
          long file_size1 = Long.parseLong(pp.getProperty("size"));
          long file_size2 = Long.parseLong(size2_value) * 1024L;
          if (size2_action.equalsIgnoreCase("bigger than") && file_size2 >= file_size1) {
            size_ok = false;
          } else if (size2_action.equalsIgnoreCase("smaller than") && file_size2 <= file_size1) {
            size_ok = false;
          } 
        } 
        if (type1) {
          String item_type1 = pp.getProperty("type");
          if (type1_action.equalsIgnoreCase("file") && !item_type1.equalsIgnoreCase("file")) {
            type_ok = false;
          } else if (type1_action.equalsIgnoreCase("folder") && !item_type1.equalsIgnoreCase("dir")) {
            type_ok = false;
          } 
        } 
        if (date_ok && size_ok && type_ok && keywords.length > 0) {
          if (!keywords_only) {
            int loop = 0;
            int last_loc = 0;
            while (loop < keywords.length) {
              if (name_count > 0 && !all_keywords && or_type)
                break; 
              Log.log("HTTP_SERVER", 2, "search item name:" + pp.getProperty("name") + " vs. " + keywords[loop]);
              if (!exact && !all_keywords && pp.getProperty("name").toUpperCase().indexOf(keywords[loop].toUpperCase().trim()) >= 0)
                name_count++; 
              if (exact && pp.getProperty("name").toUpperCase().equals(Common.url_decode(request.getProperty("keyword").replace('+', ' ')).trim()))
                name_count++; 
              if (all_keywords && pp.getProperty("name").toUpperCase().indexOf(keywords[loop].toUpperCase().trim(), last_loc) >= 0) {
                last_loc = pp.getProperty("name").toUpperCase().indexOf(keywords[loop].toUpperCase().trim(), last_loc);
                name_count++;
              } 
              loop++;
            } 
            if (all_keywords && name_count < keywords.length)
              name_count = 0; 
          } 
          if (name_count == 0 && (ServerStatus.BG("search_keywords_also") || ServerStatus.BG("search_file_contents_also"))) {
            Log.log("HTTP_SERVER", 2, "name still not found, trying more...");
            String indexText = pp.getProperty("keywords", "");
            if (!pp.containsKey("keywords") || ServerStatus.BG("search_file_contents_also"))
              if (ServerStatus.BG("search_file_contents_also")) {
                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                VRL vrl = new VRL(pp.getProperty("url"));
                if (vrl.getProtocol().equalsIgnoreCase("FILE")) {
                  File_U temp_item = new File_U(vrl.getPath());
                  Log.log("HTTP_SERVER", 2, "Getting file contents to search..." + vrl.safe() + ":" + temp_item.length());
                  if (temp_item.length() < 5242880L) {
                    Common.streamCopier(new FileInputStream(temp_item), baos, false, true, true);
                  } else {
                    Log.log("HTTP_SERVER", 2, "Skipping file contents (too big) to search..." + vrl.safe() + ":" + temp_item.length());
                  } 
                } else {
                  GenericClient c = thisSession.uVFS.getClient(pp);
                  try {
                    String path = (pp.getProperty("path") == null) ? vrl.getPath() : pp.getProperty("path");
                    long size = c.getLength(path);
                    Log.log("HTTP_SERVER", 2, "Getting file contents to search..." + vrl.safe() + ":" + size);
                    if (size < 5242880L) {
                      Common.streamCopier(c.download(path, 0L, -1L, true), baos, false, true, true);
                    } else {
                      Log.log("HTTP_SERVER", 2, "Skipping file contents (too big) to search..." + vrl.safe() + ":" + size);
                    } 
                  } finally {
                    thisSession.uVFS.releaseClient(c);
                  } 
                } 
                indexText = new String(baos.toByteArray(), "UTF8");
              } else {
                indexText = SearchHandler.getKeywords(pp.getProperty("url"));
              }  
            for (int x = 0; x < keywords.length; x++) {
              if (name_count > 0 && or_type)
                break; 
              Log.log("HTTP_SERVER", 2, "search item indexText:" + indexText + " vs. " + keywords[x]);
              if (!exact && indexText.toUpperCase().indexOf(keywords[x].toUpperCase().trim()) >= 0)
                name_count++; 
              if (exact && indexText.toUpperCase().indexOf("\r\n" + keywords[x].toUpperCase().trim() + "\r\n") >= 0)
                name_count++; 
            } 
          } 
          if (!or_type && name_count < keywords.length) {
            Log.log("HTTP_SERVER", 2, "search item or_type:" + or_type + " name_count:" + name_count + " versus keywrod count:" + keywords.length);
            name_count = 0;
          } 
        } 
        Log.log("HTTP_SERVER", 2, "search item or_type:" + or_type + " name_count:" + name_count + " date_ok:" + date_ok + " size_ok:" + size_ok + " type_ok:" + type_ok);
        if (name_count > 0 && date_ok && size_ok && type_ok) {
          Log.log("HTTP_SERVER", 2, "search item result:" + pp.getProperty("name"));
          if (pp.getProperty("db", "false").equals("true")) {
            Properties ppp = SearchHandler.findItem(pp, thisSession.uVFS, null, thisSession.uiSG("root_dir"));
            Log.log("HTTP_SERVER", 2, "search item result:" + ppp);
            if (ppp == null)
              continue; 
            pp.putAll(ppp);
          } 
          if (!pp.getProperty("name").equals("VFS") && pp.getProperty("privs", "").indexOf("(invisible)") < 0 && pp.getProperty("privs", "").indexOf("(view)") >= 0) {
            if (pp.getProperty("url", "").equals(root_item.getProperty("url")))
              continue; 
            Log.log("HTTP_SERVER", 2, "search item adding found item");
            foundItems.addElement(pp);
            String privs = pp.getProperty("privs", "");
            if (privs.indexOf("(comment") >= 0)
              privs = String.valueOf(privs.substring(0, privs.indexOf("(comment"))) + privs.substring(privs.indexOf(")", privs.indexOf("(comment"))); 
            privs = Common.replace_str(privs, "(inherited)", "");
            String current_dir2 = pp.getProperty("root_dir");
            if (current_dir2.toUpperCase().startsWith(thisSession.SG("root_dir").toUpperCase()))
              current_dir2 = current_dir2.substring(thisSession.SG("root_dir").length() - 1); 
            pp.put("privs", String.valueOf(privs) + "(comment" + Common.url_encode("Containing Folder:<a href='" + current_dir2 + "'>" + current_dir2 + "</a>") + ")");
          } 
        } 
      } catch (Exception e) {
        Log.log("HTTP_SERVER", 1, e);
        if (errors++ > 1000)
          break; 
      } 
    } 
    Properties listingProp = getListingInfo(foundItems, thisSession.SG("root_dir"), "(VIEW)", false, thisSession.uVFS, false, true, thisSession, true);
    String altList = AgentUI.getJsonListObj(listingProp, ServerStatus.BG("exif_listings"));
    String info = "{\r\n";
    info = String.valueOf(info) + "\t\"privs\" : \"" + listingProp.getProperty("privs", "").trim().replaceAll("\"", "%22").replaceAll("\t", "%09") + "\",\r\n";
    info = String.valueOf(info) + "\t\"path\" : \"" + listingProp.getProperty("path", "").trim().replaceAll("\"", "%22").replaceAll("\t", "%09") + "\",\r\n";
    info = String.valueOf(info) + "\t\"defaultStrings\" : \"" + listingProp.getProperty("defaultStrings", "").trim() + "\",\r\n";
    info = String.valueOf(info) + "\t\"site\" : \"" + listingProp.getProperty("site", "").trim() + "\",\r\n";
    info = String.valueOf(info) + "\t\"quota\" : \"" + listingProp.getProperty("quota", "").trim() + "\",\r\n";
    info = String.valueOf(info) + "\t\"quota_bytes\" : \"" + listingProp.getProperty("quota_bytes", "").trim() + "\",\r\n";
    info = String.valueOf(info) + "\t\"listing\" : " + altList + "\r\n";
    info = String.valueOf(info) + "}\r\n";
    return info;
  }
  
  public static void handleCustomizations(Vector customizations, SessionCrush session) {
    boolean hasLogo = false;
    Properties footer = null;
    for (int x = 0; x < customizations.size(); x++) {
      Properties pp = customizations.elementAt(x);
      String key = pp.getProperty("key");
      if (key.startsWith("flash_")) {
        key = key.substring("flash_".length());
        pp.put("key", key);
      } 
      pp.put("value", ServerStatus.thisObj.change_vars_to_values(pp.getProperty("value", ""), session));
      if (key.equals("logo"))
        hasLogo = true; 
      if (key.equals("footer"))
        footer = pp; 
    } 
    if (!hasLogo && !ServerStatus.SG("default_logo").equals("")) {
      Properties pp = new Properties();
      pp.put("key", "logo");
      pp.put("value", ServerStatus.SG("default_logo"));
      customizations.addElement(pp);
    } 
    if (footer == null) {
      footer = new Properties();
      footer.put("key", "footer");
      footer.put("value", "");
      customizations.addElement(footer);
    } 
    footer.put("value", String.valueOf(footer.getProperty("value")) + ServerStatus.SG("webFooterText"));
  }
}
